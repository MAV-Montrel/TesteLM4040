

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 09 08:40:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   100                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   101  0000                     
   102                           ; Version 2.10
   103                           ; Generated 31/07/2019 GMT
   104                           ; 
   105                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   106                           ; All rights reserved.
   107                           ; 
   108                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   109                           ; 
   110                           ; Redistribution and use in source and binary forms, with or without modification, are
   111                           ; permitted provided that the following conditions are met:
   112                           ; 
   113                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   114                           ;        conditions and the following disclaimer.
   115                           ; 
   116                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   117                           ;        of conditions and the following disclaimer in the documentation and/or other
   118                           ;        materials provided with the distribution.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC18F46K80 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136  0000                     
   137                           	psect	idataBANK0
   138  0050DA                     __pidataBANK0:
   139                           	opt callstack 0
   140                           
   141                           ;initializer for _dataeeData
   142  0050DA  55                 	db	85
   143                           
   144                           	psect	idataBANK1
   145  0050D2                     __pidataBANK1:
   146                           	opt callstack 0
   147                           
   148                           ;initializer for _dataeeAddr
   149  0050D2  0010               	dw	16
   150                           
   151                           	psect	nvBANK0
   152  0000FD                     __pnvBANK0:
   153                           	opt callstack 0
   154  0000FD                     _timer0ReloadVal:
   155                           	opt callstack 0
   156  0000FD                     	ds	2
   157                           
   158                           	psect	nvBANK1
   159  0001D8                     __pnvBANK1:
   160                           	opt callstack 0
   161  0001D8                     _count_aux:
   162                           	opt callstack 0
   163  0001D8                     	ds	2
   164  0001DA                     _TMR0_InterruptHandler:
   165                           	opt callstack 0
   166  0001DA                     	ds	2
   167  0000                     _WPUB	set	3931
   168  0000                     _ANCON1	set	3932
   169  0000                     _ANCON0	set	3933
   170  0000                     _PIR4bits	set	4023
   171  0000                     _EEDATA	set	3955
   172  0000                     _EEADR	set	3956
   173  0000                     _EEADRH	set	3957
   174  0000                     _EECON2	set	3966
   175  0000                     _EECON1bits	set	3967
   176  0000                     _TABLAT	set	4085
   177  0000                     _TBLPTRL	set	4086
   178  0000                     _TBLPTRH	set	4087
   179  0000                     _TBLPTRU	set	4088
   180  0000                     _LATEbits	set	3981
   181  0000                     _PORTEbits	set	3972
   182  0000                     _LATDbits	set	3980
   183  0000                     _T0CON	set	4053
   184  0000                     _TMR0L	set	4054
   185  0000                     _TMR0H	set	4055
   186  0000                     _T0CONbits	set	4053
   187  0000                     _RCONbits	set	4048
   188  0000                     _REFOCON	set	3994
   189  0000                     _OSCTUNE	set	3995
   190  0000                     _OSCCON2	set	4050
   191  0000                     _OSCCON	set	4051
   192  0000                     _INTCONbits	set	4082
   193  0000                     _INTCON2bits	set	4081
   194  0000                     _TRISD	set	3989
   195  0000                     _TRISC	set	3988
   196  0000                     _TRISB	set	3987
   197  0000                     _TRISA	set	3986
   198  0000                     _TRISE	set	3990
   199  0000                     _LATC	set	3979
   200  0000                     _LATB	set	3978
   201  0000                     _LATA	set	3977
   202  0000                     _LATD	set	3980
   203  0000                     _LATE	set	3981
   204  0000                     _ADCON0bits	set	4034
   205  0000                     _ADRESL	set	4035
   206  0000                     _ADRESH	set	4036
   207  0000                     _ADCON2	set	4032
   208  0000                     _ADCON1	set	4033
   209  0000                     _ADCON0	set	4034
   210                           
   211                           	psect	smallconst
   212  000F00                     __psmallconst:
   213                           	opt callstack 0
   214  000F00  00                 	db	0
   215  000F01                     STR_8:
   216                           
   217                           ; BSR set to: 0
   218  000F01  20                 	db	32
   219  000F02  20                 	db	32
   220  000F03  20                 	db	32
   221  000F04  20                 	db	32
   222  000F05  20                 	db	32
   223  000F06  20                 	db	32
   224  000F07  20                 	db	32
   225  000F08  20                 	db	32
   226  000F09  20                 	db	32
   227  000F0A  20                 	db	32
   228  000F0B  20                 	db	32
   229  000F0C  20                 	db	32
   230  000F0D  20                 	db	32
   231  000F0E  20                 	db	32
   232  000F0F  20                 	db	32
   233  000F10  00                 	db	0
   234  000F11                     STR_7:
   235                           
   236                           ; BSR set to: 0
   237  000F11  20                 	db	32
   238  000F12  20                 	db	32
   239  000F13  41                 	db	65	;'A'
   240  000F14  70                 	db	112	;'p'
   241  000F15  72                 	db	114	;'r'
   242  000F16  6F                 	db	111	;'o'
   243  000F17  76                 	db	118	;'v'
   244  000F18  61                 	db	97	;'a'
   245  000F19  64                 	db	100	;'d'
   246  000F1A  6F                 	db	111	;'o'
   247  000F1B  20                 	db	32
   248  000F1C  20                 	db	32
   249  000F1D  20                 	db	32
   250  000F1E  20                 	db	32
   251  000F1F  20                 	db	32
   252  000F20  00                 	db	0
   253  000F21                     STR_5:
   254                           
   255                           ; BSR set to: 0
   256  000F21  20                 	db	32
   257  000F22  20                 	db	32
   258  000F23  54                 	db	84	;'T'
   259  000F24  65                 	db	101	;'e'
   260  000F25  73                 	db	115	;'s'
   261  000F26  74                 	db	116	;'t'
   262  000F27  61                 	db	97	;'a'
   263  000F28  6E                 	db	110	;'n'
   264  000F29  64                 	db	100	;'d'
   265  000F2A  6F                 	db	111	;'o'
   266  000F2B  20                 	db	32
   267  000F2C  20                 	db	32
   268  000F2D  20                 	db	32
   269  000F2E  20                 	db	32
   270  000F2F  20                 	db	32
   271  000F30  00                 	db	0
   272  000F31                     STR_9:
   273                           
   274                           ; BSR set to: 0
   275  000F31  20                 	db	32
   276  000F32  20                 	db	32
   277  000F33  52                 	db	82	;'R'
   278  000F34  65                 	db	101	;'e'
   279  000F35  70                 	db	112	;'p'
   280  000F36  72                 	db	114	;'r'
   281  000F37  6F                 	db	111	;'o'
   282  000F38  76                 	db	118	;'v'
   283  000F39  61                 	db	97	;'a'
   284  000F3A  64                 	db	100	;'d'
   285  000F3B  6F                 	db	111	;'o'
   286  000F3C  20                 	db	32
   287  000F3D  20                 	db	32
   288  000F3E  20                 	db	32
   289  000F3F  20                 	db	32
   290  000F40  00                 	db	0
   291  000F41                     STR_3:
   292                           
   293                           ; BSR set to: 0
   294  000F41  50                 	db	80	;'P'
   295  000F42  6F                 	db	111	;'o'
   296  000F43  73                 	db	115	;'s'
   297  000F44  69                 	db	105	;'i'
   298  000F45  63                 	db	99	;'c'
   299  000F46  69                 	db	105	;'i'
   300  000F47  6F                 	db	111	;'o'
   301  000F48  6E                 	db	110	;'n'
   302  000F49  65                 	db	101	;'e'
   303  000F4A  20                 	db	32
   304  000F4B  61                 	db	97	;'a'
   305  000F4C  20                 	db	32
   306  000F4D  50                 	db	80	;'P'
   307  000F4E  43                 	db	67	;'C'
   308  000F4F  42                 	db	66	;'B'
   309  000F50  00                 	db	0
   310  000F51                     STR_6:
   311                           
   312                           ; BSR set to: 0
   313  000F51  45                 	db	69	;'E'
   314  000F52  3A                 	db	58	;':'
   315  000F53  25                 	db	37
   316  000F54  30                 	db	48	;'0'
   317  000F55  33                 	db	51	;'3'
   318  000F56  75                 	db	117	;'u'
   319  000F57  20                 	db	32
   320  000F58  4D                 	db	77	;'M'
   321  000F59  3A                 	db	58	;':'
   322  000F5A  25                 	db	37
   323  000F5B  2E                 	db	46
   324  000F5C  33                 	db	51	;'3'
   325  000F5D  66                 	db	102	;'f'
   326  000F5E  6D                 	db	109	;'m'
   327  000F5F  56                 	db	86	;'V'
   328  000F60  00                 	db	0
   329  000F61                     STR_1:
   330                           
   331                           ; BSR set to: 0
   332  000F61  20                 	db	32
   333  000F62  20                 	db	32
   334  000F63  43                 	db	67	;'C'
   335  000F64  61                 	db	97	;'a'
   336  000F65  6C                 	db	108	;'l'
   337  000F66  69                 	db	105	;'i'
   338  000F67  62                 	db	98	;'b'
   339  000F68  72                 	db	114	;'r'
   340  000F69  61                 	db	97	;'a'
   341  000F6A  6E                 	db	110	;'n'
   342  000F6B  64                 	db	100	;'d'
   343  000F6C  6F                 	db	111	;'o'
   344  000F6D  2E                 	db	46
   345  000F6E  2E                 	db	46
   346  000F6F  00                 	db	0
   347  000F70                     STR_2:
   348                           
   349                           ; BSR set to: 0
   350  000F70  41                 	db	65	;'A'
   351  000F71  44                 	db	68	;'D'
   352  000F72  3A                 	db	58	;':'
   353  000F73  25                 	db	37
   354  000F74  75                 	db	117	;'u'
   355  000F75  20                 	db	32
   356  000F76  41                 	db	65	;'A'
   357  000F77  52                 	db	82	;'R'
   358  000F78  3A                 	db	58	;':'
   359  000F79  25                 	db	37
   360  000F7A  75                 	db	117	;'u'
   361  000F7B  20                 	db	32
   362  000F7C  00                 	db	0
   363  000F7D                     STR_11:
   364                           
   365                           ; BSR set to: 0
   366  000F7D  49                 	db	73	;'I'
   367  000F7E  4E                 	db	78	;'N'
   368  000F7F  46                 	db	70	;'F'
   369  000F80  00                 	db	0
   370  000F81                     STR_15:
   371                           
   372                           ; BSR set to: 0
   373  000F81  4E                 	db	78	;'N'
   374  000F82  41                 	db	65	;'A'
   375  000F83  4E                 	db	78	;'N'
   376  000F84  00                 	db	0
   377  000F85                     STR_12:
   378                           
   379                           ; BSR set to: 0
   380  000F85  69                 	db	105	;'i'
   381  000F86  6E                 	db	110	;'n'
   382  000F87  66                 	db	102	;'f'
   383  000F88  00                 	db	0
   384  000F89                     STR_16:
   385                           
   386                           ; BSR set to: 0
   387  000F89  6E                 	db	110	;'n'
   388  000F8A  61                 	db	97	;'a'
   389  000F8B  6E                 	db	110	;'n'
   390  000F8C  00                 	db	0
   391  000F8D                     STR_19:
   392                           
   393                           ; BSR set to: 0
   394  000F8D  6C                 	db	108	;'l'
   395  000F8E  66                 	db	102	;'f'
   396  000F8F  00                 	db	0
   397  0000                     
   398                           ; #config settings
   399  000F90  00                 	db	0	; dummy byte at the end
   400  0000                     
   401                           	psect	cinit
   402  004ACE                     __pcinit:
   403                           	opt callstack 0
   404  004ACE                     start_initialization:
   405                           	opt callstack 0
   406  004ACE                     __initialization:
   407                           	opt callstack 0
   408                           
   409                           ; Initialize objects allocated to BANK1 (2 bytes)
   410                           ; load TBLPTR registers with __pidataBANK1
   411  004ACE  0ED2               	movlw	low __pidataBANK1
   412  004AD0  6EF6               	movwf	tblptrl,c
   413  004AD2  0E50               	movlw	high __pidataBANK1
   414  004AD4  6EF7               	movwf	tblptrh,c
   415  004AD6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   416  004AD8  6EF8               	movwf	tblptru,c
   417  004ADA  0009               	tblrd		*+	;fetch initializer
   418  004ADC  CFF5 F1E0          	movff	tablat,__pdataBANK1
   419  004AE0  0009               	tblrd		*+	;fetch initializer
   420  004AE2  CFF5 F1E1          	movff	tablat,__pdataBANK1+1
   421                           
   422                           ; Initialize objects allocated to BANK0 (1 bytes)
   423                           ; load TBLPTR registers with __pidataBANK0
   424  004AE6  0EDA               	movlw	low __pidataBANK0
   425  004AE8  6EF6               	movwf	tblptrl,c
   426  004AEA  0E50               	movlw	high __pidataBANK0
   427  004AEC  6EF7               	movwf	tblptrh,c
   428  004AEE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   429  004AF0  6EF8               	movwf	tblptru,c
   430  004AF2  0009               	tblrd		*+	;fetch initializer
   431  004AF4  CFF5 F0FF          	movff	tablat,__pdataBANK0
   432                           
   433                           ; Clear objects allocated to BANK1 (216 bytes)
   434  004AF8  EE01  F000         	lfsr	0,__pbssBANK1
   435  004AFC  0ED8               	movlw	216
   436  004AFE                     clear_0:
   437  004AFE  6AEE               	clrf	postinc0,c
   438  004B00  06E8               	decf	wreg,f,c
   439  004B02  E1FD               	bnz	clear_0
   440                           
   441                           ; Clear objects allocated to BANK0 (57 bytes)
   442  004B04  EE00  F0C4         	lfsr	0,__pbssBANK0
   443  004B08  0E39               	movlw	57
   444  004B0A                     clear_1:
   445  004B0A  6AEE               	clrf	postinc0,c
   446  004B0C  06E8               	decf	wreg,f,c
   447  004B0E  E1FD               	bnz	clear_1
   448                           
   449                           ; Clear objects allocated to COMRAM (7 bytes)
   450  004B10  EE00  F054         	lfsr	0,__pbssCOMRAM
   451  004B14  0E07               	movlw	7
   452  004B16                     clear_2:
   453  004B16  6AEE               	clrf	postinc0,c
   454  004B18  06E8               	decf	wreg,f,c
   455  004B1A  E1FD               	bnz	clear_2
   456  004B1C                     end_of_initialization:
   457                           	opt callstack 0
   458  004B1C                     __end_of__initialization:
   459                           	opt callstack 0
   460  004B1C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   461  004B1E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   462  004B20  0100               	movlb	0
   463  004B22  EFE0  F027         	goto	_main	;jump to C main() function
   464                           
   465                           	psect	bssCOMRAM
   466  000054                     __pbssCOMRAM:
   467                           	opt callstack 0
   468  000054                     _prec:
   469                           	opt callstack 0
   470  000054                     	ds	2
   471  000056                     _difan:
   472                           	opt callstack 0
   473  000056                     	ds	2
   474  000058                     _tensaoreferencia:
   475                           	opt callstack 0
   476  000058                     	ds	2
   477  00005A                     _readData:
   478                           	opt callstack 0
   479  00005A                     	ds	1
   480                           
   481                           	psect	bssBANK0
   482  0000C4                     __pbssBANK0:
   483                           	opt callstack 0
   484  0000C4                     _state:
   485                           	opt callstack 0
   486  0000C4                     	ds	5
   487  0000C9                     exibetensao@tick:
   488                           	opt callstack 0
   489  0000C9                     	ds	4
   490  0000CD                     AtualizaDisplay@tick:
   491                           	opt callstack 0
   492  0000CD                     	ds	4
   493  0000D1                     AppTesteLM4040_Testando@tick:
   494                           	opt callstack 0
   495  0000D1                     	ds	4
   496  0000D5                     AppTesteLM4040_IdentificaMudanca@tick:
   497                           	opt callstack 0
   498  0000D5                     	ds	4
   499  0000D9                     AppTesteLM4040_Calibrando@tick:
   500                           	opt callstack 0
   501  0000D9                     	ds	4
   502  0000DD                     _LeituraAD:
   503                           	opt callstack 0
   504  0000DD                     	ds	4
   505  0000E1                     _nout:
   506                           	opt callstack 0
   507  0000E1                     	ds	2
   508  0000E3                     _width:
   509                           	opt callstack 0
   510  0000E3                     	ds	2
   511  0000E5                     _flags:
   512                           	opt callstack 0
   513  0000E5                     	ds	2
   514  0000E7                     AppTesteLM4040_IdentificaMudanca@cont_tempo:
   515                           	opt callstack 0
   516  0000E7                     	ds	2
   517  0000E9                     AppTesteLM4040_Calibrando@cont_tempo:
   518                           	opt callstack 0
   519  0000E9                     	ds	2
   520  0000EB                     _cont_tempo:
   521                           	opt callstack 0
   522  0000EB                     	ds	2
   523  0000ED                     _erromedido:
   524                           	opt callstack 0
   525  0000ED                     	ds	2
   526  0000EF                     _vMax:
   527                           	opt callstack 0
   528  0000EF                     	ds	2
   529  0000F1                     _telaDisplay:
   530                           	opt callstack 0
   531  0000F1                     	ds	2
   532  0000F3                     _contadorteste:
   533                           	opt callstack 0
   534  0000F3                     	ds	2
   535  0000F5                     _ADC_InterruptHandler:
   536                           	opt callstack 0
   537  0000F5                     	ds	2
   538  0000F7                     ServiceAD_Media@accumulated:
   539                           	opt callstack 0
   540  0000F7                     	ds	1
   541  0000F8                     _flag_medindoerro:
   542                           	opt callstack 0
   543  0000F8                     	ds	1
   544  0000F9                     _tickRate:
   545                           	opt callstack 0
   546  0000F9                     	ds	4
   547                           
   548                           	psect	dataBANK0
   549  0000FF                     __pdataBANK0:
   550                           	opt callstack 0
   551  0000FF                     _dataeeData:
   552                           	opt callstack 0
   553  0000FF                     	ds	1
   554                           
   555                           	psect	bssBANK1
   556  000100                     __pbssBANK1:
   557                           	opt callstack 0
   558  000100                     ServiceAD_Media@mean:
   559                           	opt callstack 0
   560  000100                     	ds	40
   561  000128                     _data:
   562                           	opt callstack 0
   563  000128                     	ds	16
   564  000138                     floorf@F524:
   565                           	opt callstack 0
   566  000138                     	ds	4
   567  00013C                     ___fpclassifyf@F463:
   568                           	opt callstack 0
   569  00013C                     	ds	4
   570  000140                     exibetensao@tickLast:
   571                           	opt callstack 0
   572  000140                     	ds	4
   573  000144                     AtualizaDisplay@tickLast:
   574                           	opt callstack 0
   575  000144                     	ds	4
   576  000148                     AppTesteLM4040_Testando@tickLast:
   577                           	opt callstack 0
   578  000148                     	ds	4
   579  00014C                     AppTesteLM4040_IdentificaMudanca@tickLast:
   580                           	opt callstack 0
   581  00014C                     	ds	4
   582  000150                     AppTesteLM4040_Calibrando@tickLast:
   583                           	opt callstack 0
   584  000150                     	ds	4
   585  000154                     _tensaoexibe:
   586                           	opt callstack 0
   587  000154                     	ds	4
   588  000158                     _auxreferenica:
   589                           	opt callstack 0
   590  000158                     	ds	4
   591  00015C                     _auxconvert:
   592                           	opt callstack 0
   593  00015C                     	ds	4
   594  000160                     _contTeste:
   595                           	opt callstack 0
   596  000160                     	ds	2
   597  000162                     _tensao:
   598                           	opt callstack 0
   599  000162                     	ds	2
   600  000164                     _convertedValueTensao:
   601                           	opt callstack 0
   602  000164                     	ds	2
   603  000166                     _errodif:
   604                           	opt callstack 0
   605  000166                     	ds	2
   606  000168                     _dbuf:
   607                           	opt callstack 0
   608  000168                     	ds	80
   609  0001B8                     _txtLinha2:
   610                           	opt callstack 0
   611  0001B8                     	ds	16
   612  0001C8                     _txtLinha1:
   613                           	opt callstack 0
   614  0001C8                     	ds	16
   615                           
   616                           	psect	dataBANK1
   617  0001E0                     __pdataBANK1:
   618                           	opt callstack 0
   619  0001E0                     _dataeeAddr:
   620                           	opt callstack 0
   621  0001E0                     	ds	2
   622                           
   623                           	psect	cstackBANK1
   624  0001DC                     __pcstackBANK1:
   625                           	opt callstack 0
   626  0001DC                     ??_AtualizaDisplay:
   627                           
   628                           ; 1 bytes @ 0x0
   629  0001DC                     	ds	4
   630                           
   631                           	psect	cstackBANK0
   632  000060                     __pcstackBANK0:
   633                           	opt callstack 0
   634  000060                     efgtoa@ou:
   635                           	opt callstack 0
   636                           
   637                           ; 4 bytes @ 0x0
   638  000060                     	ds	4
   639  000064                     _efgtoa$1162:
   640                           	opt callstack 0
   641                           
   642                           ; 2 bytes @ 0x4
   643  000064                     	ds	2
   644  000066                     _efgtoa$1163:
   645                           	opt callstack 0
   646                           
   647                           ; 2 bytes @ 0x6
   648  000066                     	ds	2
   649  000068                     _efgtoa$1168:
   650                           	opt callstack 0
   651                           
   652                           ; 2 bytes @ 0x8
   653  000068                     	ds	2
   654  00006A                     _efgtoa$1172:
   655                           	opt callstack 0
   656                           
   657                           ; 2 bytes @ 0xA
   658  00006A                     	ds	2
   659  00006C                     _efgtoa$1173:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0xC
   663  00006C                     	ds	2
   664  00006E                     _efgtoa$1174:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0xE
   668  00006E                     	ds	2
   669  000070                     efgtoa@t:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x10
   673  000070                     	ds	2
   674  000072                     efgtoa@pp:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0x12
   678  000072                     	ds	2
   679  000074                     efgtoa@m:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0x14
   683  000074                     	ds	2
   684  000076                     efgtoa@ne:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0x16
   688  000076                     	ds	2
   689  000078                     efgtoa@d:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x18
   693  000078                     	ds	2
   694  00007A                     efgtoa@sign:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0x1A
   698  00007A                     	ds	2
   699  00007C                     efgtoa@p:
   700                           	opt callstack 0
   701                           
   702                           ; 2 bytes @ 0x1C
   703  00007C                     	ds	2
   704  00007E                     efgtoa@nmode:
   705                           	opt callstack 0
   706                           
   707                           ; 1 bytes @ 0x1E
   708  00007E                     	ds	1
   709  00007F                     efgtoa@w:
   710                           	opt callstack 0
   711                           
   712                           ; 2 bytes @ 0x1F
   713  00007F                     	ds	2
   714  000081                     efgtoa@mode:
   715                           	opt callstack 0
   716                           
   717                           ; 1 bytes @ 0x21
   718  000081                     	ds	1
   719  000082                     efgtoa@h:
   720                           	opt callstack 0
   721                           
   722                           ; 4 bytes @ 0x22
   723  000082                     	ds	4
   724  000086                     efgtoa@l:
   725                           	opt callstack 0
   726                           
   727                           ; 4 bytes @ 0x26
   728  000086                     	ds	4
   729  00008A                     efgtoa@i:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x2A
   733  00008A                     	ds	2
   734  00008C                     efgtoa@g:
   735                           	opt callstack 0
   736                           
   737                           ; 4 bytes @ 0x2C
   738  00008C                     	ds	4
   739  000090                     efgtoa@e:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x30
   743  000090                     	ds	2
   744  000092                     efgtoa@n:
   745                           	opt callstack 0
   746                           
   747                           ; 2 bytes @ 0x32
   748  000092                     	ds	2
   749  000094                     efgtoa@u:
   750                           	opt callstack 0
   751                           
   752                           ; 4 bytes @ 0x34
   753  000094                     	ds	4
   754  000098                     vfpfcnvrt@llu:
   755                           	opt callstack 0
   756                           
   757                           ; 8 bytes @ 0x38
   758  000098                     	ds	8
   759  0000A0                     vfpfcnvrt@done:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x40
   763  0000A0                     	ds	2
   764  0000A2                     _vfpfcnvrt$1195:
   765                           	opt callstack 0
   766                           
   767                           ; 2 bytes @ 0x42
   768  0000A2                     	ds	2
   769  0000A4                     _vfpfcnvrt$1196:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0x44
   773  0000A4                     	ds	2
   774  0000A6                     _vfpfcnvrt$1200:
   775                           	opt callstack 0
   776                           
   777                           ; 2 bytes @ 0x46
   778  0000A6                     	ds	2
   779  0000A8                     vfpfcnvrt@f:
   780                           	opt callstack 0
   781                           
   782                           ; 4 bytes @ 0x48
   783  0000A8                     	ds	4
   784  0000AC                     vfpfcnvrt@ct:
   785                           	opt callstack 0
   786                           
   787                           ; 3 bytes @ 0x4C
   788  0000AC                     	ds	3
   789  0000AF                     vfpfcnvrt@c:
   790                           	opt callstack 0
   791                           
   792                           ; 1 bytes @ 0x4F
   793  0000AF                     	ds	1
   794  0000B0                     ?_sprintf:
   795                           	opt callstack 0
   796  0000B0                     sprintf@s:
   797                           	opt callstack 0
   798                           
   799                           ; 2 bytes @ 0x50
   800  0000B0                     	ds	2
   801  0000B2                     sprintf@fmt:
   802                           	opt callstack 0
   803                           
   804                           ; 2 bytes @ 0x52
   805  0000B2                     	ds	10
   806  0000BC                     sprintf@ap:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x5C
   810  0000BC                     	ds	2
   811  0000BE                     sprintf@f:
   812                           	opt callstack 0
   813                           
   814                           ; 6 bytes @ 0x5E
   815  0000BE                     	ds	6
   816                           
   817                           	psect	cstackCOMRAM
   818  000001                     __pcstackCOMRAM:
   819                           	opt callstack 0
   820  000001                     ??_INTERRUPT_InterruptManager:
   821  000001                     
   822                           ; 1 bytes @ 0x0
   823  000001                     	ds	2
   824  000003                     ??_ADC_StartConversion:
   825  000003                     ?_strlen:
   826                           	opt callstack 0
   827  000003                     ?___fpclassifyf:
   828                           	opt callstack 0
   829  000003                     ?_isupper:
   830                           	opt callstack 0
   831  000003                     ?_isdigit:
   832                           	opt callstack 0
   833  000003                     ?_strncmp:
   834                           	opt callstack 0
   835  000003                     ?_isspace:
   836                           	opt callstack 0
   837  000003                     ?_ADC_GetConversionResult:
   838                           	opt callstack 0
   839  000003                     ?___wmul:
   840                           	opt callstack 0
   841  000003                     ?___awdiv:
   842                           	opt callstack 0
   843  000003                     ?___awmod:
   844                           	opt callstack 0
   845  000003                     ?___fladd:
   846                           	opt callstack 0
   847  000003                     ?___fldiv:
   848                           	opt callstack 0
   849  000003                     ?_SRV_TIMER_GetTick:
   850                           	opt callstack 0
   851  000003                     ?___lldiv:
   852                           	opt callstack 0
   853  000003                     ?___flneg:
   854                           	opt callstack 0
   855  000003                     ?___fltol:
   856                           	opt callstack 0
   857  000003                     ?___xxtofl:
   858                           	opt callstack 0
   859  000003                     ?___lodiv:
   860                           	opt callstack 0
   861  000003                     ?___lomod:
   862                           	opt callstack 0
   863  000003                     DRV_LCD_Data@data:
   864                           	opt callstack 0
   865  000003                     TMR0_SetInterruptHandler@InterruptHandler:
   866                           	opt callstack 0
   867  000003                     DATAEE_WriteByte@bAdd:
   868                           	opt callstack 0
   869  000003                     DATAEE_ReadByte@bAdd:
   870                           	opt callstack 0
   871  000003                     ___wmul@multiplier:
   872                           	opt callstack 0
   873  000003                     ___awdiv@dividend:
   874                           	opt callstack 0
   875  000003                     ___awmod@dividend:
   876                           	opt callstack 0
   877  000003                     isdigit@c:
   878                           	opt callstack 0
   879  000003                     isspace@c:
   880                           	opt callstack 0
   881  000003                     isupper@c:
   882                           	opt callstack 0
   883  000003                     fputc@c:
   884                           	opt callstack 0
   885  000003                     strcpy@dest:
   886                           	opt callstack 0
   887  000003                     strlen@s:
   888                           	opt callstack 0
   889  000003                     strncmp@_l:
   890                           	opt callstack 0
   891  000003                     ___lldiv@dividend:
   892                           	opt callstack 0
   893  000003                     ___fleq@ff1:
   894                           	opt callstack 0
   895  000003                     ___flneg@f1:
   896                           	opt callstack 0
   897  000003                     ___fltol@f1:
   898                           	opt callstack 0
   899  000003                     ___fladd@b:
   900                           	opt callstack 0
   901  000003                     ___fldiv@b:
   902                           	opt callstack 0
   903  000003                     ___xxtofl@val:
   904                           	opt callstack 0
   905  000003                     ___fpclassifyf@x:
   906                           	opt callstack 0
   907  000003                     ___lodiv@dividend:
   908                           	opt callstack 0
   909  000003                     ___lomod@dividend:
   910                           	opt callstack 0
   911                           
   912                           ; 8 bytes @ 0x2
   913  000003                     	ds	1
   914  000004                     ??_DRV_LCD_Cmd:
   915  000004                     ADC_StartConversion@channel:
   916                           	opt callstack 0
   917  000004                     DRV_LCD_WriteChar@temp:
   918                           	opt callstack 0
   919                           
   920                           ; 1 bytes @ 0x3
   921  000004                     	ds	1
   922  000005                     ??_TMR0_Initialize:
   923  000005                     ??_isupper:
   924  000005                     ??_isdigit:
   925  000005                     ??_isspace:
   926  000005                     ??_ADC_GetConversionResult:
   927  000005                     DRV_LCD_Cmd@cmd:
   928                           	opt callstack 0
   929  000005                     DRV_LCD_WriteChar@y:
   930                           	opt callstack 0
   931  000005                     DATAEE_WriteByte@bData:
   932                           	opt callstack 0
   933  000005                     ___wmul@multiplicand:
   934                           	opt callstack 0
   935  000005                     ___awdiv@divisor:
   936                           	opt callstack 0
   937  000005                     ___awmod@divisor:
   938                           	opt callstack 0
   939  000005                     fputc@fp:
   940                           	opt callstack 0
   941  000005                     strcpy@src:
   942                           	opt callstack 0
   943  000005                     strlen@a:
   944                           	opt callstack 0
   945  000005                     strncmp@_r:
   946                           	opt callstack 0
   947                           
   948                           ; 2 bytes @ 0x4
   949  000005                     	ds	1
   950  000006                     ??_DRV_LCD_Init:
   951  000006                     DRV_LCD_SetCursor@coluna:
   952                           	opt callstack 0
   953  000006                     DRV_LCD_WriteChar@data:
   954                           	opt callstack 0
   955  000006                     DATAEE_WriteByte@GIEBitValue:
   956                           	opt callstack 0
   957                           
   958                           ; 1 bytes @ 0x5
   959  000006                     	ds	1
   960  000007                     ??_exibetensao:
   961  000007                     ??_AppTesteLM4040_Calibrando:
   962  000007                     ??_AppTesteLM4040_IdentificaMudanca:
   963  000007                     ??_fputc:
   964  000007                     ??___fpclassifyf:
   965  000007                     ??_strcpy:
   966  000007                     ??___fltol:
   967  000007                     ??___xxtofl:
   968  000007                     DRV_LCD_SetCursor@linha:
   969                           	opt callstack 0
   970  000007                     ___awdiv@counter:
   971                           	opt callstack 0
   972  000007                     ___awmod@counter:
   973                           	opt callstack 0
   974  000007                     DRV_LCD_WriteString@data:
   975                           	opt callstack 0
   976  000007                     ___wmul@product:
   977                           	opt callstack 0
   978  000007                     strncmp@n:
   979                           	opt callstack 0
   980  000007                     ___lldiv@divisor:
   981                           	opt callstack 0
   982  000007                     ___fleq@ff2:
   983                           	opt callstack 0
   984  000007                     ___fladd@a:
   985                           	opt callstack 0
   986  000007                     ___fldiv@a:
   987                           	opt callstack 0
   988                           
   989                           ; 4 bytes @ 0x6
   990  000007                     	ds	1
   991  000008                     DRV_LCD_SetCursor@z:
   992                           	opt callstack 0
   993  000008                     ___awdiv@sign:
   994                           	opt callstack 0
   995  000008                     ___awmod@sign:
   996                           	opt callstack 0
   997                           
   998                           ; 1 bytes @ 0x7
   999  000008                     	ds	1
  1000  000009                     ??_strncmp:
  1001  000009                     ?_tolower:
  1002                           	opt callstack 0
  1003  000009                     DRV_LCD_SetCursor@y:
  1004                           	opt callstack 0
  1005  000009                     _isspace$1703:
  1006                           	opt callstack 0
  1007  000009                     DRV_LCD_WriteString@i:
  1008                           	opt callstack 0
  1009  000009                     ___awdiv@quotient:
  1010                           	opt callstack 0
  1011  000009                     strcpy@s:
  1012                           	opt callstack 0
  1013  000009                     tolower@c:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x8
  1017  000009                     	ds	1
  1018  00000A                     ?_atoi:
  1019                           	opt callstack 0
  1020  00000A                     DRV_LCD_SetCursor@temp:
  1021                           	opt callstack 0
  1022  00000A                     atoi@s:
  1023                           	opt callstack 0
  1024  00000A                     strncmp@l:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x9
  1028  00000A                     	ds	1
  1029  00000B                     ??_tolower:
  1030  00000B                     ??___fladd:
  1031  00000B                     ??___fldiv:
  1032  00000B                     ??___fleq:
  1033  00000B                     SRV_Display_Write@coluna:
  1034                           	opt callstack 0
  1035  00000B                     SRV_Display_SetCursor@coluna:
  1036                           	opt callstack 0
  1037  00000B                     ___fltol@sign1:
  1038                           	opt callstack 0
  1039  00000B                     ___xxtofl@sign:
  1040                           	opt callstack 0
  1041  00000B                     ___fpclassifyf@e:
  1042                           	opt callstack 0
  1043  00000B                     strcpy@d:
  1044                           	opt callstack 0
  1045  00000B                     ___lldiv@quotient:
  1046                           	opt callstack 0
  1047  00000B                     ___lodiv@divisor:
  1048                           	opt callstack 0
  1049  00000B                     ___lomod@divisor:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 8 bytes @ 0xA
  1053  00000B                     	ds	1
  1054  00000C                     ??_atoi:
  1055  00000C                     SRV_Display_SetCursor@linha:
  1056                           	opt callstack 0
  1057  00000C                     ___fltol@exp1:
  1058                           	opt callstack 0
  1059  00000C                     ___xxtofl@exp:
  1060                           	opt callstack 0
  1061  00000C                     SRV_Display_Write@data:
  1062                           	opt callstack 0
  1063  00000C                     fputs@s:
  1064                           	opt callstack 0
  1065  00000C                     strncmp@r:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 2 bytes @ 0xB
  1069  00000C                     	ds	1
  1070  00000D                     ??_AppTesteLM4040_inicialize:
  1071  00000D                     ___xxtofl@arg:
  1072                           	opt callstack 0
  1073  00000D                     ___fpclassifyf@u:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 4 bytes @ 0xC
  1077  00000D                     	ds	1
  1078  00000E                     SRV_Display_Write@linha:
  1079                           	opt callstack 0
  1080  00000E                     fputs@fp:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 2 bytes @ 0xD
  1084  00000E                     	ds	1
  1085  00000F                     ___lldiv@counter:
  1086                           	opt callstack 0
  1087  00000F                     ___fladd@signs:
  1088                           	opt callstack 0
  1089  00000F                     _tolower$1787:
  1090                           	opt callstack 0
  1091  00000F                     ___fldiv@rem:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 4 bytes @ 0xE
  1095  00000F                     	ds	1
  1096  000010                     ?_ServiceAD_Media:
  1097                           	opt callstack 0
  1098  000010                     ___fladd@aexp:
  1099                           	opt callstack 0
  1100  000010                     fputs@c:
  1101                           	opt callstack 0
  1102  000010                     atoi@neg:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 2 bytes @ 0xF
  1106  000010                     	ds	1
  1107  000011                     ?___flmul:
  1108                           	opt callstack 0
  1109  000011                     ___fladd@bexp:
  1110                           	opt callstack 0
  1111  000011                     fputs@i:
  1112                           	opt callstack 0
  1113  000011                     ___flmul@b:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x10
  1117  000011                     	ds	1
  1118  000012                     ??_ServiceAD_Media:
  1119  000012                     ___fladd@grs:
  1120                           	opt callstack 0
  1121  000012                     _atoi$1672:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x11
  1125  000012                     	ds	1
  1126  000013                     ?_pad:
  1127                           	opt callstack 0
  1128  000013                     ___lomod@counter:
  1129                           	opt callstack 0
  1130  000013                     ___fldiv@sign:
  1131                           	opt callstack 0
  1132  000013                     pad@fp:
  1133                           	opt callstack 0
  1134  000013                     ___lodiv@quotient:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 8 bytes @ 0x12
  1138  000013                     	ds	1
  1139  000014                     ___fldiv@new_exp:
  1140                           	opt callstack 0
  1141  000014                     _atoi$1674:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x13
  1145  000014                     	ds	1
  1146  000015                     pad@buf:
  1147                           	opt callstack 0
  1148  000015                     ___flmul@a:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x14
  1152  000015                     	ds	1
  1153  000016                     _atoi$1673:
  1154                           	opt callstack 0
  1155  000016                     ServiceAD_Media@timeout:
  1156                           	opt callstack 0
  1157  000016                     ___fldiv@grs:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x15
  1161  000016                     	ds	1
  1162  000017                     pad@p:
  1163                           	opt callstack 0
  1164  000017                     atoi@n:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x16
  1168  000017                     	ds	1
  1169  000018                     ServiceAD_Media@conversion:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x17
  1173  000018                     	ds	1
  1174  000019                     ??___flmul:
  1175  000019                     ??_pad:
  1176                           
  1177                           ; 1 bytes @ 0x18
  1178  000019                     	ds	1
  1179  00001A                     ___fldiv@bexp:
  1180                           	opt callstack 0
  1181  00001A                     ServiceAD_Media@valueMean:
  1182                           	opt callstack 0
  1183  00001A                     pad@i:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x19
  1187  00001A                     	ds	1
  1188  00001B                     ___lodiv@counter:
  1189                           	opt callstack 0
  1190  00001B                     ___fldiv@aexp:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 1 bytes @ 0x1A
  1194  00001B                     	ds	1
  1195  00001C                     ?_floorf:
  1196                           	opt callstack 0
  1197  00001C                     pad@w:
  1198                           	opt callstack 0
  1199  00001C                     ServiceAD_Media@valueAux:
  1200                           	opt callstack 0
  1201  00001C                     floorf@x:
  1202                           	opt callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x1B
  1205  00001C                     	ds	1
  1206  00001D                     ___flmul@sign:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x1C
  1210  00001D                     	ds	1
  1211  00001E                     ?_utoa:
  1212                           	opt callstack 0
  1213  00001E                     utoa@fp:
  1214                           	opt callstack 0
  1215  00001E                     ___flmul@grs:
  1216                           	opt callstack 0
  1217                           
  1218                           ; 4 bytes @ 0x1D
  1219  00001E                     	ds	2
  1220  000020                     ??_floorf:
  1221  000020                     ServiceAD_Media@index:
  1222                           	opt callstack 0
  1223  000020                     utoa@d:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 8 bytes @ 0x1F
  1227  000020                     	ds	1
  1228  000021                     
  1229                           ; 1 bytes @ 0x20
  1230  000021                     	ds	1
  1231  000022                     ___flmul@aexp:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 1 bytes @ 0x21
  1235  000022                     	ds	1
  1236  000023                     ___flmul@bexp:
  1237                           	opt callstack 0
  1238                           
  1239                           ; 1 bytes @ 0x22
  1240  000023                     	ds	1
  1241  000024                     ___flmul@prod:
  1242                           	opt callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x23
  1245  000024                     	ds	2
  1246  000026                     floorf@m:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x25
  1250  000026                     	ds	2
  1251  000028                     ??_utoa:
  1252  000028                     ___flmul@temp:
  1253                           	opt callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x27
  1256  000028                     	ds	2
  1257  00002A                     ??_AppTesteLM4040_Testando:
  1258  00002A                     ?___flsub:
  1259                           	opt callstack 0
  1260  00002A                     floorf@e:
  1261                           	opt callstack 0
  1262  00002A                     ___flge@ff1:
  1263                           	opt callstack 0
  1264  00002A                     ___flsub@b:
  1265                           	opt callstack 0
  1266                           
  1267                           ; 4 bytes @ 0x29
  1268  00002A                     	ds	2
  1269  00002C                     floorf@u:
  1270                           	opt callstack 0
  1271                           
  1272                           ; 4 bytes @ 0x2B
  1273  00002C                     	ds	2
  1274  00002E                     ??_AppTesteLM4040_Controller:
  1275  00002E                     ___flge@ff2:
  1276                           	opt callstack 0
  1277  00002E                     ___flsub@a:
  1278                           	opt callstack 0
  1279                           
  1280                           ; 4 bytes @ 0x2D
  1281  00002E                     	ds	2
  1282  000030                     utoa@p:
  1283                           	opt callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x2F
  1286  000030                     	ds	2
  1287  000032                     ??___flge:
  1288  000032                     utoa@w:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x31
  1292  000032                     	ds	2
  1293  000034                     utoa@n:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 8 bytes @ 0x33
  1297  000034                     	ds	2
  1298  000036                     ?_efgtoa:
  1299                           	opt callstack 0
  1300  000036                     efgtoa@fp:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x35
  1304  000036                     	ds	2
  1305  000038                     efgtoa@f:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 4 bytes @ 0x37
  1309  000038                     	ds	4
  1310  00003C                     efgtoa@c:
  1311                           	opt callstack 0
  1312  00003C                     utoa@i:
  1313                           	opt callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x3B
  1316  00003C                     	ds	1
  1317  00003D                     ??_efgtoa:
  1318                           
  1319                           ; 1 bytes @ 0x3C
  1320  00003D                     	ds	5
  1321  000042                     ?_vfpfcnvrt:
  1322                           	opt callstack 0
  1323  000042                     vfpfcnvrt@fp:
  1324                           	opt callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x41
  1327  000042                     	ds	2
  1328  000044                     vfpfcnvrt@fmt:
  1329                           	opt callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x43
  1332  000044                     	ds	2
  1333  000046                     vfpfcnvrt@ap:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x45
  1337  000046                     	ds	2
  1338  000048                     ??_vfpfcnvrt:
  1339                           
  1340                           ; 1 bytes @ 0x47
  1341  000048                     	ds	4
  1342  00004C                     ?_vfprintf:
  1343                           	opt callstack 0
  1344  00004C                     vfprintf@fp:
  1345                           	opt callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x4B
  1348  00004C                     	ds	2
  1349  00004E                     vfprintf@fmt:
  1350                           	opt callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x4D
  1353  00004E                     	ds	2
  1354  000050                     vfprintf@ap:
  1355                           	opt callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x4F
  1358  000050                     	ds	2
  1359  000052                     vfprintf@cfmt:
  1360                           	opt callstack 0
  1361                           
  1362                           ; 2 bytes @ 0x51
  1363  000052                     	ds	2
  1364  000054                     
  1365                           ; 1 bytes @ 0x53
  1366 ;;
  1367 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1368 ;;
  1369 ;; *************** function _main *****************
  1370 ;; Defined at:
  1371 ;;		line 6 in file "main.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels required when called:   13
  1391 ;; This function calls:
  1392 ;;		_AppTesteLM4040_Run
  1393 ;;		_AppTesteLM4040_inicialize
  1394 ;;		_SYSTEM_Initialize
  1395 ;; This function is called by:
  1396 ;;		Startup code after reset
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text0
  1401  004FC0                     __ptext0:
  1402                           	opt callstack 0
  1403  004FC0                     _main:
  1404                           	opt callstack 18
  1405  004FC0                     
  1406                           ;main.c: 9:     SYSTEM_Initialize();
  1407  004FC0  EC04  F028         	call	_SYSTEM_Initialize	;wreg free
  1408  004FC4                     
  1409                           ;main.c: 16:     (INTCONbits.GIE = 1);
  1410  004FC4  8EF2               	bsf	242,7,c	;volatile
  1411  004FC6                     
  1412                           ;main.c: 22:     (INTCONbits.PEIE = 1);
  1413  004FC6  8CF2               	bsf	242,6,c	;volatile
  1414                           
  1415                           ;main.c: 27:      AppTesteLM4040_inicialize();
  1416  004FC8  EC0E  F023         	call	_AppTesteLM4040_inicialize	;wreg free
  1417  004FCC                     l5806:
  1418                           
  1419                           ;main.c: 30:     {;main.c: 33:         AppTesteLM4040_Run();
  1420  004FCC  EC1A  F028         	call	_AppTesteLM4040_Run	;wreg free
  1421  004FD0  EFE6  F027         	goto	l5806
  1422  004FD4  EF1F  F000         	goto	start
  1423  004FD8                     __end_of_main:
  1424                           	opt callstack 0
  1425                           
  1426 ;; *************** function _SYSTEM_Initialize *****************
  1427 ;; Defined at:
  1428 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1446 ;;Total ram usage:        0 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    5
  1449 ;; This function calls:
  1450 ;;		_ADC_Initialize
  1451 ;;		_INTERRUPT_Initialize
  1452 ;;		_OSCILLATOR_Initialize
  1453 ;;		_PIN_MANAGER_Initialize
  1454 ;;		_TMR0_Initialize
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text1
  1461  005008                     __ptext1:
  1462                           	opt callstack 0
  1463  005008                     _SYSTEM_Initialize:
  1464                           	opt callstack 25
  1465  005008                     
  1466                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1467  005008  EC67  F028         	call	_INTERRUPT_Initialize	;wreg free
  1468  00500C                     
  1469                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1470  00500C  EC35  F027         	call	_PIN_MANAGER_Initialize	;wreg free
  1471  005010                     
  1472                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1473  005010  EC39  F028         	call	_OSCILLATOR_Initialize	;wreg free
  1474  005014                     
  1475                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  1476  005014  EC0F  F028         	call	_ADC_Initialize	;wreg free
  1477  005018                     
  1478                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  1479  005018  ECA9  F026         	call	_TMR0_Initialize	;wreg free
  1480  00501C  0012               	return		;funcret
  1481  00501E                     __end_of_SYSTEM_Initialize:
  1482                           	opt callstack 0
  1483                           
  1484 ;; *************** function _TMR0_Initialize *****************
  1485 ;; Defined at:
  1486 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, status,0, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1502 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1504 ;;Total ram usage:        2 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    4
  1507 ;; This function calls:
  1508 ;;		_TMR0_SetInterruptHandler
  1509 ;; This function is called by:
  1510 ;;		_SYSTEM_Initialize
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text2
  1515  004D52                     __ptext2:
  1516                           	opt callstack 0
  1517  004D52                     _TMR0_Initialize:
  1518                           	opt callstack 25
  1519  004D52                     
  1520                           ;mcc_generated_files/tmr0.c: 73:     T0CONbits.T08BIT = 0;
  1521  004D52  9CD5               	bcf	213,6,c	;volatile
  1522  004D54                     
  1523                           ;mcc_generated_files/tmr0.c: 76:     TMR0H = 0xF6;
  1524  004D54  0EF6               	movlw	246
  1525  004D56  6ED7               	movwf	215,c	;volatile
  1526                           
  1527                           ;mcc_generated_files/tmr0.c: 79:     TMR0L = 0x3B;
  1528  004D58  0E3B               	movlw	59
  1529  004D5A  6ED6               	movwf	214,c	;volatile
  1530  004D5C                     
  1531                           ;mcc_generated_files/tmr0.c: 83:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  1532  004D5C  50D6               	movf	214,w,c	;volatile
  1533  004D5E  CFD7 F005          	movff	4055,??_TMR0_Initialize	;volatile
  1534  004D62  6A06               	clrf	(??_TMR0_Initialize+1)^0,c
  1535  004D64  C005  F006         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1536  004D68  6A05               	clrf	??_TMR0_Initialize^0,c
  1537  004D6A  1005               	iorwf	??_TMR0_Initialize^0,w,c
  1538  004D6C  0100               	movlb	0	; () banked
  1539  004D6E  6FFD               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  1540  004D70  5006               	movf	(??_TMR0_Initialize+1)^0,w,c
  1541  004D72  6FFE               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  1542  004D74                     
  1543                           ; BSR set to: 0
  1544                           ;mcc_generated_files/tmr0.c: 86:     INTCONbits.TMR0IF = 0;
  1545  004D74  94F2               	bcf	242,2,c	;volatile
  1546  004D76                     
  1547                           ; BSR set to: 0
  1548                           ;mcc_generated_files/tmr0.c: 89:     INTCONbits.TMR0IE = 1;
  1549  004D76  8AF2               	bsf	242,5,c	;volatile
  1550  004D78                     
  1551                           ; BSR set to: 0
  1552                           ;mcc_generated_files/tmr0.c: 92:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1553  004D78  0ED8               	movlw	low _TMR0_DefaultInterruptHandler
  1554  004D7A  6E03               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1555  004D7C  0E50               	movlw	high _TMR0_DefaultInterruptHandler
  1556  004D7E  6E04               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1557  004D80  EC58  F028         	call	_TMR0_SetInterruptHandler	;wreg free
  1558  004D84                     
  1559                           ;mcc_generated_files/tmr0.c: 95:     T0CON = 0x9F;
  1560  004D84  0E9F               	movlw	159
  1561  004D86  6ED5               	movwf	213,c	;volatile
  1562  004D88  0012               	return		;funcret
  1563  004D8A                     __end_of_TMR0_Initialize:
  1564                           	opt callstack 0
  1565                           
  1566 ;; *************** function _PIN_MANAGER_Initialize *****************
  1567 ;; Defined at:
  1568 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    3
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_SYSTEM_Initialize
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text3
  1597  004E6A                     __ptext3:
  1598                           	opt callstack 0
  1599  004E6A                     _PIN_MANAGER_Initialize:
  1600                           	opt callstack 26
  1601  004E6A                     
  1602                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1603  004E6A  0E00               	movlw	0
  1604  004E6C  6E8D               	movwf	141,c	;volatile
  1605                           
  1606                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1607  004E6E  0E00               	movlw	0
  1608  004E70  6E8C               	movwf	140,c	;volatile
  1609                           
  1610                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1611  004E72  0E00               	movlw	0
  1612  004E74  6E89               	movwf	137,c	;volatile
  1613                           
  1614                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1615  004E76  0E00               	movlw	0
  1616  004E78  6E8A               	movwf	138,c	;volatile
  1617                           
  1618                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1619  004E7A  0E00               	movlw	0
  1620  004E7C  6E8B               	movwf	139,c	;volatile
  1621                           
  1622                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x05;
  1623  004E7E  0E05               	movlw	5
  1624  004E80  6E96               	movwf	150,c	;volatile
  1625                           
  1626                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xEF;
  1627  004E82  0EEF               	movlw	239
  1628  004E84  6E92               	movwf	146,c	;volatile
  1629  004E86                     
  1630                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1631  004E86  6893               	setf	147,c	;volatile
  1632  004E88                     
  1633                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  1634  004E88  6894               	setf	148,c	;volatile
  1635                           
  1636                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x01;
  1637  004E8A  0E01               	movlw	1
  1638  004E8C  6E95               	movwf	149,c	;volatile
  1639                           
  1640                           ;mcc_generated_files/pin_manager.c: 78:     ANCON0 = 0xDF;
  1641  004E8E  0EDF               	movlw	223
  1642  004E90  010F               	movlb	15	; () banked
  1643  004E92  6F5D               	movwf	93,b	;volatile
  1644                           
  1645                           ;mcc_generated_files/pin_manager.c: 79:     ANCON1 = 0x7F;
  1646  004E94  0E7F               	movlw	127
  1647  004E96  6F5C               	movwf	92,b	;volatile
  1648                           
  1649                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  1650  004E98  0E00               	movlw	0
  1651  004E9A  6F5B               	movwf	91,b	;volatile
  1652  004E9C                     
  1653                           ; BSR set to: 15
  1654                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  1655  004E9C  8EF1               	bsf	241,7,c	;volatile
  1656  004E9E                     
  1657                           ; BSR set to: 15
  1658  004E9E  0012               	return		;funcret
  1659  004EA0                     __end_of_PIN_MANAGER_Initialize:
  1660                           	opt callstack 0
  1661                           
  1662 ;; *************** function _OSCILLATOR_Initialize *****************
  1663 ;; Defined at:
  1664 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1682 ;;Total ram usage:        0 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    3
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_SYSTEM_Initialize
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text4
  1693  005072                     __ptext4:
  1694                           	opt callstack 0
  1695  005072                     _OSCILLATOR_Initialize:
  1696                           	opt callstack 26
  1697  005072                     
  1698                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  1699  005072  0E60               	movlw	96
  1700  005074  6ED3               	movwf	211,c	;volatile
  1701                           
  1702                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x00;
  1703  005076  0E00               	movlw	0
  1704  005078  6ED2               	movwf	210,c	;volatile
  1705                           
  1706                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  1707  00507A  0E00               	movlw	0
  1708  00507C  6E9B               	movwf	155,c	;volatile
  1709                           
  1710                           ;mcc_generated_files/mcc.c: 69:     REFOCON = 0x00;
  1711  00507E  0E00               	movlw	0
  1712  005080  6E9A               	movwf	154,c	;volatile
  1713  005082  0012               	return		;funcret
  1714  005084                     __end_of_OSCILLATOR_Initialize:
  1715                           	opt callstack 0
  1716                           
  1717 ;; *************** function _INTERRUPT_Initialize *****************
  1718 ;; Defined at:
  1719 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		None
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1737 ;;Total ram usage:        0 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    3
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_SYSTEM_Initialize
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text5
  1748  0050CE                     __ptext5:
  1749                           	opt callstack 0
  1750  0050CE                     _INTERRUPT_Initialize:
  1751                           	opt callstack 26
  1752  0050CE                     
  1753                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1754  0050CE  9ED0               	bcf	208,7,c	;volatile
  1755  0050D0  0012               	return		;funcret
  1756  0050D2                     __end_of_INTERRUPT_Initialize:
  1757                           	opt callstack 0
  1758                           
  1759 ;; *************** function _AppTesteLM4040_inicialize *****************
  1760 ;; Defined at:
  1761 ;;		line 63 in file "AppTesteLM4040.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;		None
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, status,0, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1779 ;;Total ram usage:        2 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:    8
  1782 ;; This function calls:
  1783 ;;		_ADC_Initialize
  1784 ;;		_DATAEE_ReadByte
  1785 ;;		_SRV_Display_Clear
  1786 ;;		_SRV_Display_Init
  1787 ;;		_SRV_TIMER_Init
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text6
  1794  00461C                     __ptext6:
  1795                           	opt callstack 0
  1796  00461C                     _AppTesteLM4040_inicialize:
  1797                           	opt callstack 22
  1798  00461C                     
  1799                           ;AppTesteLM4040.c: 65:     SRV_TIMER_Init();
  1800  00461C  ECEC  F027         	call	_SRV_TIMER_Init	;wreg free
  1801  004620                     
  1802                           ;AppTesteLM4040.c: 66:     ADC_Initialize();
  1803  004620  EC0F  F028         	call	_ADC_Initialize	;wreg free
  1804  004624                     
  1805                           ;AppTesteLM4040.c: 67:     SRV_Display_Init();
  1806  004624  EC98  F027         	call	_SRV_Display_Init	;wreg free
  1807                           
  1808                           ;AppTesteLM4040.c: 68:     SRV_Display_Clear();
  1809  004628  EC61  F028         	call	_SRV_Display_Clear	;wreg free
  1810  00462C                     
  1811                           ;AppTesteLM4040.c: 72:     readData = DATAEE_ReadByte(0x10);
  1812  00462C  0E00               	movlw	0
  1813  00462E  6E04               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
  1814  004630  0E10               	movlw	16
  1815  004632  6E03               	movwf	DATAEE_ReadByte@bAdd^0,c
  1816  004634  ECF8  F027         	call	_DATAEE_ReadByte	;wreg free
  1817  004638  6E5A               	movwf	_readData^0,c
  1818  00463A                     
  1819                           ;AppTesteLM4040.c: 73:     _delay((unsigned long)((300)*(10000000/4000.0)));
  1820  00463A  0E04               	movlw	4
  1821  00463C  6E0E               	movwf	(??_AppTesteLM4040_inicialize+1)^0,c
  1822  00463E  0ECF               	movlw	207
  1823  004640  6E0D               	movwf	??_AppTesteLM4040_inicialize^0,c
  1824  004642  0E02               	movlw	2
  1825  004644                     u6357:
  1826  004644  2EE8               	decfsz	wreg,f,c
  1827  004646  D7FE               	bra	u6357
  1828  004648  2E0D               	decfsz	??_AppTesteLM4040_inicialize^0,f,c
  1829  00464A  D7FC               	bra	u6357
  1830  00464C  2E0E               	decfsz	(??_AppTesteLM4040_inicialize+1)^0,f,c
  1831  00464E  D7FA               	bra	u6357
  1832  004650                     
  1833                           ;AppTesteLM4040.c: 75:     if(readData == 0x52){
  1834  004650  0E52               	movlw	82
  1835  004652  185A               	xorwf	_readData^0,w,c
  1836  004654  A4D8               	btfss	status,2,c
  1837  004656  EF2F  F023         	goto	u6251
  1838  00465A  EF31  F023         	goto	u6250
  1839  00465E                     u6251:
  1840  00465E  EF3E  F023         	goto	l5640
  1841  004662                     u6250:
  1842  004662                     
  1843                           ;AppTesteLM4040.c: 76:         state.calibrando = 0;
  1844  004662  0E00               	movlw	0
  1845  004664  0100               	movlb	0	; () banked
  1846  004666  6FC4               	movwf	_state& (0+255),b
  1847                           
  1848                           ;AppTesteLM4040.c: 77:         state.aprovado = 0;
  1849  004668  0E00               	movlw	0
  1850  00466A  6FC7               	movwf	(_state+3)& (0+255),b
  1851                           
  1852                           ;AppTesteLM4040.c: 78:         state.reprovado = 1;
  1853  00466C  0E01               	movlw	1
  1854  00466E  6FC8               	movwf	(_state+4)& (0+255),b
  1855                           
  1856                           ;AppTesteLM4040.c: 79:         state.identifica_mudanca = 0;
  1857  004670  0E00               	movlw	0
  1858  004672  6FC5               	movwf	(_state+1)& (0+255),b
  1859                           
  1860                           ;AppTesteLM4040.c: 80:         state.testando = 0;
  1861  004674  0E00               	movlw	0
  1862  004676  6FC6               	movwf	(_state+2)& (0+255),b
  1863                           
  1864                           ;AppTesteLM4040.c: 81:     }
  1865  004678  EF5F  F023         	goto	l444
  1866  00467C                     l5640:
  1867  00467C  0E41               	movlw	65
  1868  00467E  185A               	xorwf	_readData^0,w,c
  1869  004680  A4D8               	btfss	status,2,c
  1870  004682  EF45  F023         	goto	u6261
  1871  004686  EF47  F023         	goto	u6260
  1872  00468A                     u6261:
  1873  00468A  EF54  F023         	goto	l5644
  1874  00468E                     u6260:
  1875  00468E                     
  1876                           ;AppTesteLM4040.c: 83:         state.calibrando = 0;
  1877  00468E  0E00               	movlw	0
  1878  004690  0100               	movlb	0	; () banked
  1879  004692  6FC4               	movwf	_state& (0+255),b
  1880                           
  1881                           ;AppTesteLM4040.c: 84:         state.aprovado = 1;
  1882  004694  0E01               	movlw	1
  1883  004696  6FC7               	movwf	(_state+3)& (0+255),b
  1884                           
  1885                           ;AppTesteLM4040.c: 85:         state.reprovado = 0;
  1886  004698  0E00               	movlw	0
  1887  00469A  6FC8               	movwf	(_state+4)& (0+255),b
  1888                           
  1889                           ;AppTesteLM4040.c: 86:         state.identifica_mudanca = 0;
  1890  00469C  0E00               	movlw	0
  1891  00469E  6FC5               	movwf	(_state+1)& (0+255),b
  1892                           
  1893                           ;AppTesteLM4040.c: 87:         state.testando = 0;
  1894  0046A0  0E00               	movlw	0
  1895  0046A2  6FC6               	movwf	(_state+2)& (0+255),b
  1896                           
  1897                           ;AppTesteLM4040.c: 88:     }
  1898  0046A4  EF5F  F023         	goto	l444
  1899  0046A8                     l5644:
  1900                           
  1901                           ;AppTesteLM4040.c: 90:         state.calibrando = 1;
  1902  0046A8  0E01               	movlw	1
  1903  0046AA  0100               	movlb	0	; () banked
  1904  0046AC  6FC4               	movwf	_state& (0+255),b
  1905                           
  1906                           ;AppTesteLM4040.c: 91:         state.aprovado = 0;
  1907  0046AE  0E00               	movlw	0
  1908  0046B0  6FC7               	movwf	(_state+3)& (0+255),b
  1909                           
  1910                           ;AppTesteLM4040.c: 92:         state.reprovado = 0;
  1911  0046B2  0E00               	movlw	0
  1912  0046B4  6FC8               	movwf	(_state+4)& (0+255),b
  1913                           
  1914                           ;AppTesteLM4040.c: 93:         state.identifica_mudanca = 0;
  1915  0046B6  0E00               	movlw	0
  1916  0046B8  6FC5               	movwf	(_state+1)& (0+255),b
  1917                           
  1918                           ;AppTesteLM4040.c: 94:         state.testando = 0;
  1919  0046BA  0E00               	movlw	0
  1920  0046BC  6FC6               	movwf	(_state+2)& (0+255),b
  1921  0046BE                     l444:
  1922                           
  1923                           ; BSR set to: 0
  1924  0046BE  0012               	return		;funcret
  1925  0046C0                     __end_of_AppTesteLM4040_inicialize:
  1926                           	opt callstack 0
  1927                           
  1928 ;; *************** function _SRV_TIMER_Init *****************
  1929 ;; Defined at:
  1930 ;;		line 12 in file "ServiceTimer.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1948 ;;Total ram usage:        0 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    4
  1951 ;; This function calls:
  1952 ;;		_TMR0_SetInterruptHandler
  1953 ;; This function is called by:
  1954 ;;		_AppTesteLM4040_inicialize
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text7
  1959  004FD8                     __ptext7:
  1960                           	opt callstack 0
  1961  004FD8                     _SRV_TIMER_Init:
  1962                           	opt callstack 25
  1963  004FD8                     
  1964                           ;ServiceTimer.c: 15:     count_aux = &tickRate;
  1965  004FD8  0EF9               	movlw	low _tickRate
  1966  004FDA  0101               	movlb	1	; () banked
  1967  004FDC  6FD8               	movwf	_count_aux& (0+255),b
  1968  004FDE  0E00               	movlw	high _tickRate
  1969  004FE0  6FD9               	movwf	(_count_aux+1)& (0+255),b
  1970  004FE2                     
  1971                           ; BSR set to: 1
  1972                           ;ServiceTimer.c: 16:     TMR0_SetInterruptHandler(SRV_TIMER_TickInterrupt);
  1973  004FE2  0E84               	movlw	low _SRV_TIMER_TickInterrupt
  1974  004FE4  6E03               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1975  004FE6  0E50               	movlw	high _SRV_TIMER_TickInterrupt
  1976  004FE8  6E04               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1977  004FEA  EC58  F028         	call	_TMR0_SetInterruptHandler	;wreg free
  1978  004FEE  0012               	return		;funcret
  1979  004FF0                     __end_of_SRV_TIMER_Init:
  1980                           	opt callstack 0
  1981                           
  1982 ;; *************** function _TMR0_SetInterruptHandler *****************
  1983 ;; Defined at:
  1984 ;;		line 159 in file "mcc_generated_files/tmr0.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1987 ;;		 -> SRV_TIMER_TickInterrupt(1), TMR0_DefaultInterruptHandler(1), 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, status,2, status,0
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2003 ;;Total ram usage:        2 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    3
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_TMR0_Initialize
  2010 ;;		_SRV_TIMER_Init
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text8
  2015  0050B0                     __ptext8:
  2016                           	opt callstack 0
  2017  0050B0                     _TMR0_SetInterruptHandler:
  2018                           	opt callstack 25
  2019  0050B0                     
  2020                           ;mcc_generated_files/tmr0.c: 160:     TMR0_InterruptHandler = InterruptHandler;
  2021  0050B0  C003  F1DA         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2022  0050B4  C004  F1DB         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2023  0050B8  0012               	return		;funcret
  2024  0050BA                     __end_of_TMR0_SetInterruptHandler:
  2025                           	opt callstack 0
  2026                           
  2027 ;; *************** function _SRV_Display_Init *****************
  2028 ;; Defined at:
  2029 ;;		line 30 in file "SRV_Display.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    7
  2050 ;; This function calls:
  2051 ;;		_DRV_LCD_Init
  2052 ;;		_SRV_Display_BLK_ON
  2053 ;;		_SRV_Display_Clear
  2054 ;;		_SRV_Display_SetCursor
  2055 ;; This function is called by:
  2056 ;;		_AppTesteLM4040_inicialize
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text9
  2061  004F30                     __ptext9:
  2062                           	opt callstack 0
  2063  004F30                     _SRV_Display_Init:
  2064                           	opt callstack 22
  2065  004F30                     
  2066                           ;SRV_Display.c: 32:     DRV_LCD_Init();
  2067  004F30  EC3D  F024         	call	_DRV_LCD_Init	;wreg free
  2068                           
  2069                           ;SRV_Display.c: 33:     SRV_Display_Clear();
  2070  004F34  EC61  F028         	call	_SRV_Display_Clear	;wreg free
  2071  004F38                     
  2072                           ;SRV_Display.c: 34:     SRV_Display_SetCursor(1,1);
  2073  004F38  0E01               	movlw	1
  2074  004F3A  6E0B               	movwf	SRV_Display_SetCursor@coluna^0,c
  2075  004F3C  0E01               	movlw	1
  2076  004F3E  EC4A  F028         	call	_SRV_Display_SetCursor
  2077  004F42                     
  2078                           ;SRV_Display.c: 35:     SRV_Display_BLK_ON();
  2079  004F42  EC5D  F028         	call	_SRV_Display_BLK_ON	;wreg free
  2080  004F46                     
  2081                           ;SRV_Display.c: 37:     telaDisplay = ((void*)0);
  2082  004F46  0E00               	movlw	0
  2083  004F48  0100               	movlb	0	; () banked
  2084  004F4A  6FF1               	movwf	_telaDisplay& (0+255),b
  2085  004F4C  0E00               	movlw	0
  2086  004F4E  6FF2               	movwf	(_telaDisplay+1)& (0+255),b
  2087  004F50                     
  2088                           ; BSR set to: 0
  2089  004F50  0012               	return		;funcret
  2090  004F52                     __end_of_SRV_Display_Init:
  2091                           	opt callstack 0
  2092                           
  2093 ;; *************** function _SRV_Display_SetCursor *****************
  2094 ;; Defined at:
  2095 ;;		line 62 in file "SRV_Display.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  linha           1    wreg     unsigned char 
  2098 ;;  coluna          1   10[COMRAM] unsigned char 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  linha           1   11[COMRAM] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2110 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2114 ;;Total ram usage:        2 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    6
  2117 ;; This function calls:
  2118 ;;		_DRV_LCD_SetCursor
  2119 ;; This function is called by:
  2120 ;;		_SRV_Display_Init
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text10
  2125  005094                     __ptext10:
  2126                           	opt callstack 0
  2127  005094                     _SRV_Display_SetCursor:
  2128                           	opt callstack 22
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;incstack = 0
  2132                           ;SRV_Display_SetCursor@linha stored from wreg
  2133  005094  6E0C               	movwf	SRV_Display_SetCursor@linha^0,c
  2134  005096                     
  2135                           ;SRV_Display.c: 62: void SRV_Display_SetCursor( uint8_t linha, uint8_t coluna);SRV_Displ
      +                          ay.c: 63: {;SRV_Display.c: 64:     DRV_LCD_SetCursor(linha,coluna);
  2136  005096  C00B  F006         	movff	SRV_Display_SetCursor@coluna,DRV_LCD_SetCursor@coluna
  2137  00509A  500C               	movf	SRV_Display_SetCursor@linha^0,w,c
  2138  00509C  EC75  F024         	call	_DRV_LCD_SetCursor
  2139  0050A0  0012               	return		;funcret
  2140  0050A2                     __end_of_SRV_Display_SetCursor:
  2141                           	opt callstack 0
  2142                           
  2143 ;; *************** function _SRV_Display_Clear *****************
  2144 ;; Defined at:
  2145 ;;		line 57 in file "SRV_Display.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    6
  2166 ;; This function calls:
  2167 ;;		_DRV_LCD_Clear
  2168 ;; This function is called by:
  2169 ;;		_SRV_Display_Init
  2170 ;;		_AppTesteLM4040_inicialize
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text11
  2175  0050C2                     __ptext11:
  2176                           	opt callstack 0
  2177  0050C2                     _SRV_Display_Clear:
  2178                           	opt callstack 22
  2179  0050C2                     
  2180                           ;SRV_Display.c: 59:     DRV_LCD_Clear();
  2181  0050C2  EC51  F028         	call	_DRV_LCD_Clear	;wreg free
  2182  0050C6  0012               	return		;funcret
  2183  0050C8                     __end_of_SRV_Display_Clear:
  2184                           	opt callstack 0
  2185                           
  2186 ;; *************** function _DRV_LCD_Clear *****************
  2187 ;; Defined at:
  2188 ;;		line 37 in file "Driver_LCD.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2206 ;;Total ram usage:        0 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    5
  2209 ;; This function calls:
  2210 ;;		_DRV_LCD_Cmd
  2211 ;; This function is called by:
  2212 ;;		_SRV_Display_Clear
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text12
  2217  0050A2                     __ptext12:
  2218                           	opt callstack 0
  2219  0050A2                     _DRV_LCD_Clear:
  2220                           	opt callstack 22
  2221  0050A2                     
  2222                           ;Driver_LCD.c: 39:  DRV_LCD_Cmd(0);
  2223  0050A2  0E00               	movlw	0
  2224  0050A4  ECA9  F027         	call	_DRV_LCD_Cmd
  2225                           
  2226                           ;Driver_LCD.c: 40:  DRV_LCD_Cmd(1);
  2227  0050A8  0E01               	movlw	1
  2228  0050AA  ECA9  F027         	call	_DRV_LCD_Cmd
  2229  0050AE  0012               	return		;funcret
  2230  0050B0                     __end_of_DRV_LCD_Clear:
  2231                           	opt callstack 0
  2232                           
  2233 ;; *************** function _SRV_Display_BLK_ON *****************
  2234 ;; Defined at:
  2235 ;;		line 67 in file "SRV_Display.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2253 ;;Total ram usage:        0 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    4
  2256 ;; This function calls:
  2257 ;;		_DRV_LCD_BLK
  2258 ;; This function is called by:
  2259 ;;		_SRV_Display_Init
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text13
  2264  0050BA                     __ptext13:
  2265                           	opt callstack 0
  2266  0050BA                     _SRV_Display_BLK_ON:
  2267                           	opt callstack 24
  2268  0050BA                     
  2269                           ;SRV_Display.c: 69:    DRV_LCD_BLK(1);
  2270  0050BA  0E01               	movlw	1
  2271  0050BC  EC6A  F028         	call	_DRV_LCD_BLK
  2272  0050C0  0012               	return		;funcret
  2273  0050C2                     __end_of_SRV_Display_BLK_ON:
  2274                           	opt callstack 0
  2275                           
  2276 ;; *************** function _DRV_LCD_BLK *****************
  2277 ;; Defined at:
  2278 ;;		line 118 in file "Driver_LCD.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  state           1    wreg     _Bool 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  state           1    0[COMRAM] _Bool 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2296 ;;Total ram usage:        0 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    3
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_SRV_Display_BLK_ON
  2303 ;;		_SRV_Display_BLK_OFF
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text14
  2308  0050D4                     __ptext14:
  2309                           	opt callstack 0
  2310  0050D4                     _DRV_LCD_BLK:
  2311                           	opt callstack 24
  2312  0050D4  0012               	return		;funcret
  2313  0050D6                     __end_of_DRV_LCD_BLK:
  2314                           	opt callstack 0
  2315                           
  2316 ;; *************** function _DRV_LCD_Init *****************
  2317 ;; Defined at:
  2318 ;;		line 64 in file "Driver_LCD.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;		None
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2336 ;;Total ram usage:        1 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    5
  2339 ;; This function calls:
  2340 ;;		_DRV_LCD_Cmd
  2341 ;;		_DRV_LCD_Data
  2342 ;; This function is called by:
  2343 ;;		_SRV_Display_Init
  2344 ;;		_SRV_Display_Refresh
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text15
  2349  00487A                     __ptext15:
  2350                           	opt callstack 0
  2351  00487A                     _DRV_LCD_Init:
  2352                           	opt callstack 23
  2353  00487A                     
  2354                           ;Driver_LCD.c: 66:   DRV_LCD_Data(0x00);
  2355  00487A  0E00               	movlw	0
  2356  00487C  EC39  F025         	call	_DRV_LCD_Data
  2357  004880                     
  2358                           ;Driver_LCD.c: 67:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2359  004880  0E34               	movlw	52
  2360  004882  6E06               	movwf	??_DRV_LCD_Init^0,c
  2361  004884  0EF2               	movlw	242
  2362  004886                     u6367:
  2363  004886  2EE8               	decfsz	wreg,f,c
  2364  004888  D7FE               	bra	u6367
  2365  00488A  2E06               	decfsz	??_DRV_LCD_Init^0,f,c
  2366  00488C  D7FC               	bra	u6367
  2367  00488E                     
  2368                           ;Driver_LCD.c: 68:   DRV_LCD_Cmd(0x03);
  2369  00488E  0E03               	movlw	3
  2370  004890  ECA9  F027         	call	_DRV_LCD_Cmd
  2371  004894                     
  2372                           ;Driver_LCD.c: 69:  _delay((unsigned long)((5)*(8000000/4000.0)));
  2373  004894  0E0D               	movlw	13
  2374  004896  6E06               	movwf	??_DRV_LCD_Init^0,c
  2375  004898  0EFC               	movlw	252
  2376  00489A                     u6377:
  2377  00489A  2EE8               	decfsz	wreg,f,c
  2378  00489C  D7FE               	bra	u6377
  2379  00489E  2E06               	decfsz	??_DRV_LCD_Init^0,f,c
  2380  0048A0  D7FC               	bra	u6377
  2381  0048A2                     
  2382                           ;Driver_LCD.c: 70:   DRV_LCD_Cmd(0x03);
  2383  0048A2  0E03               	movlw	3
  2384  0048A4  ECA9  F027         	call	_DRV_LCD_Cmd
  2385  0048A8                     
  2386                           ;Driver_LCD.c: 71:  _delay((unsigned long)((11)*(8000000/4000.0)));
  2387  0048A8  0E1D               	movlw	29
  2388  0048AA  6E06               	movwf	??_DRV_LCD_Init^0,c
  2389  0048AC  0E91               	movlw	145
  2390  0048AE                     u6387:
  2391  0048AE  2EE8               	decfsz	wreg,f,c
  2392  0048B0  D7FE               	bra	u6387
  2393  0048B2  2E06               	decfsz	??_DRV_LCD_Init^0,f,c
  2394  0048B4  D7FC               	bra	u6387
  2395  0048B6  F000               	nop	
  2396  0048B8                     
  2397                           ;Driver_LCD.c: 72:   DRV_LCD_Cmd(0x03);
  2398  0048B8  0E03               	movlw	3
  2399  0048BA  ECA9  F027         	call	_DRV_LCD_Cmd
  2400  0048BE                     
  2401                           ;Driver_LCD.c: 74:   DRV_LCD_Cmd(0x02);
  2402  0048BE  0E02               	movlw	2
  2403  0048C0  ECA9  F027         	call	_DRV_LCD_Cmd
  2404  0048C4                     
  2405                           ;Driver_LCD.c: 75:   DRV_LCD_Cmd(0x02);
  2406  0048C4  0E02               	movlw	2
  2407  0048C6  ECA9  F027         	call	_DRV_LCD_Cmd
  2408  0048CA                     
  2409                           ;Driver_LCD.c: 76:   DRV_LCD_Cmd(0x08);
  2410  0048CA  0E08               	movlw	8
  2411  0048CC  ECA9  F027         	call	_DRV_LCD_Cmd
  2412  0048D0                     
  2413                           ;Driver_LCD.c: 77:   DRV_LCD_Cmd(0x00);
  2414  0048D0  0E00               	movlw	0
  2415  0048D2  ECA9  F027         	call	_DRV_LCD_Cmd
  2416  0048D6                     
  2417                           ;Driver_LCD.c: 78:   DRV_LCD_Cmd(0x0C);
  2418  0048D6  0E0C               	movlw	12
  2419  0048D8  ECA9  F027         	call	_DRV_LCD_Cmd
  2420  0048DC                     
  2421                           ;Driver_LCD.c: 79:   DRV_LCD_Cmd(0x00);
  2422  0048DC  0E00               	movlw	0
  2423  0048DE  ECA9  F027         	call	_DRV_LCD_Cmd
  2424  0048E2                     
  2425                           ;Driver_LCD.c: 80:   DRV_LCD_Cmd(0x06);
  2426  0048E2  0E06               	movlw	6
  2427  0048E4  ECA9  F027         	call	_DRV_LCD_Cmd
  2428  0048E8  0012               	return		;funcret
  2429  0048EA                     __end_of_DRV_LCD_Init:
  2430                           	opt callstack 0
  2431                           
  2432 ;; *************** function _DATAEE_ReadByte *****************
  2433 ;; Defined at:
  2434 ;;		line 196 in file "mcc_generated_files/memory.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  bAdd            2    2[COMRAM] unsigned short 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      unsigned char 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;Total ram usage:        2 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    3
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_AppTesteLM4040_inicialize
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text16
  2463  004FF0                     __ptext16:
  2464                           	opt callstack 0
  2465  004FF0                     _DATAEE_ReadByte:
  2466                           	opt callstack 26
  2467  004FF0                     
  2468                           ;mcc_generated_files/memory.c: 196: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 197: {;mcc_generated_files/memory.c: 198:     EEADRH = ((bAdd >> 8) & 0
      +                          x03);
  2469  004FF0  5004               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
  2470  004FF2  0B03               	andlw	3
  2471  004FF4  6E75               	movwf	117,c	;volatile
  2472  004FF6                     
  2473                           ;mcc_generated_files/memory.c: 199:     EEADR = (bAdd & 0xFF);
  2474  004FF6  C003  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
  2475  004FFA                     
  2476                           ;mcc_generated_files/memory.c: 200:     EECON1bits.CFGS = 0;
  2477  004FFA  9C7F               	bcf	127,6,c	;volsfr
  2478  004FFC                     
  2479                           ;mcc_generated_files/memory.c: 201:     EECON1bits.EEPGD = 0;
  2480  004FFC  9E7F               	bcf	127,7,c	;volsfr
  2481  004FFE                     
  2482                           ;mcc_generated_files/memory.c: 202:     EECON1bits.RD = 1;
  2483  004FFE  807F               	bsf	127,0,c	;volsfr
  2484  005000                     
  2485                           ;mcc_generated_files/memory.c: 203:     __nop();
  2486  005000  F000               	nop	
  2487  005002                     
  2488                           ;mcc_generated_files/memory.c: 204:     __nop();
  2489  005002  F000               	nop	
  2490  005004                     
  2491                           ;mcc_generated_files/memory.c: 206:     return (EEDATA);
  2492  005004  5073               	movf	115,w,c	;volatile
  2493  005006  0012               	return		;funcret
  2494  005008                     __end_of_DATAEE_ReadByte:
  2495                           	opt callstack 0
  2496                           
  2497 ;; *************** function _ADC_Initialize *****************
  2498 ;; Defined at:
  2499 ;;		line 62 in file "mcc_generated_files/adc.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;		None
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2517 ;;Total ram usage:        0 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    3
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_SYSTEM_Initialize
  2524 ;;		_AppTesteLM4040_inicialize
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text17
  2529  00501E                     __ptext17:
  2530                           	opt callstack 0
  2531  00501E                     _ADC_Initialize:
  2532                           	opt callstack 26
  2533  00501E                     
  2534                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x79;
  2535  00501E  0E79               	movlw	121
  2536  005020  6EC2               	movwf	194,c	;volatile
  2537                           
  2538                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x00;
  2539  005022  0E00               	movlw	0
  2540  005024  6EC1               	movwf	193,c	;volatile
  2541                           
  2542                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xBA;
  2543  005026  0EBA               	movlw	186
  2544  005028  6EC0               	movwf	192,c	;volatile
  2545                           
  2546                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  2547  00502A  0E00               	movlw	0
  2548  00502C  6EC4               	movwf	196,c	;volatile
  2549                           
  2550                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  2551  00502E  0E00               	movlw	0
  2552  005030  6EC3               	movwf	195,c	;volatile
  2553  005032  0012               	return		;funcret
  2554  005034                     __end_of_ADC_Initialize:
  2555                           	opt callstack 0
  2556                           
  2557 ;; *************** function _AppTesteLM4040_Run *****************
  2558 ;; Defined at:
  2559 ;;		line 101 in file "AppTesteLM4040.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2577 ;;Total ram usage:        0 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:   12
  2580 ;; This function calls:
  2581 ;;		_AppTesteLM4040_Controller
  2582 ;;		_AtualizaDisplay
  2583 ;;		_LeituraAD_run
  2584 ;;		_SRV_Display_Run
  2585 ;;		_exibetensao
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text18
  2592  005034                     __ptext18:
  2593                           	opt callstack 0
  2594  005034                     _AppTesteLM4040_Run:
  2595                           	opt callstack 18
  2596  005034                     
  2597                           ;AppTesteLM4040.c: 103:      SRV_Display_Run();
  2598  005034  EC64  F028         	call	_SRV_Display_Run	;wreg free
  2599  005038                     
  2600                           ;AppTesteLM4040.c: 104:      LeituraAD_run();
  2601  005038  EC6B  F027         	call	_LeituraAD_run	;wreg free
  2602  00503C                     
  2603                           ;AppTesteLM4040.c: 105:      AtualizaDisplay();
  2604  00503C  EC58  F017         	call	_AtualizaDisplay	;wreg free
  2605  005040                     
  2606                           ;AppTesteLM4040.c: 106:      AppTesteLM4040_Controller();
  2607  005040  ECBA  F022         	call	_AppTesteLM4040_Controller	;wreg free
  2608  005044                     
  2609                           ;AppTesteLM4040.c: 109:         exibetensao();
  2610  005044  ECFC  F023         	call	_exibetensao	;wreg free
  2611  005048  0012               	return		;funcret
  2612  00504A                     __end_of_AppTesteLM4040_Run:
  2613                           	opt callstack 0
  2614                           
  2615 ;; *************** function _exibetensao *****************
  2616 ;; Defined at:
  2617 ;;		line 366 in file "AppTesteLM4040.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;Total ram usage:        4 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    4
  2638 ;; This function calls:
  2639 ;;		_SRV_TIMER_GetTick
  2640 ;; This function is called by:
  2641 ;;		_AppTesteLM4040_Run
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text19
  2646  0047F8                     __ptext19:
  2647                           	opt callstack 0
  2648  0047F8                     _exibetensao:
  2649                           	opt callstack 25
  2650  0047F8                     
  2651                           ;AppTesteLM4040.c: 368:     static uint32_t tick = 0;;AppTesteLM4040.c: 369:  static uin
      +                          t32_t tickLast = 0;;AppTesteLM4040.c: 372:  tick = SRV_TIMER_GetTick();
  2652  0047F8  ECD3  F027         	call	_SRV_TIMER_GetTick	;wreg free
  2653  0047FC  C003  F0C9         	movff	?_SRV_TIMER_GetTick,exibetensao@tick
  2654  004800  C004  F0CA         	movff	?_SRV_TIMER_GetTick+1,exibetensao@tick+1
  2655  004804  C005  F0CB         	movff	?_SRV_TIMER_GetTick+2,exibetensao@tick+2
  2656  004808  C006  F0CC         	movff	?_SRV_TIMER_GetTick+3,exibetensao@tick+3
  2657  00480C                     
  2658                           ;AppTesteLM4040.c: 374:  if(tick >= (uint32_t)(tickLast + 1))
  2659  00480C  0E01               	movlw	1
  2660  00480E  0101               	movlb	1	; () banked
  2661  004810  2540               	addwf	exibetensao@tickLast& (0+255),w,b
  2662  004812  6E07               	movwf	??_exibetensao^0,c
  2663  004814  0E00               	movlw	0
  2664  004816  2141               	addwfc	(exibetensao@tickLast+1)& (0+255),w,b
  2665  004818  6E08               	movwf	(??_exibetensao+1)^0,c
  2666  00481A  0E00               	movlw	0
  2667  00481C  2142               	addwfc	(exibetensao@tickLast+2)& (0+255),w,b
  2668  00481E  6E09               	movwf	(??_exibetensao+2)^0,c
  2669  004820  0E00               	movlw	0
  2670  004822  2143               	addwfc	(exibetensao@tickLast+3)& (0+255),w,b
  2671  004824  6E0A               	movwf	(??_exibetensao+3)^0,c
  2672  004826  5007               	movf	??_exibetensao^0,w,c
  2673  004828  0100               	movlb	0	; () banked
  2674  00482A  5DC9               	subwf	exibetensao@tick& (0+255),w,b
  2675  00482C  5008               	movf	(??_exibetensao+1)^0,w,c
  2676  00482E  59CA               	subwfb	(exibetensao@tick+1)& (0+255),w,b
  2677  004830  5009               	movf	(??_exibetensao+2)^0,w,c
  2678  004832  59CB               	subwfb	(exibetensao@tick+2)& (0+255),w,b
  2679  004834  500A               	movf	(??_exibetensao+3)^0,w,c
  2680  004836  59CC               	subwfb	(exibetensao@tick+3)& (0+255),w,b
  2681  004838  A0D8               	btfss	status,0,c
  2682  00483A  EF21  F024         	goto	u6211
  2683  00483E  EF23  F024         	goto	u6210
  2684  004842                     u6211:
  2685  004842  EF3C  F024         	goto	l523
  2686  004846                     u6210:
  2687  004846                     
  2688                           ; BSR set to: 0
  2689                           ;AppTesteLM4040.c: 375:  {;AppTesteLM4040.c: 376:   tickLast = tick;
  2690  004846  C0C9  F140         	movff	exibetensao@tick,exibetensao@tickLast
  2691  00484A  C0CA  F141         	movff	exibetensao@tick+1,exibetensao@tickLast+1
  2692  00484E  C0CB  F142         	movff	exibetensao@tick+2,exibetensao@tickLast+2
  2693  004852  C0CC  F143         	movff	exibetensao@tick+3,exibetensao@tickLast+3
  2694  004856                     
  2695                           ; BSR set to: 0
  2696  004856  B28D               	btfsc	141,1,c	;volatile
  2697  004858  EF30  F024         	goto	u6221
  2698  00485C  EF33  F024         	goto	u6220
  2699  004860                     u6221:
  2700  004860  0E01               	movlw	1
  2701  004862  EF34  F024         	goto	u6226
  2702  004866                     u6220:
  2703  004866  0E00               	movlw	0
  2704  004868                     u6226:
  2705  004868  0AFF               	xorlw	255
  2706  00486A  6E07               	movwf	??_exibetensao^0,c
  2707  00486C  4607               	rlncf	??_exibetensao^0,f,c
  2708  00486E  508D               	movf	141,w,c	;volatile
  2709  004870  1807               	xorwf	??_exibetensao^0,w,c
  2710  004872  0BFD               	andlw	-3
  2711  004874  1807               	xorwf	??_exibetensao^0,w,c
  2712  004876  6E8D               	movwf	141,c	;volatile
  2713  004878                     l523:
  2714                           
  2715                           ; BSR set to: 0
  2716  004878  0012               	return		;funcret
  2717  00487A                     __end_of_exibetensao:
  2718                           	opt callstack 0
  2719                           
  2720 ;; *************** function _SRV_Display_Run *****************
  2721 ;; Defined at:
  2722 ;;		line 40 in file "SRV_Display.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;		None
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2740 ;;Total ram usage:        0 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    8
  2743 ;; This function calls:
  2744 ;;		_writeTela
  2745 ;; This function is called by:
  2746 ;;		_AppTesteLM4040_Run
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text20
  2751  0050C8                     __ptext20:
  2752                           	opt callstack 0
  2753  0050C8                     _SRV_Display_Run:
  2754                           	opt callstack 21
  2755  0050C8                     
  2756                           ;SRV_Display.c: 42:     writeTela();
  2757  0050C8  EC4C  F026         	call	_writeTela	;wreg free
  2758  0050CC  0012               	return		;funcret
  2759  0050CE                     __end_of_SRV_Display_Run:
  2760                           	opt callstack 0
  2761                           
  2762 ;; *************** function _writeTela *****************
  2763 ;; Defined at:
  2764 ;;		line 11 in file "SRV_Display.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2782 ;;Total ram usage:        0 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    7
  2785 ;; This function calls:
  2786 ;;		_SRV_Display_Write
  2787 ;; This function is called by:
  2788 ;;		_SRV_Display_Run
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text21
  2793  004C98                     __ptext21:
  2794                           	opt callstack 0
  2795  004C98                     _writeTela:
  2796                           	opt callstack 21
  2797  004C98                     
  2798                           ;SRV_Display.c: 13:     if(telaDisplay != ((void*)0))
  2799  004C98  0100               	movlb	0	; () banked
  2800  004C9A  51F1               	movf	_telaDisplay& (0+255),w,b
  2801  004C9C  11F2               	iorwf	(_telaDisplay+1)& (0+255),w,b
  2802  004C9E  B4D8               	btfsc	status,2,c
  2803  004CA0  EF54  F026         	goto	u5921
  2804  004CA4  EF56  F026         	goto	u5920
  2805  004CA8                     u5921:
  2806  004CA8  EF6B  F026         	goto	l286
  2807  004CAC                     u5920:
  2808  004CAC                     
  2809                           ; BSR set to: 0
  2810                           ;SRV_Display.c: 14:     {;SRV_Display.c: 24:         SRV_Display_Write(1,1,(uint8_t*)(&t
      +                          elaDisplay->tela[0][0]));
  2811  004CAC  0E01               	movlw	1
  2812  004CAE  6E0B               	movwf	SRV_Display_Write@coluna^0,c
  2813  004CB0  C0F1  F00C         	movff	_telaDisplay,SRV_Display_Write@data
  2814  004CB4  C0F2  F00D         	movff	_telaDisplay+1,SRV_Display_Write@data+1
  2815  004CB8  0E01               	movlw	1
  2816  004CBA  ECC6  F027         	call	_SRV_Display_Write
  2817                           
  2818                           ;SRV_Display.c: 25:         SRV_Display_Write(2,1,(uint8_t*)(&telaDisplay->tela[1][0]));
  2819  004CBE  0E01               	movlw	1
  2820  004CC0  6E0B               	movwf	SRV_Display_Write@coluna^0,c
  2821  004CC2  0E10               	movlw	16
  2822  004CC4  0100               	movlb	0	; () banked
  2823  004CC6  25F1               	addwf	_telaDisplay& (0+255),w,b
  2824  004CC8  6E0C               	movwf	SRV_Display_Write@data^0,c
  2825  004CCA  0E00               	movlw	0
  2826  004CCC  21F2               	addwfc	(_telaDisplay+1)& (0+255),w,b
  2827  004CCE  6E0D               	movwf	(SRV_Display_Write@data+1)^0,c
  2828  004CD0  0E02               	movlw	2
  2829  004CD2  ECC6  F027         	call	_SRV_Display_Write
  2830  004CD6                     l286:
  2831  004CD6  0012               	return		;funcret
  2832  004CD8                     __end_of_writeTela:
  2833                           	opt callstack 0
  2834                           
  2835 ;; *************** function _LeituraAD_run *****************
  2836 ;; Defined at:
  2837 ;;		line 298 in file "AppTesteLM4040.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    5
  2858 ;; This function calls:
  2859 ;;		_ADC_GetConversionResult
  2860 ;;		_ADC_IsConversionDone
  2861 ;;		_ADC_StartConversion
  2862 ;;		_ServiceAD_Media
  2863 ;; This function is called by:
  2864 ;;		_AppTesteLM4040_Run
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text22
  2869  004ED6                     __ptext22:
  2870                           	opt callstack 0
  2871  004ED6                     _LeituraAD_run:
  2872                           	opt callstack 24
  2873  004ED6                     
  2874                           ;AppTesteLM4040.c: 303:      ADC_StartConversion(channel_AN3);
  2875  004ED6  0E03               	movlw	3
  2876  004ED8  ECB9  F027         	call	_ADC_StartConversion
  2877  004EDC                     l5522:
  2878  004EDC  EC25  F028         	call	_ADC_IsConversionDone	;wreg free
  2879  004EE0  0900               	iorlw	0
  2880  004EE2  B4D8               	btfsc	status,2,c
  2881  004EE4  EF76  F027         	goto	u6101
  2882  004EE8  EF78  F027         	goto	u6100
  2883  004EEC                     u6101:
  2884  004EEC  EF6E  F027         	goto	l5522
  2885  004EF0                     u6100:
  2886  004EF0                     
  2887                           ;AppTesteLM4040.c: 306:      LeituraAD.AN3 = ADC_GetConversionResult();
  2888  004EF0  EC2F  F028         	call	_ADC_GetConversionResult	;wreg free
  2889  004EF4  C003  F0DF         	movff	?_ADC_GetConversionResult,_LeituraAD+2
  2890  004EF8  C004  F0E0         	movff	?_ADC_GetConversionResult+1,_LeituraAD+3
  2891  004EFC                     
  2892                           ;AppTesteLM4040.c: 309:      LeituraAD.AN2 = ServiceAD_Media();
  2893  004EFC  ECA1  F01E         	call	_ServiceAD_Media	;wreg free
  2894  004F00  C010  F0DD         	movff	?_ServiceAD_Media,_LeituraAD
  2895  004F04  C011  F0DE         	movff	?_ServiceAD_Media+1,_LeituraAD+1
  2896  004F08  0012               	return		;funcret
  2897  004F0A                     __end_of_LeituraAD_run:
  2898                           	opt callstack 0
  2899                           
  2900 ;; *************** function _ServiceAD_Media *****************
  2901 ;; Defined at:
  2902 ;;		line 386 in file "AppTesteLM4040.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  valueAux        4   27[COMRAM] unsigned long 
  2907 ;;  valueMean       2   25[COMRAM] unsigned short 
  2908 ;;  conversion      2   23[COMRAM] unsigned short 
  2909 ;;  timeout         2   21[COMRAM] unsigned short 
  2910 ;;  i               2    0        unsigned short 
  2911 ;;  index           1   31[COMRAM] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2   15[COMRAM] unsigned short 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2922 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2924 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2925 ;;Total ram usage:       17 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    4
  2928 ;; This function calls:
  2929 ;;		_ADC_GetConversionResult
  2930 ;;		_ADC_IsConversionDone
  2931 ;;		_ADC_StartConversion
  2932 ;;		___lldiv
  2933 ;; This function is called by:
  2934 ;;		_LeituraAD_run
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text23
  2939  003D42                     __ptext23:
  2940                           	opt callstack 0
  2941  003D42                     _ServiceAD_Media:
  2942                           	opt callstack 24
  2943  003D42                     
  2944                           ;AppTesteLM4040.c: 390:     uint16_t valueMean = 0;
  2945  003D42  0E00               	movlw	0
  2946  003D44  6E1B               	movwf	(ServiceAD_Media@valueMean+1)^0,c
  2947  003D46  0E00               	movlw	0
  2948  003D48  6E1A               	movwf	ServiceAD_Media@valueMean^0,c
  2949                           
  2950                           ;AppTesteLM4040.c: 391:     uint32_t valueAux = 0;
  2951  003D4A  0E00               	movlw	0
  2952  003D4C  6E1C               	movwf	ServiceAD_Media@valueAux^0,c
  2953  003D4E  0E00               	movlw	0
  2954  003D50  6E1D               	movwf	(ServiceAD_Media@valueAux+1)^0,c
  2955  003D52  0E00               	movlw	0
  2956  003D54  6E1E               	movwf	(ServiceAD_Media@valueAux+2)^0,c
  2957  003D56  0E00               	movlw	0
  2958  003D58  6E1F               	movwf	(ServiceAD_Media@valueAux+3)^0,c
  2959                           
  2960                           ;AppTesteLM4040.c: 392:     uint16_t timeout = 0;
  2961  003D5A  0E00               	movlw	0
  2962  003D5C  6E17               	movwf	(ServiceAD_Media@timeout+1)^0,c
  2963  003D5E  0E00               	movlw	0
  2964  003D60  6E16               	movwf	ServiceAD_Media@timeout^0,c
  2965                           
  2966                           ;AppTesteLM4040.c: 394:      uint8_t index = 0;
  2967  003D62  0E00               	movlw	0
  2968  003D64  6E20               	movwf	ServiceAD_Media@index^0,c
  2969  003D66                     
  2970                           ;AppTesteLM4040.c: 396:     static uint16_t mean[20] = {0};;AppTesteLM4040.c: 397:     s
      +                          tatic uint8_t accumulated = 0;;AppTesteLM4040.c: 399:       ADC_StartConversion(channel_
      +                          AN2);
  2971  003D66  0E02               	movlw	2
  2972  003D68  ECB9  F027         	call	_ADC_StartConversion
  2973  003D6C                     l5428:
  2974  003D6C  EC25  F028         	call	_ADC_IsConversionDone	;wreg free
  2975  003D70  0900               	iorlw	0
  2976  003D72  B4D8               	btfsc	status,2,c
  2977  003D74  EFBE  F01E         	goto	u6071
  2978  003D78  EFC0  F01E         	goto	u6070
  2979  003D7C                     u6071:
  2980  003D7C  EFB6  F01E         	goto	l5428
  2981  003D80                     u6070:
  2982  003D80                     
  2983                           ;AppTesteLM4040.c: 403:     conversion = ADC_GetConversionResult();
  2984  003D80  EC2F  F028         	call	_ADC_GetConversionResult	;wreg free
  2985  003D84  C003  F018         	movff	?_ADC_GetConversionResult,ServiceAD_Media@conversion
  2986  003D88  C004  F019         	movff	?_ADC_GetConversionResult+1,ServiceAD_Media@conversion+1
  2987  003D8C                     
  2988                           ;AppTesteLM4040.c: 406:     mean[accumulated] = conversion;
  2989  003D8C  0100               	movlb	0	; () banked
  2990  003D8E  51F7               	movf	ServiceAD_Media@accumulated& (0+255),w,b
  2991  003D90  0D02               	mullw	2
  2992  003D92  0E00               	movlw	low ServiceAD_Media@mean
  2993  003D94  24F3               	addwf	243,w,c
  2994  003D96  6ED9               	movwf	fsr2l,c
  2995  003D98  0E01               	movlw	high ServiceAD_Media@mean
  2996  003D9A  20F4               	addwfc	prodh,w,c
  2997  003D9C  6EDA               	movwf	fsr2h,c
  2998  003D9E  C018  FFDE         	movff	ServiceAD_Media@conversion,postinc2
  2999  003DA2  C019  FFDD         	movff	ServiceAD_Media@conversion+1,postdec2
  3000  003DA6                     
  3001                           ; BSR set to: 0
  3002                           ;AppTesteLM4040.c: 407:     accumulated++;
  3003  003DA6  2BF7               	incf	ServiceAD_Media@accumulated& (0+255),f,b
  3004  003DA8                     
  3005                           ; BSR set to: 0
  3006                           ;AppTesteLM4040.c: 408:            if(accumulated >= 20)
  3007  003DA8  0E13               	movlw	19
  3008  003DAA  65F7               	cpfsgt	ServiceAD_Media@accumulated& (0+255),b
  3009  003DAC  EFDA  F01E         	goto	u6081
  3010  003DB0  EFDC  F01E         	goto	u6080
  3011  003DB4                     u6081:
  3012  003DB4  EFDE  F01E         	goto	l533
  3013  003DB8                     u6080:
  3014  003DB8                     
  3015                           ; BSR set to: 0
  3016                           ;AppTesteLM4040.c: 409:                accumulated = 0;
  3017  003DB8  0E00               	movlw	0
  3018  003DBA  6FF7               	movwf	ServiceAD_Media@accumulated& (0+255),b
  3019  003DBC                     l533:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;AppTesteLM4040.c: 411:     for (index = 0; index < 20; index++)
  3023  003DBC  0E00               	movlw	0
  3024  003DBE  6E20               	movwf	ServiceAD_Media@index^0,c
  3025  003DC0                     l5444:
  3026                           
  3027                           ;AppTesteLM4040.c: 412:             {;AppTesteLM4040.c: 413:                 valueAux = 
      +                          valueAux + mean[index];
  3028  003DC0  5020               	movf	ServiceAD_Media@index^0,w,c
  3029  003DC2  0D02               	mullw	2
  3030  003DC4  0E00               	movlw	low ServiceAD_Media@mean
  3031  003DC6  24F3               	addwf	243,w,c
  3032  003DC8  6ED9               	movwf	fsr2l,c
  3033  003DCA  0E01               	movlw	high ServiceAD_Media@mean
  3034  003DCC  20F4               	addwfc	prodh,w,c
  3035  003DCE  6EDA               	movwf	fsr2h,c
  3036  003DD0  CFDE F012          	movff	postinc2,??_ServiceAD_Media
  3037  003DD4  CFDD F013          	movff	postdec2,??_ServiceAD_Media+1
  3038  003DD8  5012               	movf	??_ServiceAD_Media^0,w,c
  3039  003DDA  241C               	addwf	ServiceAD_Media@valueAux^0,w,c
  3040  003DDC  6E1C               	movwf	ServiceAD_Media@valueAux^0,c
  3041  003DDE  5013               	movf	(??_ServiceAD_Media+1)^0,w,c
  3042  003DE0  201D               	addwfc	(ServiceAD_Media@valueAux+1)^0,w,c
  3043  003DE2  6E1D               	movwf	(ServiceAD_Media@valueAux+1)^0,c
  3044  003DE4  0E00               	movlw	0
  3045  003DE6  201E               	addwfc	(ServiceAD_Media@valueAux+2)^0,w,c
  3046  003DE8  6E1E               	movwf	(ServiceAD_Media@valueAux+2)^0,c
  3047  003DEA  0E00               	movlw	0
  3048  003DEC  201F               	addwfc	(ServiceAD_Media@valueAux+3)^0,w,c
  3049  003DEE  6E1F               	movwf	(ServiceAD_Media@valueAux+3)^0,c
  3050  003DF0                     
  3051                           ;AppTesteLM4040.c: 414:             }
  3052  003DF0  2A20               	incf	ServiceAD_Media@index^0,f,c
  3053  003DF2  0E13               	movlw	19
  3054  003DF4  6420               	cpfsgt	ServiceAD_Media@index^0,c
  3055  003DF6  EFFF  F01E         	goto	u6091
  3056  003DFA  EF01  F01F         	goto	u6090
  3057  003DFE                     u6091:
  3058  003DFE  EFE0  F01E         	goto	l5444
  3059  003E02                     u6090:
  3060  003E02                     
  3061                           ;AppTesteLM4040.c: 416:             valueMean = (uint16_t)(valueAux / 20);
  3062  003E02  C01C  F003         	movff	ServiceAD_Media@valueAux,___lldiv@dividend
  3063  003E06  C01D  F004         	movff	ServiceAD_Media@valueAux+1,___lldiv@dividend+1
  3064  003E0A  C01E  F005         	movff	ServiceAD_Media@valueAux+2,___lldiv@dividend+2
  3065  003E0E  C01F  F006         	movff	ServiceAD_Media@valueAux+3,___lldiv@dividend+3
  3066  003E12  0E14               	movlw	20
  3067  003E14  6E07               	movwf	___lldiv@divisor^0,c
  3068  003E16  0E00               	movlw	0
  3069  003E18  6E08               	movwf	(___lldiv@divisor+1)^0,c
  3070  003E1A  0E00               	movlw	0
  3071  003E1C  6E09               	movwf	(___lldiv@divisor+2)^0,c
  3072  003E1E  0E00               	movlw	0
  3073  003E20  6E0A               	movwf	(___lldiv@divisor+3)^0,c
  3074  003E22  EC60  F023         	call	___lldiv	;wreg free
  3075  003E26  C003  F01A         	movff	?___lldiv,ServiceAD_Media@valueMean
  3076  003E2A  C004  F01B         	movff	?___lldiv+1,ServiceAD_Media@valueMean+1
  3077  003E2E                     
  3078                           ;AppTesteLM4040.c: 419:     return valueMean;
  3079  003E2E  C01A  F010         	movff	ServiceAD_Media@valueMean,?_ServiceAD_Media
  3080  003E32  C01B  F011         	movff	ServiceAD_Media@valueMean+1,?_ServiceAD_Media+1
  3081  003E36  0012               	return		;funcret
  3082  003E38                     __end_of_ServiceAD_Media:
  3083                           	opt callstack 0
  3084                           
  3085 ;; *************** function ___lldiv *****************
  3086 ;; Defined at:
  3087 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  dividend        4    2[COMRAM] unsigned long 
  3090 ;;  divisor         4    6[COMRAM] unsigned long 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  quotient        4   10[COMRAM] unsigned long 
  3093 ;;  counter         1   14[COMRAM] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  4    2[COMRAM] unsigned long 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3103 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3104 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3106 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3107 ;;Total ram usage:       13 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    3
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_ServiceAD_Media
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text24
  3118  0046C0                     __ptext24:
  3119                           	opt callstack 0
  3120  0046C0                     ___lldiv:
  3121                           	opt callstack 24
  3122  0046C0  0E00               	movlw	0
  3123  0046C2  6E0B               	movwf	___lldiv@quotient^0,c
  3124  0046C4  0E00               	movlw	0
  3125  0046C6  6E0C               	movwf	(___lldiv@quotient+1)^0,c
  3126  0046C8  0E00               	movlw	0
  3127  0046CA  6E0D               	movwf	(___lldiv@quotient+2)^0,c
  3128  0046CC  0E00               	movlw	0
  3129  0046CE  6E0E               	movwf	(___lldiv@quotient+3)^0,c
  3130  0046D0  5007               	movf	___lldiv@divisor^0,w,c
  3131  0046D2  1008               	iorwf	(___lldiv@divisor+1)^0,w,c
  3132  0046D4  1009               	iorwf	(___lldiv@divisor+2)^0,w,c
  3133  0046D6  100A               	iorwf	(___lldiv@divisor+3)^0,w,c
  3134  0046D8  B4D8               	btfsc	status,2,c
  3135  0046DA  EF71  F023         	goto	u5791
  3136  0046DE  EF73  F023         	goto	u5790
  3137  0046E2                     u5791:
  3138  0046E2  EFA9  F023         	goto	l837
  3139  0046E6                     u5790:
  3140  0046E6  0E01               	movlw	1
  3141  0046E8  6E0F               	movwf	___lldiv@counter^0,c
  3142  0046EA  EF7D  F023         	goto	l5250
  3143  0046EE                     l5248:
  3144  0046EE  90D8               	bcf	status,0,c
  3145  0046F0  3607               	rlcf	___lldiv@divisor^0,f,c
  3146  0046F2  3608               	rlcf	(___lldiv@divisor+1)^0,f,c
  3147  0046F4  3609               	rlcf	(___lldiv@divisor+2)^0,f,c
  3148  0046F6  360A               	rlcf	(___lldiv@divisor+3)^0,f,c
  3149  0046F8  2A0F               	incf	___lldiv@counter^0,f,c
  3150  0046FA                     l5250:
  3151  0046FA  AE0A               	btfss	(___lldiv@divisor+3)^0,7,c
  3152  0046FC  EF82  F023         	goto	u5801
  3153  004700  EF84  F023         	goto	u5800
  3154  004704                     u5801:
  3155  004704  EF77  F023         	goto	l5248
  3156  004708                     u5800:
  3157  004708                     l5252:
  3158  004708  90D8               	bcf	status,0,c
  3159  00470A  360B               	rlcf	___lldiv@quotient^0,f,c
  3160  00470C  360C               	rlcf	(___lldiv@quotient+1)^0,f,c
  3161  00470E  360D               	rlcf	(___lldiv@quotient+2)^0,f,c
  3162  004710  360E               	rlcf	(___lldiv@quotient+3)^0,f,c
  3163  004712  5007               	movf	___lldiv@divisor^0,w,c
  3164  004714  5C03               	subwf	___lldiv@dividend^0,w,c
  3165  004716  5008               	movf	(___lldiv@divisor+1)^0,w,c
  3166  004718  5804               	subwfb	(___lldiv@dividend+1)^0,w,c
  3167  00471A  5009               	movf	(___lldiv@divisor+2)^0,w,c
  3168  00471C  5805               	subwfb	(___lldiv@dividend+2)^0,w,c
  3169  00471E  500A               	movf	(___lldiv@divisor+3)^0,w,c
  3170  004720  5806               	subwfb	(___lldiv@dividend+3)^0,w,c
  3171  004722  A0D8               	btfss	status,0,c
  3172  004724  EF96  F023         	goto	u5811
  3173  004728  EF98  F023         	goto	u5810
  3174  00472C                     u5811:
  3175  00472C  EFA1  F023         	goto	l5260
  3176  004730                     u5810:
  3177  004730  5007               	movf	___lldiv@divisor^0,w,c
  3178  004732  5E03               	subwf	___lldiv@dividend^0,f,c
  3179  004734  5008               	movf	(___lldiv@divisor+1)^0,w,c
  3180  004736  5A04               	subwfb	(___lldiv@dividend+1)^0,f,c
  3181  004738  5009               	movf	(___lldiv@divisor+2)^0,w,c
  3182  00473A  5A05               	subwfb	(___lldiv@dividend+2)^0,f,c
  3183  00473C  500A               	movf	(___lldiv@divisor+3)^0,w,c
  3184  00473E  5A06               	subwfb	(___lldiv@dividend+3)^0,f,c
  3185  004740  800B               	bsf	___lldiv@quotient^0,0,c
  3186  004742                     l5260:
  3187  004742  90D8               	bcf	status,0,c
  3188  004744  320A               	rrcf	(___lldiv@divisor+3)^0,f,c
  3189  004746  3209               	rrcf	(___lldiv@divisor+2)^0,f,c
  3190  004748  3208               	rrcf	(___lldiv@divisor+1)^0,f,c
  3191  00474A  3207               	rrcf	___lldiv@divisor^0,f,c
  3192  00474C  2E0F               	decfsz	___lldiv@counter^0,f,c
  3193  00474E  EF84  F023         	goto	l5252
  3194  004752                     l837:
  3195  004752  C00B  F003         	movff	___lldiv@quotient,?___lldiv
  3196  004756  C00C  F004         	movff	___lldiv@quotient+1,?___lldiv+1
  3197  00475A  C00D  F005         	movff	___lldiv@quotient+2,?___lldiv+2
  3198  00475E  C00E  F006         	movff	___lldiv@quotient+3,?___lldiv+3
  3199  004762  0012               	return		;funcret
  3200  004764                     __end_of___lldiv:
  3201                           	opt callstack 0
  3202                           
  3203 ;; *************** function _ADC_StartConversion *****************
  3204 ;; Defined at:
  3205 ;;		line 83 in file "mcc_generated_files/adc.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  channel         1    wreg     enum E12385
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  channel         1    3[COMRAM] enum E12385
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, status,0
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3222 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;Total ram usage:        2 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    3
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_LeituraAD_run
  3230 ;;		_ServiceAD_Media
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text25
  3235  004F72                     __ptext25:
  3236                           	opt callstack 0
  3237  004F72                     _ADC_StartConversion:
  3238                           	opt callstack 24
  3239                           
  3240                           ;incstack = 0
  3241                           ;ADC_StartConversion@channel stored from wreg
  3242  004F72  6E04               	movwf	ADC_StartConversion@channel^0,c
  3243  004F74                     
  3244                           ;mcc_generated_files/adc.c: 83: void ADC_StartConversion(adc_channel_t channel);mcc_gene
      +                          rated_files/adc.c: 84: {;mcc_generated_files/adc.c: 86:     ADCON0bits.CHS = channel;
  3245  004F74  C004  F003         	movff	ADC_StartConversion@channel,??_ADC_StartConversion
  3246  004F78  4603               	rlncf	??_ADC_StartConversion^0,f,c
  3247  004F7A  4603               	rlncf	??_ADC_StartConversion^0,f,c
  3248  004F7C  50C2               	movf	194,w,c	;volatile
  3249  004F7E  1803               	xorwf	??_ADC_StartConversion^0,w,c
  3250  004F80  0B83               	andlw	-125
  3251  004F82  1803               	xorwf	??_ADC_StartConversion^0,w,c
  3252  004F84  6EC2               	movwf	194,c	;volatile
  3253  004F86                     
  3254                           ;mcc_generated_files/adc.c: 89:     ADCON0bits.ADON = 1;
  3255  004F86  80C2               	bsf	194,0,c	;volatile
  3256  004F88                     
  3257                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.GO_nDONE = 1;
  3258  004F88  82C2               	bsf	194,1,c	;volatile
  3259  004F8A  0012               	return		;funcret
  3260  004F8C                     __end_of_ADC_StartConversion:
  3261                           	opt callstack 0
  3262                           
  3263 ;; *************** function _ADC_IsConversionDone *****************
  3264 ;; Defined at:
  3265 ;;		line 96 in file "mcc_generated_files/adc.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;		None
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      _Bool 
  3272 ;; Registers used:
  3273 ;;		wreg
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3283 ;;Total ram usage:        0 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    3
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_LeituraAD_run
  3290 ;;		_ServiceAD_Media
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text26
  3295  00504A                     __ptext26:
  3296                           	opt callstack 0
  3297  00504A                     _ADC_IsConversionDone:
  3298                           	opt callstack 24
  3299  00504A                     
  3300                           ;mcc_generated_files/adc.c: 99:     return ((unsigned char)(!ADCON0bits.GO_nDONE));
  3301  00504A  A2C2               	btfss	194,1,c	;volatile
  3302  00504C  EF2A  F028         	goto	u5741
  3303  005050  EF2D  F028         	goto	u5740
  3304  005054                     u5741:
  3305  005054  0E01               	movlw	1
  3306  005056  EF2E  F028         	goto	u5750
  3307  00505A                     u5740:
  3308  00505A  0E00               	movlw	0
  3309  00505C                     u5750:
  3310  00505C  0012               	return		;funcret
  3311  00505E                     __end_of_ADC_IsConversionDone:
  3312                           	opt callstack 0
  3313                           
  3314 ;; *************** function _ADC_GetConversionResult *****************
  3315 ;; Defined at:
  3316 ;;		line 102 in file "mcc_generated_files/adc.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;		None
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;		None
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  2    2[COMRAM] unsigned short 
  3323 ;; Registers used:
  3324 ;;		wreg, status,2, status,0
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3332 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3333 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3334 ;;Total ram usage:        4 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    3
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_LeituraAD_run
  3341 ;;		_ServiceAD_Media
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text27
  3346  00505E                     __ptext27:
  3347                           	opt callstack 0
  3348  00505E                     _ADC_GetConversionResult:
  3349                           	opt callstack 24
  3350  00505E                     
  3351                           ;mcc_generated_files/adc.c: 105:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3352  00505E  50C4               	movf	196,w,c	;volatile
  3353  005060  6E06               	movwf	(??_ADC_GetConversionResult+1)^0,c
  3354  005062  6A05               	clrf	??_ADC_GetConversionResult^0,c
  3355  005064  50C3               	movf	195,w,c	;volatile
  3356  005066  2405               	addwf	??_ADC_GetConversionResult^0,w,c
  3357  005068  6E03               	movwf	?_ADC_GetConversionResult^0,c
  3358  00506A  0E00               	movlw	0
  3359  00506C  2006               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
  3360  00506E  6E04               	movwf	(?_ADC_GetConversionResult+1)^0,c
  3361  005070  0012               	return		;funcret
  3362  005072                     __end_of_ADC_GetConversionResult:
  3363                           	opt callstack 0
  3364                           
  3365 ;; *************** function _AtualizaDisplay *****************
  3366 ;; Defined at:
  3367 ;;		line 313 in file "AppTesteLM4040.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3383 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3384 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3385 ;;Total ram usage:        4 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:   11
  3388 ;; This function calls:
  3389 ;;		_SRV_Display_Write
  3390 ;;		_SRV_TIMER_GetTick
  3391 ;;		_sprintf
  3392 ;; This function is called by:
  3393 ;;		_AppTesteLM4040_Run
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text28
  3398  002EB0                     __ptext28:
  3399                           	opt callstack 0
  3400  002EB0                     _AtualizaDisplay:
  3401                           	opt callstack 18
  3402  002EB0                     
  3403                           ;AppTesteLM4040.c: 315:     static uint32_t tick = 0;;AppTesteLM4040.c: 316:     static 
      +                          uint32_t tickLast = 0;;AppTesteLM4040.c: 319:  tick = SRV_TIMER_GetTick();
  3404  002EB0  ECD3  F027         	call	_SRV_TIMER_GetTick	;wreg free
  3405  002EB4  C003  F0CD         	movff	?_SRV_TIMER_GetTick,AtualizaDisplay@tick
  3406  002EB8  C004  F0CE         	movff	?_SRV_TIMER_GetTick+1,AtualizaDisplay@tick+1
  3407  002EBC  C005  F0CF         	movff	?_SRV_TIMER_GetTick+2,AtualizaDisplay@tick+2
  3408  002EC0  C006  F0D0         	movff	?_SRV_TIMER_GetTick+3,AtualizaDisplay@tick+3
  3409  002EC4                     
  3410                           ;AppTesteLM4040.c: 321:  if(tick >= (uint32_t)(tickLast + 500))
  3411  002EC4  0EF4               	movlw	244
  3412  002EC6  0101               	movlb	1	; () banked
  3413  002EC8  2544               	addwf	AtualizaDisplay@tickLast& (0+255),w,b
  3414  002ECA  6FDC               	movwf	??_AtualizaDisplay& (0+255),b
  3415  002ECC  0E01               	movlw	1
  3416  002ECE  2145               	addwfc	(AtualizaDisplay@tickLast+1)& (0+255),w,b
  3417  002ED0  6FDD               	movwf	(??_AtualizaDisplay+1)& (0+255),b
  3418  002ED2  0E00               	movlw	0
  3419  002ED4  2146               	addwfc	(AtualizaDisplay@tickLast+2)& (0+255),w,b
  3420  002ED6  6FDE               	movwf	(??_AtualizaDisplay+2)& (0+255),b
  3421  002ED8  0E00               	movlw	0
  3422  002EDA  2147               	addwfc	(AtualizaDisplay@tickLast+3)& (0+255),w,b
  3423  002EDC  6FDF               	movwf	(??_AtualizaDisplay+3)& (0+255),b
  3424  002EDE  51DC               	movf	??_AtualizaDisplay& (0+255),w,b
  3425  002EE0  0100               	movlb	0	; () banked
  3426  002EE2  5DCD               	subwf	AtualizaDisplay@tick& (0+255),w,b
  3427  002EE4  0101               	movlb	1	; () banked
  3428  002EE6  51DD               	movf	(??_AtualizaDisplay+1)& (0+255),w,b
  3429  002EE8  0100               	movlb	0	; () banked
  3430  002EEA  59CE               	subwfb	(AtualizaDisplay@tick+1)& (0+255),w,b
  3431  002EEC  0101               	movlb	1	; () banked
  3432  002EEE  51DE               	movf	(??_AtualizaDisplay+2)& (0+255),w,b
  3433  002EF0  0100               	movlb	0	; () banked
  3434  002EF2  59CF               	subwfb	(AtualizaDisplay@tick+2)& (0+255),w,b
  3435  002EF4  0101               	movlb	1	; () banked
  3436  002EF6  51DF               	movf	(??_AtualizaDisplay+3)& (0+255),w,b
  3437  002EF8  0100               	movlb	0	; () banked
  3438  002EFA  59D0               	subwfb	(AtualizaDisplay@tick+3)& (0+255),w,b
  3439  002EFC  A0D8               	btfss	status,0,c
  3440  002EFE  EF83  F017         	goto	u6291
  3441  002F02  EF85  F017         	goto	u6290
  3442  002F06                     u6291:
  3443  002F06  EF98  F018         	goto	l513
  3444  002F0A                     u6290:
  3445  002F0A                     
  3446                           ; BSR set to: 0
  3447                           ;AppTesteLM4040.c: 322:  {;AppTesteLM4040.c: 323:   tickLast = tick;
  3448  002F0A  C0CD  F144         	movff	AtualizaDisplay@tick,AtualizaDisplay@tickLast
  3449  002F0E  C0CE  F145         	movff	AtualizaDisplay@tick+1,AtualizaDisplay@tickLast+1
  3450  002F12  C0CF  F146         	movff	AtualizaDisplay@tick+2,AtualizaDisplay@tickLast+2
  3451  002F16  C0D0  F147         	movff	AtualizaDisplay@tick+3,AtualizaDisplay@tickLast+3
  3452  002F1A                     
  3453                           ; BSR set to: 0
  3454                           ;AppTesteLM4040.c: 326:         if(state.calibrando == 1)
  3455  002F1A  05C4               	decf	_state& (0+255),w,b
  3456  002F1C  A4D8               	btfss	status,2,c
  3457  002F1E  EF93  F017         	goto	u6301
  3458  002F22  EF95  F017         	goto	u6300
  3459  002F26                     u6301:
  3460  002F26  EFC4  F017         	goto	l5758
  3461  002F2A                     u6300:
  3462  002F2A                     
  3463                           ; BSR set to: 0
  3464                           ;AppTesteLM4040.c: 327:         {;AppTesteLM4040.c: 328:             sprintf((char*)(txt
      +                          Linha1),"  Calibrando..");
  3465  002F2A  0EC8               	movlw	low _txtLinha1
  3466  002F2C  6FB0               	movwf	sprintf@s& (0+255),b
  3467  002F2E  0E01               	movlw	high _txtLinha1
  3468  002F30  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3469  002F32  0E61               	movlw	low STR_1
  3470  002F34  6FB2               	movwf	sprintf@fmt& (0+255),b
  3471  002F36  0E0F               	movlw	high STR_1
  3472  002F38  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3473  002F3A  EC93  F025         	call	_sprintf	;wreg free
  3474  002F3E                     
  3475                           ;AppTesteLM4040.c: 329:             SRV_Display_Write(1,1,txtLinha1);
  3476  002F3E  0E01               	movlw	1
  3477  002F40  6E0B               	movwf	SRV_Display_Write@coluna^0,c
  3478  002F42  0EC8               	movlw	low _txtLinha1
  3479  002F44  6E0C               	movwf	SRV_Display_Write@data^0,c
  3480  002F46  0E01               	movlw	high _txtLinha1
  3481  002F48  6E0D               	movwf	(SRV_Display_Write@data+1)^0,c
  3482  002F4A  0E01               	movlw	1
  3483  002F4C  ECC6  F027         	call	_SRV_Display_Write
  3484  002F50                     
  3485                           ;AppTesteLM4040.c: 330:             sprintf((char*)(txtLinha2),"AD:%u AR:%u ",difan,tens
      +                          aoreferencia);
  3486  002F50  0EB8               	movlw	low _txtLinha2
  3487  002F52  0100               	movlb	0	; () banked
  3488  002F54  6FB0               	movwf	sprintf@s& (0+255),b
  3489  002F56  0E01               	movlw	high _txtLinha2
  3490  002F58  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3491  002F5A  0E70               	movlw	low STR_2
  3492  002F5C  6FB2               	movwf	sprintf@fmt& (0+255),b
  3493  002F5E  0E0F               	movlw	high STR_2
  3494  002F60  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3495  002F62  C056  F0B4         	movff	_difan,?_sprintf+4
  3496  002F66  C057  F0B5         	movff	_difan+1,?_sprintf+5
  3497  002F6A  C058  F0B6         	movff	_tensaoreferencia,?_sprintf+6
  3498  002F6E  C059  F0B7         	movff	_tensaoreferencia+1,?_sprintf+7
  3499  002F72  EC93  F025         	call	_sprintf	;wreg free
  3500                           
  3501                           ;AppTesteLM4040.c: 331:             SRV_Display_Write(2,1,txtLinha2);
  3502  002F76  0E01               	movlw	1
  3503  002F78  6E0B               	movwf	SRV_Display_Write@coluna^0,c
  3504  002F7A  0EB8               	movlw	low _txtLinha2
  3505  002F7C  6E0C               	movwf	SRV_Display_Write@data^0,c
  3506  002F7E  0E01               	movlw	high _txtLinha2
  3507  002F80  6E0D               	movwf	(SRV_Display_Write@data+1)^0,c
  3508  002F82  0E02               	movlw	2
  3509  002F84  ECC6  F027         	call	_SRV_Display_Write
  3510  002F88                     l5758:
  3511                           
  3512                           ;AppTesteLM4040.c: 333:         if(state.identifica_mudanca == 1)
  3513  002F88  0100               	movlb	0	; () banked
  3514  002F8A  05C5               	decf	(_state+1)& (0+255),w,b
  3515  002F8C  A4D8               	btfss	status,2,c
  3516  002F8E  EFCB  F017         	goto	u6311
  3517  002F92  EFCD  F017         	goto	u6310
  3518  002F96                     u6311:
  3519  002F96  EFFC  F017         	goto	l5766
  3520  002F9A                     u6310:
  3521  002F9A                     
  3522                           ; BSR set to: 0
  3523                           ;AppTesteLM4040.c: 334:         {;AppTesteLM4040.c: 335:             sprintf((char*)(txt
      +                          Linha1),"Posicione a PCB");
  3524  002F9A  0EC8               	movlw	low _txtLinha1
  3525  002F9C  6FB0               	movwf	sprintf@s& (0+255),b
  3526  002F9E  0E01               	movlw	high _txtLinha1
  3527  002FA0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3528  002FA2  0E41               	movlw	low STR_3
  3529  002FA4  6FB2               	movwf	sprintf@fmt& (0+255),b
  3530  002FA6  0E0F               	movlw	high STR_3
  3531  002FA8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3532  002FAA  EC93  F025         	call	_sprintf	;wreg free
  3533  002FAE                     
  3534                           ;AppTesteLM4040.c: 336:             SRV_Display_Write(1,1,txtLinha1);
  3535  002FAE  0E01               	movlw	1
  3536  002FB0  6E0B               	movwf	SRV_Display_Write@coluna^0,c
  3537  002FB2  0EC8               	movlw	low _txtLinha1
  3538  002FB4  6E0C               	movwf	SRV_Display_Write@data^0,c
  3539  002FB6  0E01               	movlw	high _txtLinha1
  3540  002FB8  6E0D               	movwf	(SRV_Display_Write@data+1)^0,c
  3541  002FBA  0E01               	movlw	1
  3542  002FBC  ECC6  F027         	call	_SRV_Display_Write
  3543  002FC0                     
  3544                           ;AppTesteLM4040.c: 337:             sprintf((char*)(txtLinha2),"AD:%u AR:%u ",difan,tens
      +                          aoreferencia);
  3545  002FC0  0EB8               	movlw	low _txtLinha2
  3546  002FC2  0100               	movlb	0	; () banked
  3547  002FC4  6FB0               	movwf	sprintf@s& (0+255),b
  3548  002FC6  0E01               	movlw	high _txtLinha2
  3549  002FC8  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3550  002FCA  0E70               	movlw	low STR_2
  3551  002FCC  6FB2               	movwf	sprintf@fmt& (0+255),b
  3552  002FCE  0E0F               	movlw	high STR_2
  3553  002FD0  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3554  002FD2  C056  F0B4         	movff	_difan,?_sprintf+4
  3555  002FD6  C057  F0B5         	movff	_difan+1,?_sprintf+5
  3556  002FDA  C058  F0B6         	movff	_tensaoreferencia,?_sprintf+6
  3557  002FDE  C059  F0B7         	movff	_tensaoreferencia+1,?_sprintf+7
  3558  002FE2  EC93  F025         	call	_sprintf	;wreg free
  3559                           
  3560                           ;AppTesteLM4040.c: 338:             SRV_Display_Write(2,1,txtLinha2);
  3561  002FE6  0E01               	movlw	1
  3562  002FE8  6E0B               	movwf	SRV_Display_Write@coluna^0,c
  3563  002FEA  0EB8               	movlw	low _txtLinha2
  3564  002FEC  6E0C               	movwf	SRV_Display_Write@data^0,c
  3565  002FEE  0E01               	movlw	high _txtLinha2
  3566  002FF0  6E0D               	movwf	(SRV_Display_Write@data+1)^0,c
  3567  002FF2  0E02               	movlw	2
  3568  002FF4  ECC6  F027         	call	_SRV_Display_Write
  3569  002FF8                     l5766:
  3570                           
  3571                           ;AppTesteLM4040.c: 340:         if(state.testando == 1)
  3572  002FF8  0100               	movlb	0	; () banked
  3573  002FFA  05C6               	decf	(_state+2)& (0+255),w,b
  3574  002FFC  A4D8               	btfss	status,2,c
  3575  002FFE  EF03  F018         	goto	u6321
  3576  003002  EF05  F018         	goto	u6320
  3577  003006                     u6321:
  3578  003006  EF38  F018         	goto	l5774
  3579  00300A                     u6320:
  3580  00300A                     
  3581                           ; BSR set to: 0
  3582                           ;AppTesteLM4040.c: 341:         {;AppTesteLM4040.c: 342:             sprintf((char*)(txt
      +                          Linha1),"  Testando     ");
  3583  00300A  0EC8               	movlw	low _txtLinha1
  3584  00300C  6FB0               	movwf	sprintf@s& (0+255),b
  3585  00300E  0E01               	movlw	high _txtLinha1
  3586  003010  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3587  003012  0E21               	movlw	low STR_5
  3588  003014  6FB2               	movwf	sprintf@fmt& (0+255),b
  3589  003016  0E0F               	movlw	high STR_5
  3590  003018  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3591  00301A  EC93  F025         	call	_sprintf	;wreg free
  3592  00301E                     
  3593                           ;AppTesteLM4040.c: 343:             SRV_Display_Write(1,1,txtLinha1);
  3594  00301E  0E01               	movlw	1
  3595  003020  6E0B               	movwf	SRV_Display_Write@coluna^0,c
  3596  003022  0EC8               	movlw	low _txtLinha1
  3597  003024  6E0C               	movwf	SRV_Display_Write@data^0,c
  3598  003026  0E01               	movlw	high _txtLinha1
  3599  003028  6E0D               	movwf	(SRV_Display_Write@data+1)^0,c
  3600  00302A  0E01               	movlw	1
  3601  00302C  ECC6  F027         	call	_SRV_Display_Write
  3602  003030                     
  3603                           ;AppTesteLM4040.c: 344:             sprintf((char*)(txtLinha2),"E:%03u M:%.3fmV",vMax,te
      +                          nsaoexibe);
  3604  003030  0EB8               	movlw	low _txtLinha2
  3605  003032  0100               	movlb	0	; () banked
  3606  003034  6FB0               	movwf	sprintf@s& (0+255),b
  3607  003036  0E01               	movlw	high _txtLinha2
  3608  003038  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3609  00303A  0E51               	movlw	low STR_6
  3610  00303C  6FB2               	movwf	sprintf@fmt& (0+255),b
  3611  00303E  0E0F               	movlw	high STR_6
  3612  003040  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3613  003042  C0EF  F0B4         	movff	_vMax,?_sprintf+4
  3614  003046  C0F0  F0B5         	movff	_vMax+1,?_sprintf+5
  3615  00304A  C154  F0B6         	movff	_tensaoexibe,?_sprintf+6
  3616  00304E  C155  F0B7         	movff	_tensaoexibe+1,?_sprintf+7
  3617  003052  C156  F0B8         	movff	_tensaoexibe+2,?_sprintf+8
  3618  003056  C157  F0B9         	movff	_tensaoexibe+3,?_sprintf+9
  3619  00305A  EC93  F025         	call	_sprintf	;wreg free
  3620                           
  3621                           ;AppTesteLM4040.c: 345:             SRV_Display_Write(2,1,txtLinha2);
  3622  00305E  0E01               	movlw	1
  3623  003060  6E0B               	movwf	SRV_Display_Write@coluna^0,c
  3624  003062  0EB8               	movlw	low _txtLinha2
  3625  003064  6E0C               	movwf	SRV_Display_Write@data^0,c
  3626  003066  0E01               	movlw	high _txtLinha2
  3627  003068  6E0D               	movwf	(SRV_Display_Write@data+1)^0,c
  3628  00306A  0E02               	movlw	2
  3629  00306C  ECC6  F027         	call	_SRV_Display_Write
  3630  003070                     l5774:
  3631                           
  3632                           ;AppTesteLM4040.c: 347:         if(state.aprovado == 1)
  3633  003070  0100               	movlb	0	; () banked
  3634  003072  05C7               	decf	(_state+3)& (0+255),w,b
  3635  003074  A4D8               	btfss	status,2,c
  3636  003076  EF3F  F018         	goto	u6331
  3637  00307A  EF41  F018         	goto	u6330
  3638  00307E                     u6331:
  3639  00307E  EF68  F018         	goto	l5782
  3640  003082                     u6330:
  3641  003082                     
  3642                           ; BSR set to: 0
  3643                           ;AppTesteLM4040.c: 348:         {;AppTesteLM4040.c: 349:             sprintf((char*)(txt
      +                          Linha1),"  Aprovado     ");
  3644  003082  0EC8               	movlw	low _txtLinha1
  3645  003084  6FB0               	movwf	sprintf@s& (0+255),b
  3646  003086  0E01               	movlw	high _txtLinha1
  3647  003088  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3648  00308A  0E11               	movlw	low STR_7
  3649  00308C  6FB2               	movwf	sprintf@fmt& (0+255),b
  3650  00308E  0E0F               	movlw	high STR_7
  3651  003090  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3652  003092  EC93  F025         	call	_sprintf	;wreg free
  3653  003096                     
  3654                           ;AppTesteLM4040.c: 350:             SRV_Display_Write(1,1,txtLinha1);
  3655  003096  0E01               	movlw	1
  3656  003098  6E0B               	movwf	SRV_Display_Write@coluna^0,c
  3657  00309A  0EC8               	movlw	low _txtLinha1
  3658  00309C  6E0C               	movwf	SRV_Display_Write@data^0,c
  3659  00309E  0E01               	movlw	high _txtLinha1
  3660  0030A0  6E0D               	movwf	(SRV_Display_Write@data+1)^0,c
  3661  0030A2  0E01               	movlw	1
  3662  0030A4  ECC6  F027         	call	_SRV_Display_Write
  3663  0030A8                     
  3664                           ;AppTesteLM4040.c: 351:             sprintf((char*)(txtLinha2),"               ");
  3665  0030A8  0EB8               	movlw	low _txtLinha2
  3666  0030AA  0100               	movlb	0	; () banked
  3667  0030AC  6FB0               	movwf	sprintf@s& (0+255),b
  3668  0030AE  0E01               	movlw	high _txtLinha2
  3669  0030B0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3670  0030B2  0E01               	movlw	low STR_8
  3671  0030B4  6FB2               	movwf	sprintf@fmt& (0+255),b
  3672  0030B6  0E0F               	movlw	high STR_8
  3673  0030B8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3674  0030BA  EC93  F025         	call	_sprintf	;wreg free
  3675                           
  3676                           ;AppTesteLM4040.c: 352:             SRV_Display_Write(2,1,txtLinha2);
  3677  0030BE  0E01               	movlw	1
  3678  0030C0  6E0B               	movwf	SRV_Display_Write@coluna^0,c
  3679  0030C2  0EB8               	movlw	low _txtLinha2
  3680  0030C4  6E0C               	movwf	SRV_Display_Write@data^0,c
  3681  0030C6  0E01               	movlw	high _txtLinha2
  3682  0030C8  6E0D               	movwf	(SRV_Display_Write@data+1)^0,c
  3683  0030CA  0E02               	movlw	2
  3684  0030CC  ECC6  F027         	call	_SRV_Display_Write
  3685  0030D0                     l5782:
  3686                           
  3687                           ;AppTesteLM4040.c: 354:         if(state.reprovado == 1)
  3688  0030D0  0100               	movlb	0	; () banked
  3689  0030D2  05C8               	decf	(_state+4)& (0+255),w,b
  3690  0030D4  A4D8               	btfss	status,2,c
  3691  0030D6  EF6F  F018         	goto	u6341
  3692  0030DA  EF71  F018         	goto	u6340
  3693  0030DE                     u6341:
  3694  0030DE  EF98  F018         	goto	l513
  3695  0030E2                     u6340:
  3696  0030E2                     
  3697                           ; BSR set to: 0
  3698                           ;AppTesteLM4040.c: 355:         {;AppTesteLM4040.c: 356:             sprintf((char*)(txt
      +                          Linha1),"  Reprovado    ");
  3699  0030E2  0EC8               	movlw	low _txtLinha1
  3700  0030E4  6FB0               	movwf	sprintf@s& (0+255),b
  3701  0030E6  0E01               	movlw	high _txtLinha1
  3702  0030E8  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3703  0030EA  0E31               	movlw	low STR_9
  3704  0030EC  6FB2               	movwf	sprintf@fmt& (0+255),b
  3705  0030EE  0E0F               	movlw	high STR_9
  3706  0030F0  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3707  0030F2  EC93  F025         	call	_sprintf	;wreg free
  3708  0030F6                     
  3709                           ;AppTesteLM4040.c: 357:             SRV_Display_Write(1,1,txtLinha1);
  3710  0030F6  0E01               	movlw	1
  3711  0030F8  6E0B               	movwf	SRV_Display_Write@coluna^0,c
  3712  0030FA  0EC8               	movlw	low _txtLinha1
  3713  0030FC  6E0C               	movwf	SRV_Display_Write@data^0,c
  3714  0030FE  0E01               	movlw	high _txtLinha1
  3715  003100  6E0D               	movwf	(SRV_Display_Write@data+1)^0,c
  3716  003102  0E01               	movlw	1
  3717  003104  ECC6  F027         	call	_SRV_Display_Write
  3718  003108                     
  3719                           ;AppTesteLM4040.c: 358:             sprintf((char*)(txtLinha2),"               ");
  3720  003108  0EB8               	movlw	low _txtLinha2
  3721  00310A  0100               	movlb	0	; () banked
  3722  00310C  6FB0               	movwf	sprintf@s& (0+255),b
  3723  00310E  0E01               	movlw	high _txtLinha2
  3724  003110  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  3725  003112  0E01               	movlw	low STR_8
  3726  003114  6FB2               	movwf	sprintf@fmt& (0+255),b
  3727  003116  0E0F               	movlw	high STR_8
  3728  003118  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  3729  00311A  EC93  F025         	call	_sprintf	;wreg free
  3730                           
  3731                           ;AppTesteLM4040.c: 359:             SRV_Display_Write(2,1,txtLinha2);
  3732  00311E  0E01               	movlw	1
  3733  003120  6E0B               	movwf	SRV_Display_Write@coluna^0,c
  3734  003122  0EB8               	movlw	low _txtLinha2
  3735  003124  6E0C               	movwf	SRV_Display_Write@data^0,c
  3736  003126  0E01               	movlw	high _txtLinha2
  3737  003128  6E0D               	movwf	(SRV_Display_Write@data+1)^0,c
  3738  00312A  0E02               	movlw	2
  3739  00312C  ECC6  F027         	call	_SRV_Display_Write
  3740  003130                     l513:
  3741  003130  0012               	return		;funcret
  3742  003132                     __end_of_AtualizaDisplay:
  3743                           	opt callstack 0
  3744                           
  3745 ;; *************** function _sprintf *****************
  3746 ;; Defined at:
  3747 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  s               2   80[BANK0 ] PTR unsigned char 
  3750 ;;		 -> txtLinha2(16), txtLinha1(16), 
  3751 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  3752 ;;		 -> STR_10(16), STR_9(16), STR_8(16), STR_7(16), 
  3753 ;;		 -> STR_6(16), STR_5(16), STR_4(13), STR_3(16), 
  3754 ;;		 -> STR_2(13), STR_1(15), 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  f               6   94[BANK0 ] struct _IO_FILE
  3757 ;;  ap              2   92[BANK0 ] PTR void [1]
  3758 ;;		 -> ?_sprintf(2), 
  3759 ;;  ret             2    0        int 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  2   80[BANK0 ] int 
  3762 ;; Registers used:
  3763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3769 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3770 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3772 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;Total ram usage:       20 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:   10
  3776 ;; This function calls:
  3777 ;;		_vfprintf
  3778 ;; This function is called by:
  3779 ;;		_AtualizaDisplay
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text29
  3784  004B26                     __ptext29:
  3785                           	opt callstack 0
  3786  004B26                     _sprintf:
  3787                           	opt callstack 18
  3788  004B26  0EB4               	movlw	low (?_sprintf+4)
  3789  004B28  0100               	movlb	0	; () banked
  3790  004B2A  6FBC               	movwf	sprintf@ap& (0+255),b
  3791  004B2C  0E00               	movlw	high (?_sprintf+4)
  3792  004B2E  6FBD               	movwf	(sprintf@ap+1)& (0+255),b
  3793  004B30  C0B0  F0BE         	movff	sprintf@s,sprintf@f
  3794  004B34  C0B1  F0BF         	movff	sprintf@s+1,sprintf@f+1
  3795  004B38                     
  3796                           ; BSR set to: 0
  3797  004B38  0E00               	movlw	0
  3798  004B3A  6FC1               	movwf	(sprintf@f+3)& (0+255),b
  3799  004B3C  0E00               	movlw	0
  3800  004B3E  6FC0               	movwf	(sprintf@f+2)& (0+255),b
  3801  004B40                     
  3802                           ; BSR set to: 0
  3803  004B40  0E00               	movlw	0
  3804  004B42  6FC3               	movwf	(sprintf@f+5)& (0+255),b
  3805  004B44  0E00               	movlw	0
  3806  004B46  6FC2               	movwf	(sprintf@f+4)& (0+255),b
  3807  004B48                     
  3808                           ; BSR set to: 0
  3809  004B48  0EBE               	movlw	low sprintf@f
  3810  004B4A  6E4C               	movwf	vfprintf@fp^0,c
  3811  004B4C  0E00               	movlw	high sprintf@f
  3812  004B4E  6E4D               	movwf	(vfprintf@fp+1)^0,c
  3813  004B50  C0B2  F04E         	movff	sprintf@fmt,vfprintf@fmt
  3814  004B54  C0B3  F04F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3815  004B58  0EBC               	movlw	low sprintf@ap
  3816  004B5A  6E50               	movwf	vfprintf@ap^0,c
  3817  004B5C  0E00               	movlw	high sprintf@ap
  3818  004B5E  6E51               	movwf	(vfprintf@ap+1)^0,c
  3819  004B60  ECA8  F024         	call	_vfprintf	;wreg free
  3820  004B64  0100               	movlb	0	; () banked
  3821  004B66  51C0               	movf	(sprintf@f+2)& (0+255),w,b
  3822  004B68  25B0               	addwf	sprintf@s& (0+255),w,b
  3823  004B6A  6ED9               	movwf	fsr2l,c
  3824  004B6C  51C1               	movf	(sprintf@f+3)& (0+255),w,b
  3825  004B6E  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  3826  004B70  6EDA               	movwf	fsr2h,c
  3827  004B72  0E00               	movlw	0
  3828  004B74  6EDF               	movwf	indf2,c
  3829  004B76                     
  3830                           ; BSR set to: 0
  3831  004B76  0012               	return		;funcret
  3832  004B78                     __end_of_sprintf:
  3833                           	opt callstack 0
  3834                           
  3835 ;; *************** function _vfprintf *****************
  3836 ;; Defined at:
  3837 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  fp              2   75[COMRAM] PTR struct _IO_FILE
  3840 ;;		 -> sprintf@f(6), 
  3841 ;;  fmt             2   77[COMRAM] PTR const unsigned char 
  3842 ;;		 -> STR_10(16), STR_9(16), STR_8(16), STR_7(16), 
  3843 ;;		 -> STR_6(16), STR_5(16), STR_4(13), STR_3(16), 
  3844 ;;		 -> STR_2(13), STR_1(15), 
  3845 ;;  ap              2   79[COMRAM] PTR PTR void 
  3846 ;;		 -> sprintf@ap(2), 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  cfmt            2   81[COMRAM] PTR unsigned char 
  3849 ;;		 -> STR_10(16), STR_9(16), STR_8(16), STR_7(16), 
  3850 ;;		 -> STR_6(16), STR_5(16), STR_4(13), STR_3(16), 
  3851 ;;		 -> STR_2(13), STR_1(15), 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  2   75[COMRAM] int 
  3854 ;; Registers used:
  3855 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3861 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3862 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3864 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3865 ;;Total ram usage:        8 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    9
  3868 ;; This function calls:
  3869 ;;		_vfpfcnvrt
  3870 ;; This function is called by:
  3871 ;;		_sprintf
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text30
  3876  004950                     __ptext30:
  3877                           	opt callstack 0
  3878  004950                     _vfprintf:
  3879                           	opt callstack 18
  3880  004950                     
  3881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3882  004950  C04E  F052         	movff	vfprintf@fmt,vfprintf@cfmt
  3883  004954  C04F  F053         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3884  004958                     
  3885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3886  004958  0E00               	movlw	0
  3887  00495A  0100               	movlb	0	; () banked
  3888  00495C  6FE2               	movwf	(_nout+1)& (0+255),b
  3889  00495E  0E00               	movlw	0
  3890  004960  6FE1               	movwf	_nout& (0+255),b
  3891                           
  3892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3893  004962  EFC6  F024         	goto	l5240
  3894  004966                     l5238:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3898  004966  C04C  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  3899  00496A  C04D  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3900  00496E  0E52               	movlw	low vfprintf@cfmt
  3901  004970  6E44               	movwf	vfpfcnvrt@fmt^0,c
  3902  004972  0E00               	movlw	high vfprintf@cfmt
  3903  004974  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3904  004976  C050  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  3905  00497A  C051  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3906  00497E  ECA1  F00D         	call	_vfpfcnvrt	;wreg free
  3907  004982  5042               	movf	?_vfpfcnvrt^0,w,c
  3908  004984  0100               	movlb	0	; () banked
  3909  004986  27E1               	addwf	_nout& (0+255),f,b
  3910  004988  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  3911  00498A  23E2               	addwfc	(_nout+1)& (0+255),f,b
  3912  00498C                     l5240:
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3916  00498C  C052  FFF6         	movff	vfprintf@cfmt,tblptrl
  3917  004990  C053  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3918  004994                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3919  004994  6AF8               	clrf	tblptru,c
  3920  004996                     	endif
  3921  004996                     	if	0	;tblptru may be non-zero
  3922  004996                     	endif
  3923  004996  0008               	tblrd		*
  3924  004998  50F5               	movf	tablat,w,c
  3925  00499A  0900               	iorlw	0
  3926  00499C  A4D8               	btfss	status,2,c
  3927  00499E  EFD3  F024         	goto	u5781
  3928  0049A2  EFD5  F024         	goto	u5780
  3929  0049A6                     u5781:
  3930  0049A6  EFB3  F024         	goto	l5238
  3931  0049AA                     u5780:
  3932  0049AA                     
  3933                           ; BSR set to: 0
  3934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3935  0049AA  C0E1  F04C         	movff	_nout,?_vfprintf
  3936  0049AE  C0E2  F04D         	movff	_nout+1,?_vfprintf+1
  3937  0049B2                     
  3938                           ; BSR set to: 0
  3939  0049B2  0012               	return		;funcret
  3940  0049B4                     __end_of_vfprintf:
  3941                           	opt callstack 0
  3942                           
  3943 ;; *************** function _vfpfcnvrt *****************
  3944 ;; Defined at:
  3945 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  3948 ;;		 -> sprintf@f(6), 
  3949 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  3950 ;;		 -> vfprintf@cfmt(2), 
  3951 ;;  ap              2   69[COMRAM] PTR PTR void 
  3952 ;;		 -> sprintf@ap(2), 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  llu             8   56[BANK0 ] unsigned long long 
  3955 ;;  ll              8    0        long long 
  3956 ;;  f               4   72[BANK0 ] long long 
  3957 ;;  ct              3   76[BANK0 ] unsigned char [3]
  3958 ;;  vp              3    0        PTR void 
  3959 ;;  cp              3    0        PTR unsigned char 
  3960 ;;  done            2   64[BANK0 ] int 
  3961 ;;  i               2    0        int 
  3962 ;;  c               1   79[BANK0 ] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  2   65[COMRAM] int 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3972 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3973 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3975 ;;      Totals:        10      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3976 ;;Total ram usage:       34 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    8
  3979 ;; This function calls:
  3980 ;;		_atoi
  3981 ;;		_efgtoa
  3982 ;;		_fputc
  3983 ;;		_isdigit
  3984 ;;		_isupper
  3985 ;;		_strncmp
  3986 ;;		_tolower
  3987 ;;		_utoa
  3988 ;; This function is called by:
  3989 ;;		_vfprintf
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text31
  3994  001B42                     __ptext31:
  3995                           	opt callstack 0
  3996  001B42                     _vfpfcnvrt:
  3997                           	opt callstack 18
  3998  001B42                     
  3999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4000  001B42  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4001  001B46  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4002  001B4A  CFDE FFF6          	movff	postinc2,tblptrl
  4003  001B4E  CFDD FFF7          	movff	postdec2,tblptrh
  4004  001B52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4005  001B52  6AF8               	clrf	tblptru,c
  4006  001B54                     	endif
  4007  001B54                     	if	0	;tblptru may be non-zero
  4008  001B54                     	endif
  4009  001B54  0008               	tblrd		*
  4010  001B56  50F5               	movf	tablat,w,c
  4011  001B58  0A25               	xorlw	37
  4012  001B5A  A4D8               	btfss	status,2,c
  4013  001B5C  EFB2  F00D         	goto	u5521
  4014  001B60  EFB4  F00D         	goto	u5520
  4015  001B64                     u5521:
  4016  001B64  EFF9  F010         	goto	l5174
  4017  001B68                     u5520:
  4018  001B68                     
  4019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4020  001B68  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4021  001B6C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4022  001B70  2ADE               	incf	postinc2,f,c
  4023  001B72  0E00               	movlw	0
  4024  001B74  22DD               	addwfc	postdec2,f,c
  4025  001B76                     
  4026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4027  001B76  0E00               	movlw	0
  4028  001B78  0100               	movlb	0	; () banked
  4029  001B7A  6FE4               	movwf	(_width+1)& (0+255),b
  4030  001B7C  0E00               	movlw	0
  4031  001B7E  6FE3               	movwf	_width& (0+255),b
  4032  001B80  C0E3  F0E5         	movff	_width,_flags
  4033  001B84  C0E4  F0E6         	movff	_width+1,_flags+1
  4034  001B88                     
  4035                           ; BSR set to: 0
  4036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4037  001B88  6854               	setf	_prec^0,c
  4038  001B8A  6855               	setf	(_prec+1)^0,c
  4039  001B8C                     
  4040                           ; BSR set to: 0
  4041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4042  001B8C  0E00               	movlw	0
  4043  001B8E  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4044  001B90  0E00               	movlw	0
  4045  001B92  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  4046                           
  4047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4048  001B94  EF13  F00E         	goto	l5070
  4049  001B98                     l5044:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4053  001B98  81E5               	bsf	_flags& (0+255),0,b
  4054  001B9A                     l5046:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4058  001B9A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4059  001B9E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4060  001BA2  2ADE               	incf	postinc2,f,c
  4061  001BA4  0E00               	movlw	0
  4062  001BA6  22DD               	addwfc	postdec2,f,c
  4063                           
  4064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4065  001BA8  EF13  F00E         	goto	l5070
  4066  001BAC                     l5048:
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4070  001BAC  83E5               	bsf	_flags& (0+255),1,b
  4071  001BAE  EFCD  F00D         	goto	l5046
  4072  001BB2                     l5052:
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4076  001BB2  85E5               	bsf	_flags& (0+255),2,b
  4077  001BB4  EFCD  F00D         	goto	l5046
  4078  001BB8                     l5056:
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4082  001BB8  87E5               	bsf	_flags& (0+255),3,b
  4083  001BBA  EFCD  F00D         	goto	l5046
  4084  001BBE                     l5060:
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4088  001BBE  89E5               	bsf	_flags& (0+255),4,b
  4089  001BC0  EFCD  F00D         	goto	l5046
  4090  001BC4                     l5064:
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4094  001BC4  0E00               	movlw	0
  4095  001BC6  6FA1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4096  001BC8  0E01               	movlw	1
  4097  001BCA  6FA0               	movwf	vfpfcnvrt@done& (0+255),b
  4098                           
  4099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4100  001BCC  EF13  F00E         	goto	l5070
  4101  001BD0                     l5068:
  4102                           
  4103                           ; BSR set to: 0
  4104  001BD0  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4105  001BD4  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4106  001BD8  CFDE FFF6          	movff	postinc2,tblptrl
  4107  001BDC  CFDD FFF7          	movff	postdec2,tblptrh
  4108  001BE0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4109  001BE0  6AF8               	clrf	tblptru,c
  4110  001BE2                     	endif
  4111  001BE2                     	if	0	;tblptru may be non-zero
  4112  001BE2                     	endif
  4113  001BE2  0008               	tblrd		*
  4114  001BE4  50F5               	movf	tablat,w,c
  4115  001BE6  6E48               	movwf	??_vfpfcnvrt^0,c
  4116  001BE8  6A49               	clrf	(??_vfpfcnvrt+1)^0,c
  4117                           
  4118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4119                           ; Switch size 1, requested type "simple"
  4120                           ; Number of cases is 1, Range of values is 0 to 0
  4121                           ; switch strategies available:
  4122                           ; Name         Instructions Cycles
  4123                           ; simple_byte            4     3 (average)
  4124                           ;	Chosen strategy is simple_byte
  4125  001BEA  5049               	movf	(??_vfpfcnvrt+1)^0,w,c
  4126  001BEC  0A00               	xorlw	0	; case 0
  4127  001BEE  B4D8               	btfsc	status,2,c
  4128  001BF0  EFFC  F00D         	goto	l5858
  4129  001BF4  EFE2  F00D         	goto	l5064
  4130  001BF8                     l5858:
  4131                           
  4132                           ; BSR set to: 0
  4133                           ; Switch size 1, requested type "simple"
  4134                           ; Number of cases is 5, Range of values is 32 to 48
  4135                           ; switch strategies available:
  4136                           ; Name         Instructions Cycles
  4137                           ; simple_byte           16     9 (average)
  4138                           ;	Chosen strategy is simple_byte
  4139  001BF8  5048               	movf	??_vfpfcnvrt^0,w,c
  4140  001BFA  0A20               	xorlw	32	; case 32
  4141  001BFC  B4D8               	btfsc	status,2,c
  4142  001BFE  EFDC  F00D         	goto	l5056
  4143  001C02  0A03               	xorlw	3	; case 35
  4144  001C04  B4D8               	btfsc	status,2,c
  4145  001C06  EFDF  F00D         	goto	l5060
  4146  001C0A  0A08               	xorlw	8	; case 43
  4147  001C0C  B4D8               	btfsc	status,2,c
  4148  001C0E  EFD9  F00D         	goto	l5052
  4149  001C12  0A06               	xorlw	6	; case 45
  4150  001C14  B4D8               	btfsc	status,2,c
  4151  001C16  EFCC  F00D         	goto	l5044
  4152  001C1A  0A1D               	xorlw	29	; case 48
  4153  001C1C  B4D8               	btfsc	status,2,c
  4154  001C1E  EFD6  F00D         	goto	l5048
  4155  001C22  EFE2  F00D         	goto	l5064
  4156  001C26                     l5070:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4160  001C26  51A0               	movf	vfpfcnvrt@done& (0+255),w,b
  4161  001C28  11A1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4162  001C2A  B4D8               	btfsc	status,2,c
  4163  001C2C  EF1A  F00E         	goto	u5531
  4164  001C30  EF1C  F00E         	goto	u5530
  4165  001C34                     u5531:
  4166  001C34  EFE8  F00D         	goto	l5068
  4167  001C38                     u5530:
  4168  001C38                     
  4169                           ; BSR set to: 0
  4170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4171  001C38  A1E5               	btfss	_flags& (0+255),0,b
  4172  001C3A  EF21  F00E         	goto	u5541
  4173  001C3E  EF23  F00E         	goto	u5540
  4174  001C42                     u5541:
  4175  001C42  EF24  F00E         	goto	l5074
  4176  001C46                     u5540:
  4177  001C46                     
  4178                           ; BSR set to: 0
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4180  001C46  93E5               	bcf	_flags& (0+255),1,b
  4181  001C48                     l5074:
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4185  001C48  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4186  001C4C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4187  001C50  CFDE FFF6          	movff	postinc2,tblptrl
  4188  001C54  CFDD FFF7          	movff	postdec2,tblptrh
  4189  001C58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4190  001C58  6AF8               	clrf	tblptru,c
  4191  001C5A                     	endif
  4192  001C5A                     	if	0	;tblptru may be non-zero
  4193  001C5A                     	endif
  4194  001C5A  0008               	tblrd		*
  4195  001C5C  50F5               	movf	tablat,w,c
  4196  001C5E  0A2A               	xorlw	42
  4197  001C60  A4D8               	btfss	status,2,c
  4198  001C62  EF35  F00E         	goto	u5551
  4199  001C66  EF37  F00E         	goto	u5550
  4200  001C6A                     u5551:
  4201  001C6A  EF60  F00E         	goto	l5082
  4202  001C6E                     u5550:
  4203  001C6E                     
  4204                           ; BSR set to: 0
  4205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4206  001C6E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4207  001C72  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4208  001C76  2ADE               	incf	postinc2,f,c
  4209  001C78  0E00               	movlw	0
  4210  001C7A  22DD               	addwfc	postdec2,f,c
  4211                           
  4212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4213  001C7C  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4214  001C80  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4215  001C84  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4216  001C88  0E02               	movlw	2
  4217  001C8A  26DE               	addwf	postinc2,f,c
  4218  001C8C  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4219  001C90  0E00               	movlw	0
  4220  001C92  22DD               	addwfc	postdec2,f,c
  4221  001C94  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4222  001C98  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4223  001C9C  CFDE F0E3          	movff	postinc2,_width
  4224  001CA0  CFDD F0E4          	movff	postdec2,_width+1
  4225  001CA4                     
  4226                           ; BSR set to: 0
  4227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4228  001CA4  BFE4               	btfsc	(_width+1)& (0+255),7,b
  4229  001CA6  EF59  F00E         	goto	u5560
  4230  001CAA  EF57  F00E         	goto	u5561
  4231  001CAE                     u5561:
  4232  001CAE  EFA5  F00E         	goto	l5092
  4233  001CB2                     u5560:
  4234  001CB2                     
  4235                           ; BSR set to: 0
  4236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4237  001CB2  81E5               	bsf	_flags& (0+255),0,b
  4238                           
  4239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4240  001CB4  6DE3               	negf	_width& (0+255),b
  4241  001CB6  1FE4               	comf	(_width+1)& (0+255),f,b
  4242  001CB8  B0D8               	btfsc	status,0,c
  4243  001CBA  2BE4               	incf	(_width+1)& (0+255),f,b
  4244  001CBC  EFA5  F00E         	goto	l5092
  4245  001CC0                     l5082:
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4249  001CC0  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4250  001CC4  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4251  001CC8  CFDE F00A          	movff	postinc2,atoi@s
  4252  001CCC  CFDD F00B          	movff	postdec2,atoi@s+1
  4253  001CD0  EC50  F01C         	call	_atoi	;wreg free
  4254  001CD4  C00A  F0E3         	movff	?_atoi,_width
  4255  001CD8  C00B  F0E4         	movff	?_atoi+1,_width+1
  4256                           
  4257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4258  001CDC  EF77  F00E         	goto	l5086
  4259  001CE0                     l5084:
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4263  001CE0  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4264  001CE4  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4265  001CE8  2ADE               	incf	postinc2,f,c
  4266  001CEA  0E00               	movlw	0
  4267  001CEC  22DD               	addwfc	postdec2,f,c
  4268  001CEE                     l5086:
  4269  001CEE  0ED0               	movlw	208
  4270  001CF0  6E48               	movwf	??_vfpfcnvrt^0,c
  4271  001CF2  0EFF               	movlw	255
  4272  001CF4  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
  4273  001CF6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4274  001CFA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4275  001CFE  CFDE FFF6          	movff	postinc2,tblptrl
  4276  001D02  CFDD FFF7          	movff	postdec2,tblptrh
  4277  001D06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4278  001D06  6AF8               	clrf	tblptru,c
  4279  001D08                     	endif
  4280  001D08                     	if	0	;tblptru may be non-zero
  4281  001D08                     	endif
  4282  001D08  0008               	tblrd		*
  4283  001D0A  50F5               	movf	tablat,w,c
  4284  001D0C  6E4A               	movwf	(??_vfpfcnvrt+2)^0,c
  4285  001D0E  6A4B               	clrf	(??_vfpfcnvrt+3)^0,c
  4286  001D10  5048               	movf	??_vfpfcnvrt^0,w,c
  4287  001D12  264A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4288  001D14  5049               	movf	(??_vfpfcnvrt+1)^0,w,c
  4289  001D16  224B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4290  001D18  504B               	movf	(??_vfpfcnvrt+3)^0,w,c
  4291  001D1A  E10A               	bnz	u5570
  4292  001D1C  0E0A               	movlw	10
  4293  001D1E  5C4A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4294  001D20  A0D8               	btfss	status,0,c
  4295  001D22  EF95  F00E         	goto	u5571
  4296  001D26  EF98  F00E         	goto	u5570
  4297  001D2A                     u5571:
  4298  001D2A  0E01               	movlw	1
  4299  001D2C  EF99  F00E         	goto	u5580
  4300  001D30                     u5570:
  4301  001D30  0E00               	movlw	0
  4302  001D32                     u5580:
  4303  001D32  0100               	movlb	0	; () banked
  4304  001D34  6FA2               	movwf	_vfpfcnvrt$1195& (0+255),b
  4305  001D36  6BA3               	clrf	(_vfpfcnvrt$1195+1)& (0+255),b
  4306  001D38                     
  4307                           ; BSR set to: 0
  4308  001D38  51A2               	movf	_vfpfcnvrt$1195& (0+255),w,b
  4309  001D3A  11A3               	iorwf	(_vfpfcnvrt$1195+1)& (0+255),w,b
  4310  001D3C  A4D8               	btfss	status,2,c
  4311  001D3E  EFA3  F00E         	goto	u5591
  4312  001D42  EFA5  F00E         	goto	u5590
  4313  001D46                     u5591:
  4314  001D46  EF70  F00E         	goto	l5084
  4315  001D4A                     u5590:
  4316  001D4A                     l5092:
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4320  001D4A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4321  001D4E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4322  001D52  CFDE FFF6          	movff	postinc2,tblptrl
  4323  001D56  CFDD FFF7          	movff	postdec2,tblptrh
  4324  001D5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4325  001D5A  6AF8               	clrf	tblptru,c
  4326  001D5C                     	endif
  4327  001D5C                     	if	0	;tblptru may be non-zero
  4328  001D5C                     	endif
  4329  001D5C  0008               	tblrd		*
  4330  001D5E  50F5               	movf	tablat,w,c
  4331  001D60  0A2E               	xorlw	46
  4332  001D62  A4D8               	btfss	status,2,c
  4333  001D64  EFB6  F00E         	goto	u5601
  4334  001D68  EFB8  F00E         	goto	u5600
  4335  001D6C                     u5601:
  4336  001D6C  EF38  F00F         	goto	l5112
  4337  001D70                     u5600:
  4338  001D70                     
  4339                           ; BSR set to: 0
  4340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4341  001D70  0E00               	movlw	0
  4342  001D72  6E55               	movwf	(_prec+1)^0,c
  4343  001D74  0E00               	movlw	0
  4344  001D76  6E54               	movwf	_prec^0,c
  4345  001D78                     
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4348  001D78  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4349  001D7C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4350  001D80  2ADE               	incf	postinc2,f,c
  4351  001D82  0E00               	movlw	0
  4352  001D84  22DD               	addwfc	postdec2,f,c
  4353  001D86                     
  4354                           ; BSR set to: 0
  4355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4356  001D86  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4357  001D8A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4358  001D8E  CFDE FFF6          	movff	postinc2,tblptrl
  4359  001D92  CFDD FFF7          	movff	postdec2,tblptrh
  4360  001D96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4361  001D96  6AF8               	clrf	tblptru,c
  4362  001D98                     	endif
  4363  001D98                     	if	0	;tblptru may be non-zero
  4364  001D98                     	endif
  4365  001D98  0008               	tblrd		*
  4366  001D9A  50F5               	movf	tablat,w,c
  4367  001D9C  0A2A               	xorlw	42
  4368  001D9E  A4D8               	btfss	status,2,c
  4369  001DA0  EFD4  F00E         	goto	u5611
  4370  001DA4  EFD6  F00E         	goto	u5610
  4371  001DA8                     u5611:
  4372  001DA8  EFF3  F00E         	goto	l5102
  4373  001DAC                     u5610:
  4374  001DAC                     
  4375                           ; BSR set to: 0
  4376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4377  001DAC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4378  001DB0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4379  001DB4  2ADE               	incf	postinc2,f,c
  4380  001DB6  0E00               	movlw	0
  4381  001DB8  22DD               	addwfc	postdec2,f,c
  4382                           
  4383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4384  001DBA  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4385  001DBE  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4386  001DC2  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4387  001DC6  0E02               	movlw	2
  4388  001DC8  26DE               	addwf	postinc2,f,c
  4389  001DCA  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4390  001DCE  0E00               	movlw	0
  4391  001DD0  22DD               	addwfc	postdec2,f,c
  4392  001DD2  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4393  001DD6  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4394  001DDA  CFDE F054          	movff	postinc2,_prec
  4395  001DDE  CFDD F055          	movff	postdec2,_prec+1
  4396                           
  4397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4398  001DE2  EF38  F00F         	goto	l5112
  4399  001DE6                     l5102:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4403  001DE6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4404  001DEA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4405  001DEE  CFDE F00A          	movff	postinc2,atoi@s
  4406  001DF2  CFDD F00B          	movff	postdec2,atoi@s+1
  4407  001DF6  EC50  F01C         	call	_atoi	;wreg free
  4408  001DFA  C00A  F054         	movff	?_atoi,_prec
  4409  001DFE  C00B  F055         	movff	?_atoi+1,_prec+1
  4410                           
  4411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4412  001E02  EF0A  F00F         	goto	l5106
  4413  001E06                     l5104:
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4417  001E06  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4418  001E0A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4419  001E0E  2ADE               	incf	postinc2,f,c
  4420  001E10  0E00               	movlw	0
  4421  001E12  22DD               	addwfc	postdec2,f,c
  4422  001E14                     l5106:
  4423  001E14  0ED0               	movlw	208
  4424  001E16  6E48               	movwf	??_vfpfcnvrt^0,c
  4425  001E18  0EFF               	movlw	255
  4426  001E1A  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
  4427  001E1C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4428  001E20  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4429  001E24  CFDE FFF6          	movff	postinc2,tblptrl
  4430  001E28  CFDD FFF7          	movff	postdec2,tblptrh
  4431  001E2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4432  001E2C  6AF8               	clrf	tblptru,c
  4433  001E2E                     	endif
  4434  001E2E                     	if	0	;tblptru may be non-zero
  4435  001E2E                     	endif
  4436  001E2E  0008               	tblrd		*
  4437  001E30  50F5               	movf	tablat,w,c
  4438  001E32  6E4A               	movwf	(??_vfpfcnvrt+2)^0,c
  4439  001E34  6A4B               	clrf	(??_vfpfcnvrt+3)^0,c
  4440  001E36  5048               	movf	??_vfpfcnvrt^0,w,c
  4441  001E38  264A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4442  001E3A  5049               	movf	(??_vfpfcnvrt+1)^0,w,c
  4443  001E3C  224B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4444  001E3E  504B               	movf	(??_vfpfcnvrt+3)^0,w,c
  4445  001E40  E10A               	bnz	u5620
  4446  001E42  0E0A               	movlw	10
  4447  001E44  5C4A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4448  001E46  A0D8               	btfss	status,0,c
  4449  001E48  EF28  F00F         	goto	u5621
  4450  001E4C  EF2B  F00F         	goto	u5620
  4451  001E50                     u5621:
  4452  001E50  0E01               	movlw	1
  4453  001E52  EF2C  F00F         	goto	u5630
  4454  001E56                     u5620:
  4455  001E56  0E00               	movlw	0
  4456  001E58                     u5630:
  4457  001E58  0100               	movlb	0	; () banked
  4458  001E5A  6FA4               	movwf	_vfpfcnvrt$1196& (0+255),b
  4459  001E5C  6BA5               	clrf	(_vfpfcnvrt$1196+1)& (0+255),b
  4460  001E5E                     
  4461                           ; BSR set to: 0
  4462  001E5E  51A4               	movf	_vfpfcnvrt$1196& (0+255),w,b
  4463  001E60  11A5               	iorwf	(_vfpfcnvrt$1196+1)& (0+255),w,b
  4464  001E62  A4D8               	btfss	status,2,c
  4465  001E64  EF36  F00F         	goto	u5641
  4466  001E68  EF38  F00F         	goto	u5640
  4467  001E6C                     u5641:
  4468  001E6C  EF03  F00F         	goto	l5104
  4469  001E70                     u5640:
  4470  001E70                     l5112:
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4474  001E70  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4475  001E74  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4476  001E78  CFDE FFF6          	movff	postinc2,tblptrl
  4477  001E7C  CFDD FFF7          	movff	postdec2,tblptrh
  4478  001E80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4479  001E80  6AF8               	clrf	tblptru,c
  4480  001E82                     	endif
  4481  001E82                     	if	0	;tblptru may be non-zero
  4482  001E82                     	endif
  4483  001E82  0008               	tblrd		*
  4484  001E84  50F5               	movf	tablat,w,c
  4485  001E86  6E09               	movwf	tolower@c^0,c
  4486  001E88  6A0A               	clrf	(tolower@c+1)^0,c
  4487  001E8A  ECDA  F024         	call	_tolower	;wreg free
  4488  001E8E  5009               	movf	?_tolower^0,w,c
  4489  001E90  0100               	movlb	0	; () banked
  4490  001E92  6FAC               	movwf	vfpfcnvrt@ct& (0+255),b
  4491  001E94                     
  4492                           ; BSR set to: 0
  4493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4494  001E94  51AC               	movf	vfpfcnvrt@ct& (0+255),w,b
  4495  001E96  B4D8               	btfsc	status,2,c
  4496  001E98  EF50  F00F         	goto	u5651
  4497  001E9C  EF52  F00F         	goto	u5650
  4498  001EA0                     u5651:
  4499  001EA0  EF8E  F00F         	goto	l5122
  4500  001EA4                     u5650:
  4501  001EA4                     
  4502                           ; BSR set to: 0
  4503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4504  001EA4  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4505  001EA8  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4506  001EAC  CFDE F048          	movff	postinc2,??_vfpfcnvrt
  4507  001EB0  CFDD F049          	movff	postdec2,??_vfpfcnvrt+1
  4508  001EB4  0E01               	movlw	1
  4509  001EB6  2648               	addwf	??_vfpfcnvrt^0,f,c
  4510  001EB8  0E00               	movlw	0
  4511  001EBA  2249               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4512  001EBC  C048  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4513  001EC0  C049  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4514  001EC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4515  001EC4  6AF8               	clrf	tblptru,c
  4516  001EC6                     	endif
  4517  001EC6                     	if	0	;tblptru may be non-zero
  4518  001EC6                     	endif
  4519  001EC6  0008               	tblrd		*
  4520  001EC8  50F5               	movf	tablat,w,c
  4521  001ECA  6E09               	movwf	tolower@c^0,c
  4522  001ECC  6A0A               	clrf	(tolower@c+1)^0,c
  4523  001ECE  ECDA  F024         	call	_tolower	;wreg free
  4524  001ED2  5009               	movf	?_tolower^0,w,c
  4525  001ED4  0100               	movlb	0	; () banked
  4526  001ED6  6FAD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4527  001ED8                     
  4528                           ; BSR set to: 0
  4529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4530  001ED8  51AD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4531  001EDA  B4D8               	btfsc	status,2,c
  4532  001EDC  EF72  F00F         	goto	u5661
  4533  001EE0  EF74  F00F         	goto	u5660
  4534  001EE4                     u5661:
  4535  001EE4  EF8E  F00F         	goto	l5122
  4536  001EE8                     u5660:
  4537  001EE8                     
  4538                           ; BSR set to: 0
  4539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4540  001EE8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4541  001EEC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4542  001EF0  CFDE F048          	movff	postinc2,??_vfpfcnvrt
  4543  001EF4  CFDD F049          	movff	postdec2,??_vfpfcnvrt+1
  4544  001EF8  0E02               	movlw	2
  4545  001EFA  2648               	addwf	??_vfpfcnvrt^0,f,c
  4546  001EFC  0E00               	movlw	0
  4547  001EFE  2249               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4548  001F00  C048  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4549  001F04  C049  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4550  001F08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4551  001F08  6AF8               	clrf	tblptru,c
  4552  001F0A                     	endif
  4553  001F0A                     	if	0	;tblptru may be non-zero
  4554  001F0A                     	endif
  4555  001F0A  0008               	tblrd		*
  4556  001F0C  50F5               	movf	tablat,w,c
  4557  001F0E  6E09               	movwf	tolower@c^0,c
  4558  001F10  6A0A               	clrf	(tolower@c+1)^0,c
  4559  001F12  ECDA  F024         	call	_tolower	;wreg free
  4560  001F16  5009               	movf	?_tolower^0,w,c
  4561  001F18  0100               	movlb	0	; () banked
  4562  001F1A  6FAE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4563  001F1C                     l5122:
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  4567  001F1C  0E66               	movlw	102
  4568  001F1E  19AC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4569  001F20  A4D8               	btfss	status,2,c
  4570  001F22  EF95  F00F         	goto	u5671
  4571  001F26  EF97  F00F         	goto	u5670
  4572  001F2A                     u5671:
  4573  001F2A  EFD8  F00F         	goto	l5134
  4574  001F2E                     u5670:
  4575  001F2E                     
  4576                           ; BSR set to: 0
  4577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  4578  001F2E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4579  001F32  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4580  001F36  CFDE FFF6          	movff	postinc2,tblptrl
  4581  001F3A  CFDD FFF7          	movff	postdec2,tblptrh
  4582  001F3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4583  001F3E  6AF8               	clrf	tblptru,c
  4584  001F40                     	endif
  4585  001F40                     	if	0	;tblptru may be non-zero
  4586  001F40                     	endif
  4587  001F40  0008               	tblrd		*
  4588  001F42  CFF5 F0AF          	movff	tablat,vfpfcnvrt@c
  4589  001F46                     
  4590                           ; BSR set to: 0
  4591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  4592  001F46  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4593  001F4A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4594  001F4E  2ADE               	incf	postinc2,f,c
  4595  001F50  0E00               	movlw	0
  4596  001F52  22DD               	addwfc	postdec2,f,c
  4597  001F54                     
  4598                           ; BSR set to: 0
  4599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4600  001F54  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4601  001F58  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4602  001F5C  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4603  001F60  0E04               	movlw	4
  4604  001F62  26DE               	addwf	postinc2,f,c
  4605  001F64  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4606  001F68  0E00               	movlw	0
  4607  001F6A  22DD               	addwfc	postdec2,f,c
  4608  001F6C  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4609  001F70  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4610  001F74  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  4611  001F78  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  4612  001F7C  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  4613  001F80  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  4614  001F84                     l5130:
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  4618  001F84  C042  F036         	movff	vfpfcnvrt@fp,efgtoa@fp
  4619  001F88  C043  F037         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4620  001F8C  C0A8  F038         	movff	vfpfcnvrt@f,efgtoa@f
  4621  001F90  C0A9  F039         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4622  001F94  C0AA  F03A         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4623  001F98  C0AB  F03B         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4624  001F9C  C0AF  F03C         	movff	vfpfcnvrt@c,efgtoa@c
  4625  001FA0  ECC9  F007         	call	_efgtoa	;wreg free
  4626  001FA4  C036  F042         	movff	?_efgtoa,?_vfpfcnvrt
  4627  001FA8  C037  F043         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4628  001FAC  EF15  F011         	goto	l792
  4629  001FB0                     l5134:
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4633  001FB0  0EAC               	movlw	low vfpfcnvrt@ct
  4634  001FB2  6E03               	movwf	strncmp@_l^0,c
  4635  001FB4  0E00               	movlw	high vfpfcnvrt@ct
  4636  001FB6  6E04               	movwf	(strncmp@_l+1)^0,c
  4637  001FB8  0E8D               	movlw	low STR_19
  4638  001FBA  6E05               	movwf	strncmp@_r^0,c
  4639  001FBC  0E0F               	movlw	high STR_19
  4640  001FBE  6E06               	movwf	(strncmp@_r+1)^0,c
  4641  001FC0  0E00               	movlw	0
  4642  001FC2  6E08               	movwf	(strncmp@n+1)^0,c
  4643  001FC4  0E02               	movlw	2
  4644  001FC6  6E07               	movwf	strncmp@n^0,c
  4645  001FC8  EC0D  F020         	call	_strncmp	;wreg free
  4646  001FCC  5003               	movf	?_strncmp^0,w,c
  4647  001FCE  1004               	iorwf	(?_strncmp+1)^0,w,c
  4648  001FD0  A4D8               	btfss	status,2,c
  4649  001FD2  EFED  F00F         	goto	u5681
  4650  001FD6  EFEF  F00F         	goto	u5680
  4651  001FDA                     u5681:
  4652  001FDA  EF6D  F010         	goto	l5150
  4653  001FDE                     u5680:
  4654  001FDE                     
  4655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4656  001FDE  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4657  001FE2  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4658  001FE6  CFDE F048          	movff	postinc2,??_vfpfcnvrt
  4659  001FEA  CFDD F049          	movff	postdec2,??_vfpfcnvrt+1
  4660  001FEE  0E01               	movlw	1
  4661  001FF0  2648               	addwf	??_vfpfcnvrt^0,f,c
  4662  001FF2  0E00               	movlw	0
  4663  001FF4  2249               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4664  001FF6  C048  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4665  001FFA  C049  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4666  001FFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4667  001FFE  6AF8               	clrf	tblptru,c
  4668  002000                     	endif
  4669  002000                     	if	0	;tblptru may be non-zero
  4670  002000                     	endif
  4671  002000  0008               	tblrd		*
  4672  002002  CFF5 F0AF          	movff	tablat,vfpfcnvrt@c
  4673  002006  0EBF               	movlw	191
  4674  002008  6E48               	movwf	??_vfpfcnvrt^0,c
  4675  00200A  0EFF               	movlw	255
  4676  00200C  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
  4677  00200E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4678  002012  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4679  002016  CFDE FFF6          	movff	postinc2,tblptrl
  4680  00201A  CFDD FFF7          	movff	postdec2,tblptrh
  4681  00201E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4682  00201E  6AF8               	clrf	tblptru,c
  4683  002020                     	endif
  4684  002020                     	if	0	;tblptru may be non-zero
  4685  002020                     	endif
  4686  002020  0008               	tblrd		*
  4687  002022  50F5               	movf	tablat,w,c
  4688  002024  6E4A               	movwf	(??_vfpfcnvrt+2)^0,c
  4689  002026  6A4B               	clrf	(??_vfpfcnvrt+3)^0,c
  4690  002028  5048               	movf	??_vfpfcnvrt^0,w,c
  4691  00202A  264A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4692  00202C  5049               	movf	(??_vfpfcnvrt+1)^0,w,c
  4693  00202E  224B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4694  002030  504B               	movf	(??_vfpfcnvrt+3)^0,w,c
  4695  002032  E10A               	bnz	u5690
  4696  002034  0E1A               	movlw	26
  4697  002036  5C4A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4698  002038  A0D8               	btfss	status,0,c
  4699  00203A  EF21  F010         	goto	u5691
  4700  00203E  EF24  F010         	goto	u5690
  4701  002042                     u5691:
  4702  002042  0E01               	movlw	1
  4703  002044  EF25  F010         	goto	u5700
  4704  002048                     u5690:
  4705  002048  0E00               	movlw	0
  4706  00204A                     u5700:
  4707  00204A  0100               	movlb	0	; () banked
  4708  00204C  6FA6               	movwf	_vfpfcnvrt$1200& (0+255),b
  4709  00204E  6BA7               	clrf	(_vfpfcnvrt$1200+1)& (0+255),b
  4710  002050                     
  4711                           ; BSR set to: 0
  4712  002050  51A6               	movf	_vfpfcnvrt$1200& (0+255),w,b
  4713  002052  11A7               	iorwf	(_vfpfcnvrt$1200+1)& (0+255),w,b
  4714  002054  B4D8               	btfsc	status,2,c
  4715  002056  EF2F  F010         	goto	u5711
  4716  00205A  EF31  F010         	goto	u5710
  4717  00205E                     u5711:
  4718  00205E  EF4B  F010         	goto	l5144
  4719  002062                     u5710:
  4720  002062                     
  4721                           ; BSR set to: 0
  4722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4723  002062  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4724  002066  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4725  00206A  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4726  00206E  0E04               	movlw	4
  4727  002070  26DE               	addwf	postinc2,f,c
  4728  002072  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4729  002076  0E00               	movlw	0
  4730  002078  22DD               	addwfc	postdec2,f,c
  4731  00207A  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4732  00207E  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4733  002082  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  4734  002086  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  4735  00208A  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  4736  00208E  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  4737                           
  4738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  4739  002092  EF63  F010         	goto	l799
  4740  002096                     l5144:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4744  002096  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4745  00209A  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4746  00209E  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4747  0020A2  0E04               	movlw	4
  4748  0020A4  26DE               	addwf	postinc2,f,c
  4749  0020A6  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4750  0020AA  0E00               	movlw	0
  4751  0020AC  22DD               	addwfc	postdec2,f,c
  4752  0020AE  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4753  0020B2  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4754  0020B6  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f
  4755  0020BA  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+1
  4756  0020BE  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+2
  4757  0020C2  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+3
  4758  0020C6                     l799:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4762  0020C6  0E02               	movlw	2
  4763  0020C8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4764  0020CC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4765  0020D0  26DE               	addwf	postinc2,f,c
  4766  0020D2  0E00               	movlw	0
  4767  0020D4  22DD               	addwfc	postdec2,f,c
  4768  0020D6  EFC2  F00F         	goto	l5130
  4769  0020DA                     l5150:
  4770                           
  4771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  4772  0020DA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4773  0020DE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4774  0020E2  CFDE FFF6          	movff	postinc2,tblptrl
  4775  0020E6  CFDD FFF7          	movff	postdec2,tblptrh
  4776  0020EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4777  0020EA  6AF8               	clrf	tblptru,c
  4778  0020EC                     	endif
  4779  0020EC                     	if	0	;tblptru may be non-zero
  4780  0020EC                     	endif
  4781  0020EC  0008               	tblrd		*
  4782  0020EE  50F5               	movf	tablat,w,c
  4783  0020F0  0A75               	xorlw	117
  4784  0020F2  A4D8               	btfss	status,2,c
  4785  0020F4  EF7E  F010         	goto	u5721
  4786  0020F8  EF80  F010         	goto	u5720
  4787  0020FC                     u5721:
  4788  0020FC  EFC2  F010         	goto	l5158
  4789  002100                     u5720:
  4790  002100                     
  4791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  4792  002100  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4793  002104  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4794  002108  2ADE               	incf	postinc2,f,c
  4795  00210A  0E00               	movlw	0
  4796  00210C  22DD               	addwfc	postdec2,f,c
  4797                           
  4798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  4799  00210E  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4800  002112  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4801  002116  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4802  00211A  0E02               	movlw	2
  4803  00211C  26DE               	addwf	postinc2,f,c
  4804  00211E  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4805  002122  0E00               	movlw	0
  4806  002124  22DD               	addwfc	postdec2,f,c
  4807  002126  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4808  00212A  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4809  00212E  CFDE F04A          	movff	postinc2,??_vfpfcnvrt+2
  4810  002132  CFDD F04B          	movff	postdec2,??_vfpfcnvrt+3
  4811  002136  C04A  F098         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4812  00213A  C04B  F099         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4813  00213E  0100               	movlb	0	; () banked
  4814  002140  6B9A               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4815  002142  6B9B               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4816  002144  6B9C               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4817  002146  6B9D               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4818  002148  6B9E               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4819  00214A  6B9F               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4820  00214C                     
  4821                           ; BSR set to: 0
  4822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  4823  00214C  C042  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  4824  002150  C043  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4825  002154  C098  F020         	movff	vfpfcnvrt@llu,utoa@d
  4826  002158  C099  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4827  00215C  C09A  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4828  002160  C09B  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4829  002164  C09C  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4830  002168  C09D  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4831  00216C  C09E  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4832  002170  C09F  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4833  002174  ECA2  F019         	call	_utoa	;wreg free
  4834  002178  C01E  F042         	movff	?_utoa,?_vfpfcnvrt
  4835  00217C  C01F  F043         	movff	?_utoa+1,?_vfpfcnvrt+1
  4836  002180  EF15  F011         	goto	l792
  4837  002184                     l5158:
  4838                           
  4839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4840  002184  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4841  002188  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4842  00218C  CFDE FFF6          	movff	postinc2,tblptrl
  4843  002190  CFDD FFF7          	movff	postdec2,tblptrh
  4844  002194                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4845  002194  6AF8               	clrf	tblptru,c
  4846  002196                     	endif
  4847  002196                     	if	0	;tblptru may be non-zero
  4848  002196                     	endif
  4849  002196  0008               	tblrd		*
  4850  002198  50F5               	movf	tablat,w,c
  4851  00219A  0A25               	xorlw	37
  4852  00219C  A4D8               	btfss	status,2,c
  4853  00219E  EFD3  F010         	goto	u5731
  4854  0021A2  EFD5  F010         	goto	u5730
  4855  0021A6                     u5731:
  4856  0021A6  EFEC  F010         	goto	l5168
  4857  0021AA                     u5730:
  4858  0021AA                     
  4859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4860  0021AA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4861  0021AE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4862  0021B2  2ADE               	incf	postinc2,f,c
  4863  0021B4  0E00               	movlw	0
  4864  0021B6  22DD               	addwfc	postdec2,f,c
  4865  0021B8                     
  4866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4867  0021B8  0E00               	movlw	0
  4868  0021BA  6E04               	movwf	(fputc@c+1)^0,c
  4869  0021BC  0E25               	movlw	37
  4870  0021BE  6E03               	movwf	fputc@c^0,c
  4871  0021C0  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4872  0021C4  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4873  0021C8  ECE3  F020         	call	_fputc	;wreg free
  4874  0021CC                     l5164:
  4875                           
  4876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4877  0021CC  0E00               	movlw	0
  4878  0021CE  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4879  0021D0  0E01               	movlw	1
  4880  0021D2  6E42               	movwf	?_vfpfcnvrt^0,c
  4881  0021D4  EF15  F011         	goto	l792
  4882  0021D8                     l5168:
  4883                           
  4884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4885  0021D8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4886  0021DC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4887  0021E0  2ADE               	incf	postinc2,f,c
  4888  0021E2  0E00               	movlw	0
  4889  0021E4  22DD               	addwfc	postdec2,f,c
  4890  0021E6                     
  4891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4892  0021E6  0E00               	movlw	0
  4893  0021E8  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4894  0021EA  0E00               	movlw	0
  4895  0021EC  6E42               	movwf	?_vfpfcnvrt^0,c
  4896  0021EE  EF15  F011         	goto	l792
  4897  0021F2                     l5174:
  4898                           
  4899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4900  0021F2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4901  0021F6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4902  0021FA  CFDE FFF6          	movff	postinc2,tblptrl
  4903  0021FE  CFDD FFF7          	movff	postdec2,tblptrh
  4904  002202                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4905  002202  6AF8               	clrf	tblptru,c
  4906  002204                     	endif
  4907  002204                     	if	0	;tblptru may be non-zero
  4908  002204                     	endif
  4909  002204  0008               	tblrd		*
  4910  002206  50F5               	movf	tablat,w,c
  4911  002208  6E03               	movwf	fputc@c^0,c
  4912  00220A  6A04               	clrf	(fputc@c+1)^0,c
  4913  00220C  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4914  002210  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4915  002214  ECE3  F020         	call	_fputc	;wreg free
  4916  002218                     
  4917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4918  002218  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4919  00221C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4920  002220  2ADE               	incf	postinc2,f,c
  4921  002222  0E00               	movlw	0
  4922  002224  22DD               	addwfc	postdec2,f,c
  4923  002226  EFE6  F010         	goto	l5164
  4924  00222A                     l792:
  4925  00222A  0012               	return		;funcret
  4926  00222C                     __end_of_vfpfcnvrt:
  4927                           	opt callstack 0
  4928                           
  4929 ;; *************** function _utoa *****************
  4930 ;; Defined at:
  4931 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4934 ;;		 -> sprintf@f(6), 
  4935 ;;  d               8   31[COMRAM] unsigned long long 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  n               8   51[COMRAM] unsigned long long 
  4938 ;;  i               2   59[COMRAM] int 
  4939 ;;  w               2   49[COMRAM] int 
  4940 ;;  p               2   47[COMRAM] int 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  2   29[COMRAM] int 
  4943 ;; Registers used:
  4944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4950 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4951 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4953 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4954 ;;Total ram usage:       32 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:    7
  4957 ;; This function calls:
  4958 ;;		___lodiv
  4959 ;;		___lomod
  4960 ;;		_pad
  4961 ;; This function is called by:
  4962 ;;		_vfpfcnvrt
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text32
  4967  003344                     __ptext32:
  4968                           	opt callstack 0
  4969  003344                     _utoa:
  4970                           	opt callstack 18
  4971  003344                     
  4972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  4973  003344  BE55               	btfsc	(_prec+1)^0,7,c
  4974  003346  EFA7  F019         	goto	u5301
  4975  00334A  EFA9  F019         	goto	u5300
  4976  00334E                     u5301:
  4977  00334E  EFAB  F019         	goto	l4916
  4978  003352                     u5300:
  4979  003352                     
  4980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  4981  003352  0100               	movlb	0	; () banked
  4982  003354  93E5               	bcf	_flags& (0+255),1,b
  4983  003356                     l4916:
  4984                           
  4985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  4986  003356  BE55               	btfsc	(_prec+1)^0,7,c
  4987  003358  EFB8  F019         	goto	u5310
  4988  00335C  5055               	movf	(_prec+1)^0,w,c
  4989  00335E  E106               	bnz	u5311
  4990  003360  0454               	decf	_prec^0,w,c
  4991  003362  B0D8               	btfsc	status,0,c
  4992  003364  EFB6  F019         	goto	u5311
  4993  003368  EFB8  F019         	goto	u5310
  4994  00336C                     u5311:
  4995  00336C  EFBE  F019         	goto	l743
  4996  003370                     u5310:
  4997  003370  0E00               	movlw	0
  4998  003372  6E31               	movwf	(utoa@p+1)^0,c
  4999  003374  0E01               	movlw	1
  5000  003376  6E30               	movwf	utoa@p^0,c
  5001  003378  EFC2  F019         	goto	l745
  5002  00337C                     l743:
  5003  00337C  C054  F030         	movff	_prec,utoa@p
  5004  003380  C055  F031         	movff	_prec+1,utoa@p+1
  5005  003384                     l745:
  5006                           
  5007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  5008  003384  C0E3  F032         	movff	_width,utoa@w
  5009  003388  C0E4  F033         	movff	_width+1,utoa@w+1
  5010                           
  5011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  5012  00338C  C020  F034         	movff	utoa@d,utoa@n
  5013  003390  C021  F035         	movff	utoa@d+1,utoa@n+1
  5014  003394  C022  F036         	movff	utoa@d+2,utoa@n+2
  5015  003398  C023  F037         	movff	utoa@d+3,utoa@n+3
  5016  00339C  C024  F038         	movff	utoa@d+4,utoa@n+4
  5017  0033A0  C025  F039         	movff	utoa@d+5,utoa@n+5
  5018  0033A4  C026  F03A         	movff	utoa@d+6,utoa@n+6
  5019  0033A8  C027  F03B         	movff	utoa@d+7,utoa@n+7
  5020  0033AC                     
  5021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  5022  0033AC  0E00               	movlw	0
  5023  0033AE  6E3D               	movwf	(utoa@i+1)^0,c
  5024  0033B0  0E4F               	movlw	79
  5025  0033B2  6E3C               	movwf	utoa@i^0,c
  5026  0033B4                     
  5027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  5028  0033B4  0E00               	movlw	0
  5029  0033B6  0101               	movlb	1	; () banked
  5030  0033B8  6FB7               	movwf	(_dbuf+79)& (0+255),b
  5031                           
  5032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5033  0033BA  EF55  F01A         	goto	l4934
  5034  0033BE                     l4924:
  5035                           
  5036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  5037  0033BE  063C               	decf	utoa@i^0,f,c
  5038  0033C0  A0D8               	btfss	status,0,c
  5039  0033C2  063D               	decf	(utoa@i+1)^0,f,c
  5040  0033C4                     
  5041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  5042  0033C4  0E68               	movlw	low _dbuf
  5043  0033C6  243C               	addwf	utoa@i^0,w,c
  5044  0033C8  6ED9               	movwf	fsr2l,c
  5045  0033CA  0E01               	movlw	high _dbuf
  5046  0033CC  203D               	addwfc	(utoa@i+1)^0,w,c
  5047  0033CE  6EDA               	movwf	fsr2h,c
  5048  0033D0  C034  F003         	movff	utoa@n,___lomod@dividend
  5049  0033D4  C035  F004         	movff	utoa@n+1,___lomod@dividend+1
  5050  0033D8  C036  F005         	movff	utoa@n+2,___lomod@dividend+2
  5051  0033DC  C037  F006         	movff	utoa@n+3,___lomod@dividend+3
  5052  0033E0  C038  F007         	movff	utoa@n+4,___lomod@dividend+4
  5053  0033E4  C039  F008         	movff	utoa@n+5,___lomod@dividend+5
  5054  0033E8  C03A  F009         	movff	utoa@n+6,___lomod@dividend+6
  5055  0033EC  C03B  F00A         	movff	utoa@n+7,___lomod@dividend+7
  5056  0033F0  0E0A               	movlw	10
  5057  0033F2  6E0B               	movwf	___lomod@divisor^0,c
  5058  0033F4  0E00               	movlw	0
  5059  0033F6  6E0C               	movwf	(___lomod@divisor+1)^0,c
  5060  0033F8  0E00               	movlw	0
  5061  0033FA  6E0D               	movwf	(___lomod@divisor+2)^0,c
  5062  0033FC  0E00               	movlw	0
  5063  0033FE  6E0E               	movwf	(___lomod@divisor+3)^0,c
  5064  003400  0E00               	movlw	0
  5065  003402  6E0F               	movwf	(___lomod@divisor+4)^0,c
  5066  003404  0E00               	movlw	0
  5067  003406  6E10               	movwf	(___lomod@divisor+5)^0,c
  5068  003408  0E00               	movlw	0
  5069  00340A  6E11               	movwf	(___lomod@divisor+6)^0,c
  5070  00340C  0E00               	movlw	0
  5071  00340E  6E12               	movwf	(___lomod@divisor+7)^0,c
  5072  003410  EC7B  F020         	call	___lomod	;wreg free
  5073  003414  C003  F028         	movff	?___lomod,??_utoa
  5074  003418  C004  F029         	movff	?___lomod+1,??_utoa+1
  5075  00341C  C005  F02A         	movff	?___lomod+2,??_utoa+2
  5076  003420  C006  F02B         	movff	?___lomod+3,??_utoa+3
  5077  003424  C007  F02C         	movff	?___lomod+4,??_utoa+4
  5078  003428  C008  F02D         	movff	?___lomod+5,??_utoa+5
  5079  00342C  C009  F02E         	movff	?___lomod+6,??_utoa+6
  5080  003430  C00A  F02F         	movff	?___lomod+7,??_utoa+7
  5081  003434  5028               	movf	??_utoa^0,w,c
  5082  003436  0F30               	addlw	48
  5083  003438  6EDF               	movwf	indf2,c
  5084  00343A                     
  5085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  5086  00343A  0630               	decf	utoa@p^0,f,c
  5087  00343C  A0D8               	btfss	status,0,c
  5088  00343E  0631               	decf	(utoa@p+1)^0,f,c
  5089  003440                     
  5090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  5091  003440  0632               	decf	utoa@w^0,f,c
  5092  003442  A0D8               	btfss	status,0,c
  5093  003444  0633               	decf	(utoa@w+1)^0,f,c
  5094  003446                     
  5095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  5096  003446  C034  F003         	movff	utoa@n,___lodiv@dividend
  5097  00344A  C035  F004         	movff	utoa@n+1,___lodiv@dividend+1
  5098  00344E  C036  F005         	movff	utoa@n+2,___lodiv@dividend+2
  5099  003452  C037  F006         	movff	utoa@n+3,___lodiv@dividend+3
  5100  003456  C038  F007         	movff	utoa@n+4,___lodiv@dividend+4
  5101  00345A  C039  F008         	movff	utoa@n+5,___lodiv@dividend+5
  5102  00345E  C03A  F009         	movff	utoa@n+6,___lodiv@dividend+6
  5103  003462  C03B  F00A         	movff	utoa@n+7,___lodiv@dividend+7
  5104  003466  0E0A               	movlw	10
  5105  003468  6E0B               	movwf	___lodiv@divisor^0,c
  5106  00346A  0E00               	movlw	0
  5107  00346C  6E0C               	movwf	(___lodiv@divisor+1)^0,c
  5108  00346E  0E00               	movlw	0
  5109  003470  6E0D               	movwf	(___lodiv@divisor+2)^0,c
  5110  003472  0E00               	movlw	0
  5111  003474  6E0E               	movwf	(___lodiv@divisor+3)^0,c
  5112  003476  0E00               	movlw	0
  5113  003478  6E0F               	movwf	(___lodiv@divisor+4)^0,c
  5114  00347A  0E00               	movlw	0
  5115  00347C  6E10               	movwf	(___lodiv@divisor+5)^0,c
  5116  00347E  0E00               	movlw	0
  5117  003480  6E11               	movwf	(___lodiv@divisor+6)^0,c
  5118  003482  0E00               	movlw	0
  5119  003484  6E12               	movwf	(___lodiv@divisor+7)^0,c
  5120  003486  EC95  F01F         	call	___lodiv	;wreg free
  5121  00348A  C003  F034         	movff	?___lodiv,utoa@n
  5122  00348E  C004  F035         	movff	?___lodiv+1,utoa@n+1
  5123  003492  C005  F036         	movff	?___lodiv+2,utoa@n+2
  5124  003496  C006  F037         	movff	?___lodiv+3,utoa@n+3
  5125  00349A  C007  F038         	movff	?___lodiv+4,utoa@n+4
  5126  00349E  C008  F039         	movff	?___lodiv+5,utoa@n+5
  5127  0034A2  C009  F03A         	movff	?___lodiv+6,utoa@n+6
  5128  0034A6  C00A  F03B         	movff	?___lodiv+7,utoa@n+7
  5129  0034AA                     l4934:
  5130                           
  5131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5132  0034AA  503C               	movf	utoa@i^0,w,c
  5133  0034AC  103D               	iorwf	(utoa@i+1)^0,w,c
  5134  0034AE  B4D8               	btfsc	status,2,c
  5135  0034B0  EF5C  F01A         	goto	u5321
  5136  0034B4  EF5E  F01A         	goto	u5320
  5137  0034B8                     u5321:
  5138  0034B8  EF8F  F01A         	goto	l4944
  5139  0034BC                     u5320:
  5140  0034BC  5034               	movf	utoa@n^0,w,c
  5141  0034BE  1035               	iorwf	(utoa@n+1)^0,w,c
  5142  0034C0  1036               	iorwf	(utoa@n+2)^0,w,c
  5143  0034C2  1037               	iorwf	(utoa@n+3)^0,w,c
  5144  0034C4  1038               	iorwf	(utoa@n+4)^0,w,c
  5145  0034C6  1039               	iorwf	(utoa@n+5)^0,w,c
  5146  0034C8  103A               	iorwf	(utoa@n+6)^0,w,c
  5147  0034CA  103B               	iorwf	(utoa@n+7)^0,w,c
  5148  0034CC  A4D8               	btfss	status,2,c
  5149  0034CE  EF6B  F01A         	goto	u5331
  5150  0034D2  EF6D  F01A         	goto	u5330
  5151  0034D6                     u5331:
  5152  0034D6  EFDF  F019         	goto	l4924
  5153  0034DA                     u5330:
  5154  0034DA  BE31               	btfsc	(utoa@p+1)^0,7,c
  5155  0034DC  EF7A  F01A         	goto	u5340
  5156  0034E0  5031               	movf	(utoa@p+1)^0,w,c
  5157  0034E2  E106               	bnz	u5341
  5158  0034E4  0430               	decf	utoa@p^0,w,c
  5159  0034E6  B0D8               	btfsc	status,0,c
  5160  0034E8  EF78  F01A         	goto	u5341
  5161  0034EC  EF7A  F01A         	goto	u5340
  5162  0034F0                     u5341:
  5163  0034F0  EFDF  F019         	goto	l4924
  5164  0034F4                     u5340:
  5165  0034F4  BE33               	btfsc	(utoa@w+1)^0,7,c
  5166  0034F6  EF85  F01A         	goto	u5351
  5167  0034FA  5033               	movf	(utoa@w+1)^0,w,c
  5168  0034FC  E108               	bnz	u5350
  5169  0034FE  0432               	decf	utoa@w^0,w,c
  5170  003500  A0D8               	btfss	status,0,c
  5171  003502  EF85  F01A         	goto	u5351
  5172  003506  EF87  F01A         	goto	u5350
  5173  00350A                     u5351:
  5174  00350A  EF8F  F01A         	goto	l4944
  5175  00350E                     u5350:
  5176  00350E  0100               	movlb	0	; () banked
  5177  003510  B3E5               	btfsc	_flags& (0+255),1,b
  5178  003512  EF8D  F01A         	goto	u5361
  5179  003516  EF8F  F01A         	goto	u5360
  5180  00351A                     u5361:
  5181  00351A  EFDF  F019         	goto	l4924
  5182  00351E                     u5360:
  5183  00351E                     l4944:
  5184                           
  5185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  5186  00351E  C01E  F013         	movff	utoa@fp,pad@fp
  5187  003522  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  5188  003526  0E68               	movlw	low _dbuf
  5189  003528  243C               	addwf	utoa@i^0,w,c
  5190  00352A  6E15               	movwf	pad@buf^0,c
  5191  00352C  0E01               	movlw	high _dbuf
  5192  00352E  203D               	addwfc	(utoa@i+1)^0,w,c
  5193  003530  6E16               	movwf	(pad@buf+1)^0,c
  5194  003532  C032  F017         	movff	utoa@w,pad@p
  5195  003536  C033  F018         	movff	utoa@w+1,pad@p+1
  5196  00353A  EC48  F021         	call	_pad	;wreg free
  5197  00353E  C013  F01E         	movff	?_pad,?_utoa
  5198  003542  C014  F01F         	movff	?_pad+1,?_utoa+1
  5199  003546  0012               	return		;funcret
  5200  003548                     __end_of_utoa:
  5201                           	opt callstack 0
  5202                           
  5203 ;; *************** function ___lomod *****************
  5204 ;; Defined at:
  5205 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;  dividend        8    2[COMRAM] unsigned long long 
  5208 ;;  divisor         8   10[COMRAM] unsigned long long 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  counter         1   18[COMRAM] unsigned char 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  8    2[COMRAM] unsigned long long 
  5213 ;; Registers used:
  5214 ;;		wreg, status,2, status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5220 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5223 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5224 ;;Total ram usage:       17 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    3
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_utoa
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text33
  5235  0040F6                     __ptext33:
  5236                           	opt callstack 0
  5237  0040F6                     ___lomod:
  5238                           	opt callstack 21
  5239  0040F6  500B               	movf	___lomod@divisor^0,w,c
  5240  0040F8  100C               	iorwf	(___lomod@divisor+1)^0,w,c
  5241  0040FA  100D               	iorwf	(___lomod@divisor+2)^0,w,c
  5242  0040FC  100E               	iorwf	(___lomod@divisor+3)^0,w,c
  5243  0040FE  100F               	iorwf	(___lomod@divisor+4)^0,w,c
  5244  004100  1010               	iorwf	(___lomod@divisor+5)^0,w,c
  5245  004102  1011               	iorwf	(___lomod@divisor+6)^0,w,c
  5246  004104  1012               	iorwf	(___lomod@divisor+7)^0,w,c
  5247  004106  B4D8               	btfsc	status,2,c
  5248  004108  EF88  F020         	goto	u4731
  5249  00410C  EF8A  F020         	goto	u4730
  5250  004110                     u4731:
  5251  004110  EFD2  F020         	goto	l1258
  5252  004114                     u4730:
  5253  004114  0E01               	movlw	1
  5254  004116  6E13               	movwf	___lomod@counter^0,c
  5255  004118  EF98  F020         	goto	l4564
  5256  00411C                     l4562:
  5257  00411C  90D8               	bcf	status,0,c
  5258  00411E  360B               	rlcf	___lomod@divisor^0,f,c
  5259  004120  360C               	rlcf	(___lomod@divisor+1)^0,f,c
  5260  004122  360D               	rlcf	(___lomod@divisor+2)^0,f,c
  5261  004124  360E               	rlcf	(___lomod@divisor+3)^0,f,c
  5262  004126  360F               	rlcf	(___lomod@divisor+4)^0,f,c
  5263  004128  3610               	rlcf	(___lomod@divisor+5)^0,f,c
  5264  00412A  3611               	rlcf	(___lomod@divisor+6)^0,f,c
  5265  00412C  3612               	rlcf	(___lomod@divisor+7)^0,f,c
  5266  00412E  2A13               	incf	___lomod@counter^0,f,c
  5267  004130                     l4564:
  5268  004130  AE12               	btfss	(___lomod@divisor+7)^0,7,c
  5269  004132  EF9D  F020         	goto	u4741
  5270  004136  EF9F  F020         	goto	u4740
  5271  00413A                     u4741:
  5272  00413A  EF8E  F020         	goto	l4562
  5273  00413E                     u4740:
  5274  00413E                     l4566:
  5275  00413E  500B               	movf	___lomod@divisor^0,w,c
  5276  004140  5C03               	subwf	___lomod@dividend^0,w,c
  5277  004142  500C               	movf	(___lomod@divisor+1)^0,w,c
  5278  004144  5804               	subwfb	(___lomod@dividend+1)^0,w,c
  5279  004146  500D               	movf	(___lomod@divisor+2)^0,w,c
  5280  004148  5805               	subwfb	(___lomod@dividend+2)^0,w,c
  5281  00414A  500E               	movf	(___lomod@divisor+3)^0,w,c
  5282  00414C  5806               	subwfb	(___lomod@dividend+3)^0,w,c
  5283  00414E  500F               	movf	(___lomod@divisor+4)^0,w,c
  5284  004150  5807               	subwfb	(___lomod@dividend+4)^0,w,c
  5285  004152  5010               	movf	(___lomod@divisor+5)^0,w,c
  5286  004154  5808               	subwfb	(___lomod@dividend+5)^0,w,c
  5287  004156  5011               	movf	(___lomod@divisor+6)^0,w,c
  5288  004158  5809               	subwfb	(___lomod@dividend+6)^0,w,c
  5289  00415A  5012               	movf	(___lomod@divisor+7)^0,w,c
  5290  00415C  580A               	subwfb	(___lomod@dividend+7)^0,w,c
  5291  00415E  A0D8               	btfss	status,0,c
  5292  004160  EFB4  F020         	goto	u4751
  5293  004164  EFB6  F020         	goto	u4750
  5294  004168                     u4751:
  5295  004168  EFC6  F020         	goto	l4570
  5296  00416C                     u4750:
  5297  00416C  500B               	movf	___lomod@divisor^0,w,c
  5298  00416E  5E03               	subwf	___lomod@dividend^0,f,c
  5299  004170  500C               	movf	(___lomod@divisor+1)^0,w,c
  5300  004172  5A04               	subwfb	(___lomod@dividend+1)^0,f,c
  5301  004174  500D               	movf	(___lomod@divisor+2)^0,w,c
  5302  004176  5A05               	subwfb	(___lomod@dividend+2)^0,f,c
  5303  004178  500E               	movf	(___lomod@divisor+3)^0,w,c
  5304  00417A  5A06               	subwfb	(___lomod@dividend+3)^0,f,c
  5305  00417C  500F               	movf	(___lomod@divisor+4)^0,w,c
  5306  00417E  5A07               	subwfb	(___lomod@dividend+4)^0,f,c
  5307  004180  5010               	movf	(___lomod@divisor+5)^0,w,c
  5308  004182  5A08               	subwfb	(___lomod@dividend+5)^0,f,c
  5309  004184  5011               	movf	(___lomod@divisor+6)^0,w,c
  5310  004186  5A09               	subwfb	(___lomod@dividend+6)^0,f,c
  5311  004188  5012               	movf	(___lomod@divisor+7)^0,w,c
  5312  00418A  5A0A               	subwfb	(___lomod@dividend+7)^0,f,c
  5313  00418C                     l4570:
  5314  00418C  90D8               	bcf	status,0,c
  5315  00418E  3212               	rrcf	(___lomod@divisor+7)^0,f,c
  5316  004190  3211               	rrcf	(___lomod@divisor+6)^0,f,c
  5317  004192  3210               	rrcf	(___lomod@divisor+5)^0,f,c
  5318  004194  320F               	rrcf	(___lomod@divisor+4)^0,f,c
  5319  004196  320E               	rrcf	(___lomod@divisor+3)^0,f,c
  5320  004198  320D               	rrcf	(___lomod@divisor+2)^0,f,c
  5321  00419A  320C               	rrcf	(___lomod@divisor+1)^0,f,c
  5322  00419C  320B               	rrcf	___lomod@divisor^0,f,c
  5323  00419E  2E13               	decfsz	___lomod@counter^0,f,c
  5324  0041A0  EF9F  F020         	goto	l4566
  5325  0041A4                     l1258:
  5326  0041A4  C003  F003         	movff	___lomod@dividend,?___lomod
  5327  0041A8  C004  F004         	movff	___lomod@dividend+1,?___lomod+1
  5328  0041AC  C005  F005         	movff	___lomod@dividend+2,?___lomod+2
  5329  0041B0  C006  F006         	movff	___lomod@dividend+3,?___lomod+3
  5330  0041B4  C007  F007         	movff	___lomod@dividend+4,?___lomod+4
  5331  0041B8  C008  F008         	movff	___lomod@dividend+5,?___lomod+5
  5332  0041BC  C009  F009         	movff	___lomod@dividend+6,?___lomod+6
  5333  0041C0  C00A  F00A         	movff	___lomod@dividend+7,?___lomod+7
  5334  0041C4  0012               	return		;funcret
  5335  0041C6                     __end_of___lomod:
  5336                           	opt callstack 0
  5337                           
  5338 ;; *************** function ___lodiv *****************
  5339 ;; Defined at:
  5340 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  dividend        8    2[COMRAM] unsigned long long 
  5343 ;;  divisor         8   10[COMRAM] unsigned long long 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  quotient        8   18[COMRAM] unsigned long long 
  5346 ;;  counter         1   26[COMRAM] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  8    2[COMRAM] unsigned long long 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5356 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5359 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5360 ;;Total ram usage:       25 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    3
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_utoa
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text34
  5371  003F2A                     __ptext34:
  5372                           	opt callstack 0
  5373  003F2A                     ___lodiv:
  5374                           	opt callstack 21
  5375  003F2A  EE20  F013         	lfsr	2,___lodiv@quotient
  5376  003F2E  0E07               	movlw	7
  5377  003F30                     u4691:
  5378  003F30  6ADE               	clrf	postinc2,c
  5379  003F32  06E8               	decf	wreg,f,c
  5380  003F34  E2FD               	bc	u4691
  5381  003F36  500B               	movf	___lodiv@divisor^0,w,c
  5382  003F38  100C               	iorwf	(___lodiv@divisor+1)^0,w,c
  5383  003F3A  100D               	iorwf	(___lodiv@divisor+2)^0,w,c
  5384  003F3C  100E               	iorwf	(___lodiv@divisor+3)^0,w,c
  5385  003F3E  100F               	iorwf	(___lodiv@divisor+4)^0,w,c
  5386  003F40  1010               	iorwf	(___lodiv@divisor+5)^0,w,c
  5387  003F42  1011               	iorwf	(___lodiv@divisor+6)^0,w,c
  5388  003F44  1012               	iorwf	(___lodiv@divisor+7)^0,w,c
  5389  003F46  B4D8               	btfsc	status,2,c
  5390  003F48  EFA8  F01F         	goto	u4701
  5391  003F4C  EFAA  F01F         	goto	u4700
  5392  003F50                     u4701:
  5393  003F50  EFFC  F01F         	goto	l1248
  5394  003F54                     u4700:
  5395  003F54  0E01               	movlw	1
  5396  003F56  6E1B               	movwf	___lodiv@counter^0,c
  5397  003F58  EFB8  F01F         	goto	l4544
  5398  003F5C                     l4542:
  5399  003F5C  90D8               	bcf	status,0,c
  5400  003F5E  360B               	rlcf	___lodiv@divisor^0,f,c
  5401  003F60  360C               	rlcf	(___lodiv@divisor+1)^0,f,c
  5402  003F62  360D               	rlcf	(___lodiv@divisor+2)^0,f,c
  5403  003F64  360E               	rlcf	(___lodiv@divisor+3)^0,f,c
  5404  003F66  360F               	rlcf	(___lodiv@divisor+4)^0,f,c
  5405  003F68  3610               	rlcf	(___lodiv@divisor+5)^0,f,c
  5406  003F6A  3611               	rlcf	(___lodiv@divisor+6)^0,f,c
  5407  003F6C  3612               	rlcf	(___lodiv@divisor+7)^0,f,c
  5408  003F6E  2A1B               	incf	___lodiv@counter^0,f,c
  5409  003F70                     l4544:
  5410  003F70  AE12               	btfss	(___lodiv@divisor+7)^0,7,c
  5411  003F72  EFBD  F01F         	goto	u4711
  5412  003F76  EFBF  F01F         	goto	u4710
  5413  003F7A                     u4711:
  5414  003F7A  EFAE  F01F         	goto	l4542
  5415  003F7E                     u4710:
  5416  003F7E                     l4546:
  5417  003F7E  90D8               	bcf	status,0,c
  5418  003F80  3613               	rlcf	___lodiv@quotient^0,f,c
  5419  003F82  3614               	rlcf	(___lodiv@quotient+1)^0,f,c
  5420  003F84  3615               	rlcf	(___lodiv@quotient+2)^0,f,c
  5421  003F86  3616               	rlcf	(___lodiv@quotient+3)^0,f,c
  5422  003F88  3617               	rlcf	(___lodiv@quotient+4)^0,f,c
  5423  003F8A  3618               	rlcf	(___lodiv@quotient+5)^0,f,c
  5424  003F8C  3619               	rlcf	(___lodiv@quotient+6)^0,f,c
  5425  003F8E  361A               	rlcf	(___lodiv@quotient+7)^0,f,c
  5426  003F90  500B               	movf	___lodiv@divisor^0,w,c
  5427  003F92  5C03               	subwf	___lodiv@dividend^0,w,c
  5428  003F94  500C               	movf	(___lodiv@divisor+1)^0,w,c
  5429  003F96  5804               	subwfb	(___lodiv@dividend+1)^0,w,c
  5430  003F98  500D               	movf	(___lodiv@divisor+2)^0,w,c
  5431  003F9A  5805               	subwfb	(___lodiv@dividend+2)^0,w,c
  5432  003F9C  500E               	movf	(___lodiv@divisor+3)^0,w,c
  5433  003F9E  5806               	subwfb	(___lodiv@dividend+3)^0,w,c
  5434  003FA0  500F               	movf	(___lodiv@divisor+4)^0,w,c
  5435  003FA2  5807               	subwfb	(___lodiv@dividend+4)^0,w,c
  5436  003FA4  5010               	movf	(___lodiv@divisor+5)^0,w,c
  5437  003FA6  5808               	subwfb	(___lodiv@dividend+5)^0,w,c
  5438  003FA8  5011               	movf	(___lodiv@divisor+6)^0,w,c
  5439  003FAA  5809               	subwfb	(___lodiv@dividend+6)^0,w,c
  5440  003FAC  5012               	movf	(___lodiv@divisor+7)^0,w,c
  5441  003FAE  580A               	subwfb	(___lodiv@dividend+7)^0,w,c
  5442  003FB0  A0D8               	btfss	status,0,c
  5443  003FB2  EFDD  F01F         	goto	u4721
  5444  003FB6  EFDF  F01F         	goto	u4720
  5445  003FBA                     u4721:
  5446  003FBA  EFF0  F01F         	goto	l4554
  5447  003FBE                     u4720:
  5448  003FBE  500B               	movf	___lodiv@divisor^0,w,c
  5449  003FC0  5E03               	subwf	___lodiv@dividend^0,f,c
  5450  003FC2  500C               	movf	(___lodiv@divisor+1)^0,w,c
  5451  003FC4  5A04               	subwfb	(___lodiv@dividend+1)^0,f,c
  5452  003FC6  500D               	movf	(___lodiv@divisor+2)^0,w,c
  5453  003FC8  5A05               	subwfb	(___lodiv@dividend+2)^0,f,c
  5454  003FCA  500E               	movf	(___lodiv@divisor+3)^0,w,c
  5455  003FCC  5A06               	subwfb	(___lodiv@dividend+3)^0,f,c
  5456  003FCE  500F               	movf	(___lodiv@divisor+4)^0,w,c
  5457  003FD0  5A07               	subwfb	(___lodiv@dividend+4)^0,f,c
  5458  003FD2  5010               	movf	(___lodiv@divisor+5)^0,w,c
  5459  003FD4  5A08               	subwfb	(___lodiv@dividend+5)^0,f,c
  5460  003FD6  5011               	movf	(___lodiv@divisor+6)^0,w,c
  5461  003FD8  5A09               	subwfb	(___lodiv@dividend+6)^0,f,c
  5462  003FDA  5012               	movf	(___lodiv@divisor+7)^0,w,c
  5463  003FDC  5A0A               	subwfb	(___lodiv@dividend+7)^0,f,c
  5464  003FDE  8013               	bsf	___lodiv@quotient^0,0,c
  5465  003FE0                     l4554:
  5466  003FE0  90D8               	bcf	status,0,c
  5467  003FE2  3212               	rrcf	(___lodiv@divisor+7)^0,f,c
  5468  003FE4  3211               	rrcf	(___lodiv@divisor+6)^0,f,c
  5469  003FE6  3210               	rrcf	(___lodiv@divisor+5)^0,f,c
  5470  003FE8  320F               	rrcf	(___lodiv@divisor+4)^0,f,c
  5471  003FEA  320E               	rrcf	(___lodiv@divisor+3)^0,f,c
  5472  003FEC  320D               	rrcf	(___lodiv@divisor+2)^0,f,c
  5473  003FEE  320C               	rrcf	(___lodiv@divisor+1)^0,f,c
  5474  003FF0  320B               	rrcf	___lodiv@divisor^0,f,c
  5475  003FF2  2E1B               	decfsz	___lodiv@counter^0,f,c
  5476  003FF4  EFBF  F01F         	goto	l4546
  5477  003FF8                     l1248:
  5478  003FF8  C013  F003         	movff	___lodiv@quotient,?___lodiv
  5479  003FFC  C014  F004         	movff	___lodiv@quotient+1,?___lodiv+1
  5480  004000  C015  F005         	movff	___lodiv@quotient+2,?___lodiv+2
  5481  004004  C016  F006         	movff	___lodiv@quotient+3,?___lodiv+3
  5482  004008  C017  F007         	movff	___lodiv@quotient+4,?___lodiv+4
  5483  00400C  C018  F008         	movff	___lodiv@quotient+5,?___lodiv+5
  5484  004010  C019  F009         	movff	___lodiv@quotient+6,?___lodiv+6
  5485  004014  C01A  F00A         	movff	___lodiv@quotient+7,?___lodiv+7
  5486  004018  0012               	return		;funcret
  5487  00401A                     __end_of___lodiv:
  5488                           	opt callstack 0
  5489                           
  5490 ;; *************** function _strncmp *****************
  5491 ;; Defined at:
  5492 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  _l              2    2[COMRAM] PTR const unsigned char 
  5495 ;;		 -> vfpfcnvrt@ct(3), 
  5496 ;;  _r              2    4[COMRAM] PTR const unsigned char 
  5497 ;;		 -> STR_21(3), 
  5498 ;;  n               2    6[COMRAM] unsigned int 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  r               2   11[COMRAM] PTR const unsigned char 
  5501 ;;		 -> STR_21(3), 
  5502 ;;  l               2    9[COMRAM] PTR const unsigned char 
  5503 ;;		 -> vfpfcnvrt@ct(3), 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  2    2[COMRAM] int 
  5506 ;; Registers used:
  5507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5513 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5514 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5516 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5517 ;;Total ram usage:       11 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:    3
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_vfpfcnvrt
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           	psect	text35
  5528  00401A                     __ptext35:
  5529                           	opt callstack 0
  5530  00401A                     _strncmp:
  5531                           	opt callstack 22
  5532  00401A  C003  F00A         	movff	strncmp@_l,strncmp@l
  5533  00401E  C004  F00B         	movff	strncmp@_l+1,strncmp@l+1
  5534  004022  C005  F00C         	movff	strncmp@_r,strncmp@r
  5535  004026  C006  F00D         	movff	strncmp@_r+1,strncmp@r+1
  5536  00402A  0607               	decf	strncmp@n^0,f,c
  5537  00402C  A0D8               	btfss	status,0,c
  5538  00402E  0608               	decf	(strncmp@n+1)^0,f,c
  5539  004030  2807               	incf	strncmp@n^0,w,c
  5540  004032  E106               	bnz	u5441
  5541  004034  2808               	incf	(strncmp@n+1)^0,w,c
  5542  004036  A4D8               	btfss	status,2,c
  5543  004038  EF20  F020         	goto	u5441
  5544  00403C  EF22  F020         	goto	u5440
  5545  004040                     u5441:
  5546  004040  EF2F  F020         	goto	l4998
  5547  004044                     u5440:
  5548  004044  0E00               	movlw	0
  5549  004046  6E04               	movwf	(?_strncmp+1)^0,c
  5550  004048  0E00               	movlw	0
  5551  00404A  6E03               	movwf	?_strncmp^0,c
  5552  00404C  EF7A  F020         	goto	l1602
  5553  004050                     l4996:
  5554  004050  4A0A               	infsnz	strncmp@l^0,f,c
  5555  004052  2A0B               	incf	(strncmp@l+1)^0,f,c
  5556  004054  4A0C               	infsnz	strncmp@r^0,f,c
  5557  004056  2A0D               	incf	(strncmp@r+1)^0,f,c
  5558  004058  0607               	decf	strncmp@n^0,f,c
  5559  00405A  A0D8               	btfss	status,0,c
  5560  00405C  0608               	decf	(strncmp@n+1)^0,f,c
  5561  00405E                     l4998:
  5562  00405E  C00A  FFD9         	movff	strncmp@l,fsr2l
  5563  004062  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  5564  004066  50DF               	movf	indf2,w,c
  5565  004068  B4D8               	btfsc	status,2,c
  5566  00406A  EF39  F020         	goto	u5451
  5567  00406E  EF3B  F020         	goto	u5450
  5568  004072                     u5451:
  5569  004072  EF68  F020         	goto	l5006
  5570  004076                     u5450:
  5571  004076  C00C  FFF6         	movff	strncmp@r,tblptrl
  5572  00407A  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  5573  00407E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5574  00407E  6AF8               	clrf	tblptru,c
  5575  004080                     	endif
  5576  004080                     	if	0	;tblptru may be non-zero
  5577  004080                     	endif
  5578  004080  0008               	tblrd		*
  5579  004082  50F5               	movf	tablat,w,c
  5580  004084  0900               	iorlw	0
  5581  004086  B4D8               	btfsc	status,2,c
  5582  004088  EF48  F020         	goto	u5461
  5583  00408C  EF4A  F020         	goto	u5460
  5584  004090                     u5461:
  5585  004090  EF68  F020         	goto	l5006
  5586  004094                     u5460:
  5587  004094  5007               	movf	strncmp@n^0,w,c
  5588  004096  1008               	iorwf	(strncmp@n+1)^0,w,c
  5589  004098  B4D8               	btfsc	status,2,c
  5590  00409A  EF51  F020         	goto	u5471
  5591  00409E  EF53  F020         	goto	u5470
  5592  0040A2                     u5471:
  5593  0040A2  EF68  F020         	goto	l5006
  5594  0040A6                     u5470:
  5595  0040A6  C00A  FFD9         	movff	strncmp@l,fsr2l
  5596  0040AA  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  5597  0040AE  50DF               	movf	indf2,w,c
  5598  0040B0  6E09               	movwf	??_strncmp^0,c
  5599  0040B2  C00C  FFF6         	movff	strncmp@r,tblptrl
  5600  0040B6  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  5601  0040BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5602  0040BA  6AF8               	clrf	tblptru,c
  5603  0040BC                     	endif
  5604  0040BC                     	if	0	;tblptru may be non-zero
  5605  0040BC                     	endif
  5606  0040BC  0008               	tblrd		*
  5607  0040BE  50F5               	movf	tablat,w,c
  5608  0040C0  1809               	xorwf	??_strncmp^0,w,c
  5609  0040C2  B4D8               	btfsc	status,2,c
  5610  0040C4  EF66  F020         	goto	u5481
  5611  0040C8  EF68  F020         	goto	u5480
  5612  0040CC                     u5481:
  5613  0040CC  EF28  F020         	goto	l4996
  5614  0040D0                     u5480:
  5615  0040D0                     l5006:
  5616  0040D0  C00A  FFD9         	movff	strncmp@l,fsr2l
  5617  0040D4  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  5618  0040D8  50DF               	movf	indf2,w,c
  5619  0040DA  6E09               	movwf	??_strncmp^0,c
  5620  0040DC  C00C  FFF6         	movff	strncmp@r,tblptrl
  5621  0040E0  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  5622  0040E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5623  0040E4  6AF8               	clrf	tblptru,c
  5624  0040E6                     	endif
  5625  0040E6                     	if	0	;tblptru may be non-zero
  5626  0040E6                     	endif
  5627  0040E6  0008               	tblrd		*
  5628  0040E8  50F5               	movf	tablat,w,c
  5629  0040EA  5C09               	subwf	??_strncmp^0,w,c
  5630  0040EC  6E03               	movwf	?_strncmp^0,c
  5631  0040EE  6A04               	clrf	(?_strncmp+1)^0,c
  5632  0040F0  A0D8               	btfss	status,0,c
  5633  0040F2  0604               	decf	(?_strncmp+1)^0,f,c
  5634  0040F4                     l1602:
  5635  0040F4  0012               	return		;funcret
  5636  0040F6                     __end_of_strncmp:
  5637                           	opt callstack 0
  5638                           
  5639 ;; *************** function _efgtoa *****************
  5640 ;; Defined at:
  5641 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  fp              2   53[COMRAM] PTR struct _IO_FILE
  5644 ;;		 -> sprintf@f(6), 
  5645 ;;  f               4   55[COMRAM] PTR struct _IO_FILE
  5646 ;;  c               1   59[COMRAM] unsigned char 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  u               4   52[BANK0 ] unsigned char 
  5649 ;;  g               4   44[BANK0 ] unsigned char 
  5650 ;;  l               4   38[BANK0 ] unsigned char 
  5651 ;;  h               4   34[BANK0 ] unsigned char 
  5652 ;;  ou              4    0[BANK0 ] unsigned char 
  5653 ;;  n               2   50[BANK0 ] int 
  5654 ;;  e               2   48[BANK0 ] int 
  5655 ;;  i               2   42[BANK0 ] int 
  5656 ;;  w               2   31[BANK0 ] int 
  5657 ;;  p               2   28[BANK0 ] int 
  5658 ;;  sign            2   26[BANK0 ] int 
  5659 ;;  d               2   24[BANK0 ] int 
  5660 ;;  ne              2   22[BANK0 ] int 
  5661 ;;  m               2   20[BANK0 ] int 
  5662 ;;  pp              2   18[BANK0 ] int 
  5663 ;;  t               2   16[BANK0 ] int 
  5664 ;;  mode            1   33[BANK0 ] unsigned char 
  5665 ;;  nmode           1   30[BANK0 ] unsigned char 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  2   53[COMRAM] int 
  5668 ;; Registers used:
  5669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5675 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5676 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;Total ram usage:       68 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; Hardware stack levels required when called:    7
  5682 ;; This function calls:
  5683 ;;		___awdiv
  5684 ;;		___awmod
  5685 ;;		___fladd
  5686 ;;		___fldiv
  5687 ;;		___fleq
  5688 ;;		___flge
  5689 ;;		___flmul
  5690 ;;		___flneg
  5691 ;;		___flsub
  5692 ;;		___fltol
  5693 ;;		___fpclassifyf
  5694 ;;		_floorf
  5695 ;;		_isupper
  5696 ;;		_pad
  5697 ;;		_strcpy
  5698 ;;		_tolower
  5699 ;; This function is called by:
  5700 ;;		_vfpfcnvrt
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text36
  5705  000F92                     __ptext36:
  5706                           	opt callstack 0
  5707  000F92                     _efgtoa:
  5708                           	opt callstack 18
  5709  000F92                     
  5710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  5711  000F92  0E00               	movlw	0
  5712  000F94  0100               	movlb	0	; () banked
  5713  000F96  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5714  000F98  0E00               	movlw	0
  5715  000F9A  6F7A               	movwf	efgtoa@sign& (0+255),b
  5716  000F9C                     
  5717                           ; BSR set to: 0
  5718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  5719  000F9C  C038  F08C         	movff	efgtoa@f,efgtoa@g
  5720  000FA0  C039  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  5721  000FA4  C03A  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  5722  000FA8  C03B  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  5723  000FAC                     
  5724                           ; BSR set to: 0
  5725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  5726  000FAC  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  5727  000FAE  EFDD  F007         	goto	u4780
  5728  000FB2  EFDB  F007         	goto	u4781
  5729  000FB6                     u4781:
  5730  000FB6  EFF3  F007         	goto	l4624
  5731  000FBA                     u4780:
  5732  000FBA                     
  5733                           ; BSR set to: 0
  5734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  5735  000FBA  0E00               	movlw	0
  5736  000FBC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5737  000FBE  0E01               	movlw	1
  5738  000FC0  6F7A               	movwf	efgtoa@sign& (0+255),b
  5739  000FC2                     
  5740                           ; BSR set to: 0
  5741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  5742  000FC2  C08C  F003         	movff	efgtoa@g,___flneg@f1
  5743  000FC6  C08D  F004         	movff	efgtoa@g+1,___flneg@f1+1
  5744  000FCA  C08E  F005         	movff	efgtoa@g+2,___flneg@f1+2
  5745  000FCE  C08F  F006         	movff	efgtoa@g+3,___flneg@f1+3
  5746  000FD2  ECE1  F026         	call	___flneg	;wreg free
  5747  000FD6  C003  F08C         	movff	?___flneg,efgtoa@g
  5748  000FDA  C004  F08D         	movff	?___flneg+1,efgtoa@g+1
  5749  000FDE  C005  F08E         	movff	?___flneg+2,efgtoa@g+2
  5750  000FE2  C006  F08F         	movff	?___flneg+3,efgtoa@g+3
  5751  000FE6                     l4624:
  5752                           
  5753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  5754  000FE6  0E00               	movlw	0
  5755  000FE8  0100               	movlb	0	; () banked
  5756  000FEA  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  5757  000FEC  0E00               	movlw	0
  5758  000FEE  6F92               	movwf	efgtoa@n& (0+255),b
  5759  000FF0                     
  5760                           ; BSR set to: 0
  5761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  5762  000FF0  C0E3  F07F         	movff	_width,efgtoa@w
  5763  000FF4  C0E4  F080         	movff	_width+1,efgtoa@w+1
  5764  000FF8                     
  5765                           ; BSR set to: 0
  5766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  5767  000FF8  517A               	movf	efgtoa@sign& (0+255),w,b
  5768  000FFA  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5769  000FFC  A4D8               	btfss	status,2,c
  5770  000FFE  EF03  F008         	goto	u4791
  5771  001002  EF05  F008         	goto	u4790
  5772  001006                     u4791:
  5773  001006  EF0C  F008         	goto	l4632
  5774  00100A                     u4790:
  5775  00100A                     
  5776                           ; BSR set to: 0
  5777  00100A  A5E5               	btfss	_flags& (0+255),2,b
  5778  00100C  EF0A  F008         	goto	u4801
  5779  001010  EF0C  F008         	goto	u4800
  5780  001014                     u4801:
  5781  001014  EF26  F008         	goto	l4644
  5782  001018                     u4800:
  5783  001018                     l4632:
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  5787  001018  517A               	movf	efgtoa@sign& (0+255),w,b
  5788  00101A  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5789  00101C  A4D8               	btfss	status,2,c
  5790  00101E  EF13  F008         	goto	u4811
  5791  001022  EF15  F008         	goto	u4810
  5792  001026                     u4811:
  5793  001026  EF1B  F008         	goto	l4636
  5794  00102A                     u4810:
  5795  00102A                     
  5796                           ; BSR set to: 0
  5797  00102A  0E00               	movlw	0
  5798  00102C  6F65               	movwf	(_efgtoa$1162+1)& (0+255),b
  5799  00102E  0E2B               	movlw	43
  5800  001030  6F64               	movwf	_efgtoa$1162& (0+255),b
  5801  001032  EF1F  F008         	goto	l4638
  5802  001036                     l4636:
  5803                           
  5804                           ; BSR set to: 0
  5805  001036  0E00               	movlw	0
  5806  001038  6F65               	movwf	(_efgtoa$1162+1)& (0+255),b
  5807  00103A  0E2D               	movlw	45
  5808  00103C  6F64               	movwf	_efgtoa$1162& (0+255),b
  5809  00103E                     l4638:
  5810                           
  5811                           ; BSR set to: 0
  5812  00103E  C064  F168         	movff	_efgtoa$1162,_dbuf
  5813  001042                     
  5814                           ; BSR set to: 0
  5815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  5816  001042  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5817  001044  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5818  001046                     
  5819                           ; BSR set to: 0
  5820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  5821  001046  077F               	decf	efgtoa@w& (0+255),f,b
  5822  001048  A0D8               	btfss	status,0,c
  5823  00104A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5824  00104C                     l4644:
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5828  00104C  C08C  F003         	movff	efgtoa@g,___fpclassifyf@x
  5829  001050  C08D  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5830  001054  C08E  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5831  001058  C08F  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5832  00105C  EC22  F01E         	call	___fpclassifyf	;wreg free
  5833  001060  0403               	decf	?___fpclassifyf^0,w,c
  5834  001062  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  5835  001064  A4D8               	btfss	status,2,c
  5836  001066  EF37  F008         	goto	u4821
  5837  00106A  EF39  F008         	goto	u4820
  5838  00106E                     u4821:
  5839  00106E  EF90  F008         	goto	l4662
  5840  001072                     u4820:
  5841  001072  0EBF               	movlw	191
  5842  001074  6E3D               	movwf	??_efgtoa^0,c
  5843  001076  0EFF               	movlw	255
  5844  001078  6E3E               	movwf	(??_efgtoa+1)^0,c
  5845  00107A  503C               	movf	efgtoa@c^0,w,c
  5846  00107C  6E3F               	movwf	(??_efgtoa+2)^0,c
  5847  00107E  6A40               	clrf	(??_efgtoa+3)^0,c
  5848  001080  503D               	movf	??_efgtoa^0,w,c
  5849  001082  263F               	addwf	(??_efgtoa+2)^0,f,c
  5850  001084  503E               	movf	(??_efgtoa+1)^0,w,c
  5851  001086  2240               	addwfc	(??_efgtoa+3)^0,f,c
  5852  001088  5040               	movf	(??_efgtoa+3)^0,w,c
  5853  00108A  E10A               	bnz	u4830
  5854  00108C  0E1A               	movlw	26
  5855  00108E  5C3F               	subwf	(??_efgtoa+2)^0,w,c
  5856  001090  A0D8               	btfss	status,0,c
  5857  001092  EF4D  F008         	goto	u4831
  5858  001096  EF50  F008         	goto	u4830
  5859  00109A                     u4831:
  5860  00109A  0E01               	movlw	1
  5861  00109C  EF51  F008         	goto	u4840
  5862  0010A0                     u4830:
  5863  0010A0  0E00               	movlw	0
  5864  0010A2                     u4840:
  5865  0010A2  0100               	movlb	0	; () banked
  5866  0010A4  6F66               	movwf	_efgtoa$1163& (0+255),b
  5867  0010A6  6B67               	clrf	(_efgtoa$1163+1)& (0+255),b
  5868  0010A8                     
  5869                           ; BSR set to: 0
  5870  0010A8  5166               	movf	_efgtoa$1163& (0+255),w,b
  5871  0010AA  1167               	iorwf	(_efgtoa$1163+1)& (0+255),w,b
  5872  0010AC  B4D8               	btfsc	status,2,c
  5873  0010AE  EF5B  F008         	goto	u4851
  5874  0010B2  EF5D  F008         	goto	u4850
  5875  0010B6                     u4851:
  5876  0010B6  EF6B  F008         	goto	l4654
  5877  0010BA                     u4850:
  5878  0010BA                     
  5879                           ; BSR set to: 0
  5880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  5881  0010BA  0E68               	movlw	low _dbuf
  5882  0010BC  2592               	addwf	efgtoa@n& (0+255),w,b
  5883  0010BE  6E03               	movwf	strcpy@dest^0,c
  5884  0010C0  0E01               	movlw	high _dbuf
  5885  0010C2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5886  0010C4  6E04               	movwf	(strcpy@dest+1)^0,c
  5887  0010C6  0E7D               	movlw	low STR_11
  5888  0010C8  6E05               	movwf	strcpy@src^0,c
  5889  0010CA  0E0F               	movlw	high STR_11
  5890  0010CC  6E06               	movwf	(strcpy@src+1)^0,c
  5891  0010CE  EC0A  F025         	call	_strcpy	;wreg free
  5892                           
  5893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  5894  0010D2  EF77  F008         	goto	l4656
  5895  0010D6                     l4654:
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  5899  0010D6  0E68               	movlw	low _dbuf
  5900  0010D8  2592               	addwf	efgtoa@n& (0+255),w,b
  5901  0010DA  6E03               	movwf	strcpy@dest^0,c
  5902  0010DC  0E01               	movlw	high _dbuf
  5903  0010DE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5904  0010E0  6E04               	movwf	(strcpy@dest+1)^0,c
  5905  0010E2  0E85               	movlw	low STR_12
  5906  0010E4  6E05               	movwf	strcpy@src^0,c
  5907  0010E6  0E0F               	movlw	high STR_12
  5908  0010E8  6E06               	movwf	(strcpy@src+1)^0,c
  5909  0010EA  EC0A  F025         	call	_strcpy	;wreg free
  5910  0010EE                     l4656:
  5911                           
  5912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  5913  0010EE  0100               	movlb	0	; () banked
  5914  0010F0  0EFD               	movlw	253
  5915  0010F2  277F               	addwf	efgtoa@w& (0+255),f,b
  5916  0010F4  0EFF               	movlw	255
  5917  0010F6  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5918  0010F8                     l4658:
  5919                           
  5920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  5921  0010F8  C036  F013         	movff	efgtoa@fp,pad@fp
  5922  0010FC  C037  F014         	movff	efgtoa@fp+1,pad@fp+1
  5923  001100  0E68               	movlw	low _dbuf
  5924  001102  6E15               	movwf	pad@buf^0,c
  5925  001104  0E01               	movlw	high _dbuf
  5926  001106  6E16               	movwf	(pad@buf+1)^0,c
  5927  001108  C07F  F017         	movff	efgtoa@w,pad@p
  5928  00110C  C080  F018         	movff	efgtoa@w+1,pad@p+1
  5929  001110  EC48  F021         	call	_pad	;wreg free
  5930  001114  C013  F036         	movff	?_pad,?_efgtoa
  5931  001118  C014  F037         	movff	?_pad+1,?_efgtoa+1
  5932  00111C  EFA0  F00D         	goto	l665
  5933  001120                     l4662:
  5934                           
  5935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5936  001120  C08C  F003         	movff	efgtoa@g,___fpclassifyf@x
  5937  001124  C08D  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5938  001128  C08E  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5939  00112C  C08F  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5940  001130  EC22  F01E         	call	___fpclassifyf	;wreg free
  5941  001134  5003               	movf	?___fpclassifyf^0,w,c
  5942  001136  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  5943  001138  A4D8               	btfss	status,2,c
  5944  00113A  EFA1  F008         	goto	u4861
  5945  00113E  EFA3  F008         	goto	u4860
  5946  001142                     u4861:
  5947  001142  EFE3  F008         	goto	l4680
  5948  001146                     u4860:
  5949  001146  0EBF               	movlw	191
  5950  001148  6E3D               	movwf	??_efgtoa^0,c
  5951  00114A  0EFF               	movlw	255
  5952  00114C  6E3E               	movwf	(??_efgtoa+1)^0,c
  5953  00114E  503C               	movf	efgtoa@c^0,w,c
  5954  001150  6E3F               	movwf	(??_efgtoa+2)^0,c
  5955  001152  6A40               	clrf	(??_efgtoa+3)^0,c
  5956  001154  503D               	movf	??_efgtoa^0,w,c
  5957  001156  263F               	addwf	(??_efgtoa+2)^0,f,c
  5958  001158  503E               	movf	(??_efgtoa+1)^0,w,c
  5959  00115A  2240               	addwfc	(??_efgtoa+3)^0,f,c
  5960  00115C  5040               	movf	(??_efgtoa+3)^0,w,c
  5961  00115E  E10A               	bnz	u4870
  5962  001160  0E1A               	movlw	26
  5963  001162  5C3F               	subwf	(??_efgtoa+2)^0,w,c
  5964  001164  A0D8               	btfss	status,0,c
  5965  001166  EFB7  F008         	goto	u4871
  5966  00116A  EFBA  F008         	goto	u4870
  5967  00116E                     u4871:
  5968  00116E  0E01               	movlw	1
  5969  001170  EFBB  F008         	goto	u4880
  5970  001174                     u4870:
  5971  001174  0E00               	movlw	0
  5972  001176                     u4880:
  5973  001176  0100               	movlb	0	; () banked
  5974  001178  6F68               	movwf	_efgtoa$1168& (0+255),b
  5975  00117A  6B69               	clrf	(_efgtoa$1168+1)& (0+255),b
  5976  00117C                     
  5977                           ; BSR set to: 0
  5978  00117C  5168               	movf	_efgtoa$1168& (0+255),w,b
  5979  00117E  1169               	iorwf	(_efgtoa$1168+1)& (0+255),w,b
  5980  001180  B4D8               	btfsc	status,2,c
  5981  001182  EFC5  F008         	goto	u4891
  5982  001186  EFC7  F008         	goto	u4890
  5983  00118A                     u4891:
  5984  00118A  EFD5  F008         	goto	l4672
  5985  00118E                     u4890:
  5986  00118E                     
  5987                           ; BSR set to: 0
  5988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  5989  00118E  0E68               	movlw	low _dbuf
  5990  001190  2592               	addwf	efgtoa@n& (0+255),w,b
  5991  001192  6E03               	movwf	strcpy@dest^0,c
  5992  001194  0E01               	movlw	high _dbuf
  5993  001196  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5994  001198  6E04               	movwf	(strcpy@dest+1)^0,c
  5995  00119A  0E81               	movlw	low STR_15
  5996  00119C  6E05               	movwf	strcpy@src^0,c
  5997  00119E  0E0F               	movlw	high STR_15
  5998  0011A0  6E06               	movwf	(strcpy@src+1)^0,c
  5999  0011A2  EC0A  F025         	call	_strcpy	;wreg free
  6000                           
  6001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  6002  0011A6  EF77  F008         	goto	l4656
  6003  0011AA                     l4672:
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  6007  0011AA  0E68               	movlw	low _dbuf
  6008  0011AC  2592               	addwf	efgtoa@n& (0+255),w,b
  6009  0011AE  6E03               	movwf	strcpy@dest^0,c
  6010  0011B0  0E01               	movlw	high _dbuf
  6011  0011B2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6012  0011B4  6E04               	movwf	(strcpy@dest+1)^0,c
  6013  0011B6  0E89               	movlw	low STR_16
  6014  0011B8  6E05               	movwf	strcpy@src^0,c
  6015  0011BA  0E0F               	movlw	high STR_16
  6016  0011BC  6E06               	movwf	(strcpy@src+1)^0,c
  6017  0011BE  EC0A  F025         	call	_strcpy	;wreg free
  6018  0011C2  EF77  F008         	goto	l4656
  6019  0011C6                     l4680:
  6020                           
  6021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  6022  0011C6  0E00               	movlw	0
  6023  0011C8  0100               	movlb	0	; () banked
  6024  0011CA  6F94               	movwf	efgtoa@u& (0+255),b
  6025  0011CC  0E00               	movlw	0
  6026  0011CE  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  6027  0011D0  0E80               	movlw	128
  6028  0011D2  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  6029  0011D4  0E3F               	movlw	63
  6030  0011D6  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  6031                           
  6032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  6033  0011D8  0E00               	movlw	0
  6034  0011DA  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  6035  0011DC  0E00               	movlw	0
  6036  0011DE  6F90               	movwf	efgtoa@e& (0+255),b
  6037  0011E0                     
  6038                           ; BSR set to: 0
  6039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  6040  0011E0  C08C  F003         	movff	efgtoa@g,___fleq@ff1
  6041  0011E4  C08D  F004         	movff	efgtoa@g+1,___fleq@ff1+1
  6042  0011E8  C08E  F005         	movff	efgtoa@g+2,___fleq@ff1+2
  6043  0011EC  C08F  F006         	movff	efgtoa@g+3,___fleq@ff1+3
  6044  0011F0  0E00               	movlw	0
  6045  0011F2  6E07               	movwf	___fleq@ff2^0,c
  6046  0011F4  0E00               	movlw	0
  6047  0011F6  6E08               	movwf	(___fleq@ff2+1)^0,c
  6048  0011F8  0E00               	movlw	0
  6049  0011FA  6E09               	movwf	(___fleq@ff2+2)^0,c
  6050  0011FC  0E00               	movlw	0
  6051  0011FE  6E0A               	movwf	(___fleq@ff2+3)^0,c
  6052  001200  EC65  F022         	call	___fleq	;wreg free
  6053  001204  B0D8               	btfsc	status,0,c
  6054  001206  EF07  F009         	goto	u4901
  6055  00120A  EF09  F009         	goto	u4900
  6056  00120E                     u4901:
  6057  00120E  EF8C  F009         	goto	l4698
  6058  001212                     u4900:
  6059  001212  EF28  F009         	goto	l4690
  6060  001216                     l4686:
  6061                           
  6062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  6063  001216  C094  F011         	movff	efgtoa@u,___flmul@b
  6064  00121A  C095  F012         	movff	efgtoa@u+1,___flmul@b+1
  6065  00121E  C096  F013         	movff	efgtoa@u+2,___flmul@b+2
  6066  001222  C097  F014         	movff	efgtoa@u+3,___flmul@b+3
  6067  001226  0E00               	movlw	0
  6068  001228  6E15               	movwf	___flmul@a^0,c
  6069  00122A  0E00               	movlw	0
  6070  00122C  6E16               	movwf	(___flmul@a+1)^0,c
  6071  00122E  0E20               	movlw	32
  6072  001230  6E17               	movwf	(___flmul@a+2)^0,c
  6073  001232  0E41               	movlw	65
  6074  001234  6E18               	movwf	(___flmul@a+3)^0,c
  6075  001236  EC76  F013         	call	___flmul	;wreg free
  6076  00123A  C011  F094         	movff	?___flmul,efgtoa@u
  6077  00123E  C012  F095         	movff	?___flmul+1,efgtoa@u+1
  6078  001242  C013  F096         	movff	?___flmul+2,efgtoa@u+2
  6079  001246  C014  F097         	movff	?___flmul+3,efgtoa@u+3
  6080  00124A                     
  6081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  6082  00124A  0100               	movlb	0	; () banked
  6083  00124C  4B90               	infsnz	efgtoa@e& (0+255),f,b
  6084  00124E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  6085  001250                     l4690:
  6086                           
  6087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  6088  001250  C08C  F02A         	movff	efgtoa@g,___flge@ff1
  6089  001254  C08D  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  6090  001258  C08E  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  6091  00125C  C08F  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  6092  001260  0E00               	movlw	0
  6093  001262  6E15               	movwf	___flmul@a^0,c
  6094  001264  0E00               	movlw	0
  6095  001266  6E16               	movwf	(___flmul@a+1)^0,c
  6096  001268  0E20               	movlw	32
  6097  00126A  6E17               	movwf	(___flmul@a+2)^0,c
  6098  00126C  0E41               	movlw	65
  6099  00126E  6E18               	movwf	(___flmul@a+3)^0,c
  6100  001270  C094  F011         	movff	efgtoa@u,___flmul@b
  6101  001274  C095  F012         	movff	efgtoa@u+1,___flmul@b+1
  6102  001278  C096  F013         	movff	efgtoa@u+2,___flmul@b+2
  6103  00127C  C097  F014         	movff	efgtoa@u+3,___flmul@b+3
  6104  001280  EC76  F013         	call	___flmul	;wreg free
  6105  001284  C011  F02E         	movff	?___flmul,___flge@ff2
  6106  001288  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  6107  00128C  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  6108  001290  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  6109  001294  ECA0  F01D         	call	___flge	;wreg free
  6110  001298  B0D8               	btfsc	status,0,c
  6111  00129A  EF51  F009         	goto	u4911
  6112  00129E  EF53  F009         	goto	u4910
  6113  0012A2                     u4911:
  6114  0012A2  EF0B  F009         	goto	l4686
  6115  0012A6                     u4910:
  6116  0012A6  EF73  F009         	goto	l4696
  6117  0012AA                     l4692:
  6118                           
  6119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  6120  0012AA  C094  F003         	movff	efgtoa@u,___fldiv@b
  6121  0012AE  C095  F004         	movff	efgtoa@u+1,___fldiv@b+1
  6122  0012B2  C096  F005         	movff	efgtoa@u+2,___fldiv@b+2
  6123  0012B6  C097  F006         	movff	efgtoa@u+3,___fldiv@b+3
  6124  0012BA  0E00               	movlw	0
  6125  0012BC  6E07               	movwf	___fldiv@a^0,c
  6126  0012BE  0E00               	movlw	0
  6127  0012C0  6E08               	movwf	(___fldiv@a+1)^0,c
  6128  0012C2  0E20               	movlw	32
  6129  0012C4  6E09               	movwf	(___fldiv@a+2)^0,c
  6130  0012C6  0E41               	movlw	65
  6131  0012C8  6E0A               	movwf	(___fldiv@a+3)^0,c
  6132  0012CA  EC8B  F015         	call	___fldiv	;wreg free
  6133  0012CE  C003  F094         	movff	?___fldiv,efgtoa@u
  6134  0012D2  C004  F095         	movff	?___fldiv+1,efgtoa@u+1
  6135  0012D6  C005  F096         	movff	?___fldiv+2,efgtoa@u+2
  6136  0012DA  C006  F097         	movff	?___fldiv+3,efgtoa@u+3
  6137  0012DE                     
  6138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  6139  0012DE  0100               	movlb	0	; () banked
  6140  0012E0  0790               	decf	efgtoa@e& (0+255),f,b
  6141  0012E2  A0D8               	btfss	status,0,c
  6142  0012E4  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  6143  0012E6                     l4696:
  6144                           
  6145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  6146  0012E6  C08C  F02A         	movff	efgtoa@g,___flge@ff1
  6147  0012EA  C08D  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  6148  0012EE  C08E  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  6149  0012F2  C08F  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  6150  0012F6  C094  F02E         	movff	efgtoa@u,___flge@ff2
  6151  0012FA  C095  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  6152  0012FE  C096  F030         	movff	efgtoa@u+2,___flge@ff2+2
  6153  001302  C097  F031         	movff	efgtoa@u+3,___flge@ff2+3
  6154  001306  ECA0  F01D         	call	___flge	;wreg free
  6155  00130A  A0D8               	btfss	status,0,c
  6156  00130C  EF8A  F009         	goto	u4921
  6157  001310  EF8C  F009         	goto	u4920
  6158  001314                     u4921:
  6159  001314  EF55  F009         	goto	l4692
  6160  001318                     u4920:
  6161  001318                     l4698:
  6162                           
  6163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  6164  001318  C03C  F009         	movff	efgtoa@c,tolower@c
  6165  00131C  6A0A               	clrf	(tolower@c+1)^0,c
  6166  00131E  ECDA  F024         	call	_tolower	;wreg free
  6167  001322  5009               	movf	?_tolower^0,w,c
  6168  001324  0100               	movlb	0	; () banked
  6169  001326  6F81               	movwf	efgtoa@mode& (0+255),b
  6170  001328                     
  6171                           ; BSR set to: 0
  6172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  6173  001328  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  6174  00132C                     
  6175                           ; BSR set to: 0
  6176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  6177  00132C  0E67               	movlw	103
  6178  00132E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6179  001330  A4D8               	btfss	status,2,c
  6180  001332  EF9D  F009         	goto	u4931
  6181  001336  EF9F  F009         	goto	u4930
  6182  00133A                     u4931:
  6183  00133A  EFC5  F009         	goto	l4712
  6184  00133E                     u4930:
  6185  00133E                     
  6186                           ; BSR set to: 0
  6187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  6188  00133E  5054               	movf	_prec^0,w,c
  6189  001340  1055               	iorwf	(_prec+1)^0,w,c
  6190  001342  A4D8               	btfss	status,2,c
  6191  001344  EFA6  F009         	goto	u4941
  6192  001348  EFA8  F009         	goto	u4940
  6193  00134C                     u4941:
  6194  00134C  EFAC  F009         	goto	l4708
  6195  001350                     u4940:
  6196  001350                     
  6197                           ; BSR set to: 0
  6198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  6199  001350  0E00               	movlw	0
  6200  001352  6E55               	movwf	(_prec+1)^0,c
  6201  001354  0E01               	movlw	1
  6202  001356  6E54               	movwf	_prec^0,c
  6203  001358                     l4708:
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  6207  001358  BE55               	btfsc	(_prec+1)^0,7,c
  6208  00135A  EFB9  F009         	goto	u4950
  6209  00135E  5055               	movf	(_prec+1)^0,w,c
  6210  001360  E106               	bnz	u4951
  6211  001362  0454               	decf	_prec^0,w,c
  6212  001364  B0D8               	btfsc	status,0,c
  6213  001366  EFB7  F009         	goto	u4951
  6214  00136A  EFB9  F009         	goto	u4950
  6215  00136E                     u4951:
  6216  00136E  EFBF  F009         	goto	l683
  6217  001372                     u4950:
  6218  001372                     l4710:
  6219                           
  6220                           ; BSR set to: 0
  6221  001372  0E00               	movlw	0
  6222  001374  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  6223  001376  0E06               	movlw	6
  6224  001378  6F7C               	movwf	efgtoa@p& (0+255),b
  6225  00137A  EFCE  F009         	goto	l4718
  6226  00137E                     l683:
  6227                           
  6228                           ; BSR set to: 0
  6229  00137E  C054  F07C         	movff	_prec,efgtoa@p
  6230  001382  C055  F07D         	movff	_prec+1,efgtoa@p+1
  6231  001386  EFCE  F009         	goto	l4718
  6232  00138A                     l4712:
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  6236  00138A  BE55               	btfsc	(_prec+1)^0,7,c
  6237  00138C  EFCA  F009         	goto	u4961
  6238  001390  EFCC  F009         	goto	u4960
  6239  001394                     u4961:
  6240  001394  EFB9  F009         	goto	l4710
  6241  001398                     u4960:
  6242  001398  EFBF  F009         	goto	l683
  6243  00139C                     l4718:
  6244                           
  6245                           ; BSR set to: 0
  6246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  6247  00139C  0E67               	movlw	103
  6248  00139E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6249  0013A0  A4D8               	btfss	status,2,c
  6250  0013A2  EFD5  F009         	goto	u4971
  6251  0013A6  EFD7  F009         	goto	u4970
  6252  0013AA                     u4971:
  6253  0013AA  EF06  F00A         	goto	l4728
  6254  0013AE                     u4970:
  6255  0013AE                     
  6256                           ; BSR set to: 0
  6257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  6258  0013AE  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  6259  0013B0  EFE5  F009         	goto	u4980
  6260  0013B4  0EFC               	movlw	252
  6261  0013B6  5D90               	subwf	efgtoa@e& (0+255),w,b
  6262  0013B8  0EFF               	movlw	255
  6263  0013BA  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6264  0013BC  A0D8               	btfss	status,0,c
  6265  0013BE  EFE3  F009         	goto	u4981
  6266  0013C2  EFE5  F009         	goto	u4980
  6267  0013C6                     u4981:
  6268  0013C6  EF04  F00A         	goto	l4726
  6269  0013CA                     u4980:
  6270  0013CA                     
  6271                           ; BSR set to: 0
  6272  0013CA  0EFF               	movlw	255
  6273  0013CC  6E3D               	movwf	??_efgtoa^0,c
  6274  0013CE  0EFF               	movlw	255
  6275  0013D0  6E3E               	movwf	(??_efgtoa+1)^0,c
  6276  0013D2  C07C  F03F         	movff	efgtoa@p,??_efgtoa+2
  6277  0013D6  C07D  F040         	movff	efgtoa@p+1,??_efgtoa+3
  6278  0013DA  503D               	movf	??_efgtoa^0,w,c
  6279  0013DC  263F               	addwf	(??_efgtoa+2)^0,f,c
  6280  0013DE  503E               	movf	(??_efgtoa+1)^0,w,c
  6281  0013E0  2240               	addwfc	(??_efgtoa+3)^0,f,c
  6282  0013E2  5190               	movf	efgtoa@e& (0+255),w,b
  6283  0013E4  5C3F               	subwf	(??_efgtoa+2)^0,w,c
  6284  0013E6  5040               	movf	(??_efgtoa+3)^0,w,c
  6285  0013E8  0A80               	xorlw	128
  6286  0013EA  6E41               	movwf	(??_efgtoa+4)^0,c
  6287  0013EC  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  6288  0013EE  0A80               	xorlw	128
  6289  0013F0  5841               	subwfb	(??_efgtoa+4)^0,w,c
  6290  0013F2  A0D8               	btfss	status,0,c
  6291  0013F4  EFFE  F009         	goto	u4991
  6292  0013F8  EF00  F00A         	goto	u4990
  6293  0013FC                     u4991:
  6294  0013FC  EF04  F00A         	goto	l4726
  6295  001400                     u4990:
  6296  001400                     
  6297                           ; BSR set to: 0
  6298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  6299  001400  0E66               	movlw	102
  6300  001402  6F7E               	movwf	efgtoa@nmode& (0+255),b
  6301                           
  6302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  6303  001404  EF06  F00A         	goto	l4728
  6304  001408                     l4726:
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  6308  001408  0E65               	movlw	101
  6309  00140A  6F7E               	movwf	efgtoa@nmode& (0+255),b
  6310  00140C                     l4728:
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  6314  00140C  C07C  F074         	movff	efgtoa@p,efgtoa@m
  6315  001410  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  6316  001414                     
  6317                           ; BSR set to: 0
  6318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  6319  001414  0E67               	movlw	103
  6320  001416  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6321  001418  A4D8               	btfss	status,2,c
  6322  00141A  EF11  F00A         	goto	u5001
  6323  00141E  EF13  F00A         	goto	u5000
  6324  001422                     u5001:
  6325  001422  EF23  F00A         	goto	l4736
  6326  001426                     u5000:
  6327  001426                     
  6328                           ; BSR set to: 0
  6329  001426  0E66               	movlw	102
  6330  001428  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  6331  00142A  A4D8               	btfss	status,2,c
  6332  00142C  EF1A  F00A         	goto	u5011
  6333  001430  EF1C  F00A         	goto	u5010
  6334  001434                     u5011:
  6335  001434  EF25  F00A         	goto	l4738
  6336  001438                     u5010:
  6337  001438                     
  6338                           ; BSR set to: 0
  6339  001438  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6340  00143A  EF23  F00A         	goto	u5020
  6341  00143E  EF21  F00A         	goto	u5021
  6342  001442                     u5021:
  6343  001442  EF25  F00A         	goto	l4738
  6344  001446                     u5020:
  6345  001446                     l4736:
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  6349  001446  4B74               	infsnz	efgtoa@m& (0+255),f,b
  6350  001448  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  6351  00144A                     l4738:
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  6355  00144A  0E66               	movlw	102
  6356  00144C  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  6357  00144E  A4D8               	btfss	status,2,c
  6358  001450  EF2C  F00A         	goto	u5031
  6359  001454  EF2E  F00A         	goto	u5030
  6360  001458                     u5031:
  6361  001458  EF4E  F00A         	goto	l4748
  6362  00145C                     u5030:
  6363  00145C                     
  6364                           ; BSR set to: 0
  6365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  6366  00145C  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6367  00145E  EF35  F00A         	goto	u5040
  6368  001462  EF33  F00A         	goto	u5041
  6369  001466                     u5041:
  6370  001466  EF41  F00A         	goto	l4744
  6371  00146A                     u5040:
  6372  00146A                     
  6373                           ; BSR set to: 0
  6374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  6375  00146A  0E00               	movlw	0
  6376  00146C  6F94               	movwf	efgtoa@u& (0+255),b
  6377  00146E  0E00               	movlw	0
  6378  001470  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  6379  001472  0E80               	movlw	128
  6380  001474  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  6381  001476  0E3F               	movlw	63
  6382  001478  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  6383                           
  6384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  6385  00147A  0E00               	movlw	0
  6386  00147C  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  6387  00147E  0E00               	movlw	0
  6388  001480  6F90               	movwf	efgtoa@e& (0+255),b
  6389  001482                     l4744:
  6390                           
  6391                           ; BSR set to: 0
  6392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  6393  001482  0E67               	movlw	103
  6394  001484  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6395  001486  B4D8               	btfsc	status,2,c
  6396  001488  EF48  F00A         	goto	u5051
  6397  00148C  EF4A  F00A         	goto	u5050
  6398  001490                     u5051:
  6399  001490  EF4E  F00A         	goto	l4748
  6400  001494                     u5050:
  6401  001494                     
  6402                           ; BSR set to: 0
  6403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  6404  001494  5190               	movf	efgtoa@e& (0+255),w,b
  6405  001496  2774               	addwf	efgtoa@m& (0+255),f,b
  6406  001498  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  6407  00149A  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6408  00149C                     l4748:
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  6412  00149C  0E00               	movlw	0
  6413  00149E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6414  0014A0  0E00               	movlw	0
  6415  0014A2  6F8A               	movwf	efgtoa@i& (0+255),b
  6416  0014A4                     
  6417                           ; BSR set to: 0
  6418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  6419  0014A4  C08C  F082         	movff	efgtoa@g,efgtoa@h
  6420  0014A8  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  6421  0014AC  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  6422  0014B0  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  6423  0014B4                     
  6424                           ; BSR set to: 0
  6425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  6426  0014B4  C094  F060         	movff	efgtoa@u,efgtoa@ou
  6427  0014B8  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  6428  0014BC  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  6429  0014C0  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  6430                           
  6431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  6432  0014C4  EFDF  F00A         	goto	l4762
  6433  0014C8                     l4754:
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  6437  0014C8  C082  F003         	movff	efgtoa@h,___fldiv@b
  6438  0014CC  C083  F004         	movff	efgtoa@h+1,___fldiv@b+1
  6439  0014D0  C084  F005         	movff	efgtoa@h+2,___fldiv@b+2
  6440  0014D4  C085  F006         	movff	efgtoa@h+3,___fldiv@b+3
  6441  0014D8  C094  F007         	movff	efgtoa@u,___fldiv@a
  6442  0014DC  C095  F008         	movff	efgtoa@u+1,___fldiv@a+1
  6443  0014E0  C096  F009         	movff	efgtoa@u+2,___fldiv@a+2
  6444  0014E4  C097  F00A         	movff	efgtoa@u+3,___fldiv@a+3
  6445  0014E8  EC8B  F015         	call	___fldiv	;wreg free
  6446  0014EC  C003  F01C         	movff	?___fldiv,floorf@x
  6447  0014F0  C004  F01D         	movff	?___fldiv+1,floorf@x+1
  6448  0014F4  C005  F01E         	movff	?___fldiv+2,floorf@x+2
  6449  0014F8  C006  F01F         	movff	?___fldiv+3,floorf@x+3
  6450  0014FC  EC99  F018         	call	_floorf	;wreg free
  6451  001500  C01C  F086         	movff	?_floorf,efgtoa@l
  6452  001504  C01D  F087         	movff	?_floorf+1,efgtoa@l+1
  6453  001508  C01E  F088         	movff	?_floorf+2,efgtoa@l+2
  6454  00150C  C01F  F089         	movff	?_floorf+3,efgtoa@l+3
  6455                           
  6456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  6457  001510  C086  F003         	movff	efgtoa@l,___fltol@f1
  6458  001514  C087  F004         	movff	efgtoa@l+1,___fltol@f1+1
  6459  001518  C088  F005         	movff	efgtoa@l+2,___fltol@f1+2
  6460  00151C  C089  F006         	movff	efgtoa@l+3,___fltol@f1+3
  6461  001520  EC1D  F01D         	call	___fltol	;wreg free
  6462  001524  C003  F078         	movff	?___fltol,efgtoa@d
  6463  001528  C004  F079         	movff	?___fltol+1,efgtoa@d+1
  6464  00152C                     
  6465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  6466  00152C  C082  F02A         	movff	efgtoa@h,___flsub@b
  6467  001530  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  6468  001534  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  6469  001538  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  6470  00153C  C094  F015         	movff	efgtoa@u,___flmul@a
  6471  001540  C095  F016         	movff	efgtoa@u+1,___flmul@a+1
  6472  001544  C096  F017         	movff	efgtoa@u+2,___flmul@a+2
  6473  001548  C097  F018         	movff	efgtoa@u+3,___flmul@a+3
  6474  00154C  C086  F011         	movff	efgtoa@l,___flmul@b
  6475  001550  C087  F012         	movff	efgtoa@l+1,___flmul@b+1
  6476  001554  C088  F013         	movff	efgtoa@l+2,___flmul@b+2
  6477  001558  C089  F014         	movff	efgtoa@l+3,___flmul@b+3
  6478  00155C  EC76  F013         	call	___flmul	;wreg free
  6479  001560  C011  F02E         	movff	?___flmul,___flsub@a
  6480  001564  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  6481  001568  C013  F030         	movff	?___flmul+2,___flsub@a+2
  6482  00156C  C014  F031         	movff	?___flmul+3,___flsub@a+3
  6483  001570  ECE5  F025         	call	___flsub	;wreg free
  6484  001574  C02A  F082         	movff	?___flsub,efgtoa@h
  6485  001578  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  6486  00157C  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  6487  001580  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  6488  001584                     
  6489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  6490  001584  C094  F003         	movff	efgtoa@u,___fldiv@b
  6491  001588  C095  F004         	movff	efgtoa@u+1,___fldiv@b+1
  6492  00158C  C096  F005         	movff	efgtoa@u+2,___fldiv@b+2
  6493  001590  C097  F006         	movff	efgtoa@u+3,___fldiv@b+3
  6494  001594  0E00               	movlw	0
  6495  001596  6E07               	movwf	___fldiv@a^0,c
  6496  001598  0E00               	movlw	0
  6497  00159A  6E08               	movwf	(___fldiv@a+1)^0,c
  6498  00159C  0E20               	movlw	32
  6499  00159E  6E09               	movwf	(___fldiv@a+2)^0,c
  6500  0015A0  0E41               	movlw	65
  6501  0015A2  6E0A               	movwf	(___fldiv@a+3)^0,c
  6502  0015A4  EC8B  F015         	call	___fldiv	;wreg free
  6503  0015A8  C003  F094         	movff	?___fldiv,efgtoa@u
  6504  0015AC  C004  F095         	movff	?___fldiv+1,efgtoa@u+1
  6505  0015B0  C005  F096         	movff	?___fldiv+2,efgtoa@u+2
  6506  0015B4  C006  F097         	movff	?___fldiv+3,efgtoa@u+3
  6507  0015B8                     
  6508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  6509  0015B8  0100               	movlb	0	; () banked
  6510  0015BA  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  6511  0015BC  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  6512  0015BE                     l4762:
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  6516  0015BE  5174               	movf	efgtoa@m& (0+255),w,b
  6517  0015C0  5D8A               	subwf	efgtoa@i& (0+255),w,b
  6518  0015C2  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  6519  0015C4  0A80               	xorlw	128
  6520  0015C6  6E3D               	movwf	??_efgtoa^0,c
  6521  0015C8  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  6522  0015CA  0A80               	xorlw	128
  6523  0015CC  583D               	subwfb	??_efgtoa^0,w,c
  6524  0015CE  A0D8               	btfss	status,0,c
  6525  0015D0  EFEC  F00A         	goto	u5061
  6526  0015D4  EFEE  F00A         	goto	u5060
  6527  0015D8                     u5061:
  6528  0015D8  EF64  F00A         	goto	l4754
  6529  0015DC                     u5060:
  6530  0015DC                     
  6531                           ; BSR set to: 0
  6532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  6533  0015DC  C094  F011         	movff	efgtoa@u,___flmul@b
  6534  0015E0  C095  F012         	movff	efgtoa@u+1,___flmul@b+1
  6535  0015E4  C096  F013         	movff	efgtoa@u+2,___flmul@b+2
  6536  0015E8  C097  F014         	movff	efgtoa@u+3,___flmul@b+3
  6537  0015EC  0E00               	movlw	0
  6538  0015EE  6E15               	movwf	___flmul@a^0,c
  6539  0015F0  0E00               	movlw	0
  6540  0015F2  6E16               	movwf	(___flmul@a+1)^0,c
  6541  0015F4  0EA0               	movlw	160
  6542  0015F6  6E17               	movwf	(___flmul@a+2)^0,c
  6543  0015F8  0E40               	movlw	64
  6544  0015FA  6E18               	movwf	(___flmul@a+3)^0,c
  6545  0015FC  EC76  F013         	call	___flmul	;wreg free
  6546  001600  C011  F086         	movff	?___flmul,efgtoa@l
  6547  001604  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  6548  001608  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  6549  00160C  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  6550  001610                     
  6551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  6552  001610  C082  F02A         	movff	efgtoa@h,___flge@ff1
  6553  001614  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  6554  001618  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  6555  00161C  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  6556  001620  C086  F02E         	movff	efgtoa@l,___flge@ff2
  6557  001624  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  6558  001628  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  6559  00162C  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  6560  001630  ECA0  F01D         	call	___flge	;wreg free
  6561  001634  B0D8               	btfsc	status,0,c
  6562  001636  EF1F  F00B         	goto	u5071
  6563  00163A  EF21  F00B         	goto	u5070
  6564  00163E                     u5071:
  6565  00163E  EF2C  F00B         	goto	l4770
  6566  001642                     u5070:
  6567  001642                     
  6568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  6569  001642  0E00               	movlw	0
  6570  001644  0100               	movlb	0	; () banked
  6571  001646  6F86               	movwf	efgtoa@l& (0+255),b
  6572  001648  0E00               	movlw	0
  6573  00164A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  6574  00164C  0E00               	movlw	0
  6575  00164E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  6576  001650  0E00               	movlw	0
  6577  001652  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  6578                           
  6579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  6580  001654  EF55  F00B         	goto	l4776
  6581  001658                     l4770:
  6582                           
  6583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  6584  001658  C082  F003         	movff	efgtoa@h,___fleq@ff1
  6585  00165C  C083  F004         	movff	efgtoa@h+1,___fleq@ff1+1
  6586  001660  C084  F005         	movff	efgtoa@h+2,___fleq@ff1+2
  6587  001664  C085  F006         	movff	efgtoa@h+3,___fleq@ff1+3
  6588  001668  C086  F007         	movff	efgtoa@l,___fleq@ff2
  6589  00166C  C087  F008         	movff	efgtoa@l+1,___fleq@ff2+1
  6590  001670  C088  F009         	movff	efgtoa@l+2,___fleq@ff2+2
  6591  001674  C089  F00A         	movff	efgtoa@l+3,___fleq@ff2+3
  6592  001678  EC65  F022         	call	___fleq	;wreg free
  6593  00167C  A0D8               	btfss	status,0,c
  6594  00167E  EF43  F00B         	goto	u5081
  6595  001682  EF45  F00B         	goto	u5080
  6596  001686                     u5081:
  6597  001686  EF55  F00B         	goto	l4776
  6598  00168A                     u5080:
  6599  00168A  0100               	movlb	0	; () banked
  6600  00168C  B178               	btfsc	efgtoa@d& (0+255),0,b
  6601  00168E  EF4B  F00B         	goto	u5091
  6602  001692  EF4D  F00B         	goto	u5090
  6603  001696                     u5091:
  6604  001696  EF55  F00B         	goto	l4776
  6605  00169A                     u5090:
  6606  00169A                     
  6607                           ; BSR set to: 0
  6608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  6609  00169A  0E00               	movlw	0
  6610  00169C  6F86               	movwf	efgtoa@l& (0+255),b
  6611  00169E  0E00               	movlw	0
  6612  0016A0  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  6613  0016A2  0E00               	movlw	0
  6614  0016A4  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  6615  0016A6  0E00               	movlw	0
  6616  0016A8  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  6617  0016AA                     l4776:
  6618                           
  6619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  6620  0016AA  C08C  F003         	movff	efgtoa@g,___fladd@b
  6621  0016AE  C08D  F004         	movff	efgtoa@g+1,___fladd@b+1
  6622  0016B2  C08E  F005         	movff	efgtoa@g+2,___fladd@b+2
  6623  0016B6  C08F  F006         	movff	efgtoa@g+3,___fladd@b+3
  6624  0016BA  C086  F007         	movff	efgtoa@l,___fladd@a
  6625  0016BE  C087  F008         	movff	efgtoa@l+1,___fladd@a+1
  6626  0016C2  C088  F009         	movff	efgtoa@l+2,___fladd@a+2
  6627  0016C6  C089  F00A         	movff	efgtoa@l+3,___fladd@a+3
  6628  0016CA  EC16  F011         	call	___fladd	;wreg free
  6629  0016CE  C003  F082         	movff	?___fladd,efgtoa@h
  6630  0016D2  C004  F083         	movff	?___fladd+1,efgtoa@h+1
  6631  0016D6  C005  F084         	movff	?___fladd+2,efgtoa@h+2
  6632  0016DA  C006  F085         	movff	?___fladd+3,efgtoa@h+3
  6633  0016DE                     
  6634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  6635  0016DE  C060  F094         	movff	efgtoa@ou,efgtoa@u
  6636  0016E2  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  6637  0016E6  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  6638  0016EA  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  6639  0016EE                     
  6640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  6641  0016EE  0E65               	movlw	101
  6642  0016F0  0100               	movlb	0	; () banked
  6643  0016F2  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  6644  0016F4  B4D8               	btfsc	status,2,c
  6645  0016F6  EF7F  F00B         	goto	u5101
  6646  0016FA  EF81  F00B         	goto	u5100
  6647  0016FE                     u5101:
  6648  0016FE  EF87  F00B         	goto	l4784
  6649  001702                     u5100:
  6650  001702                     
  6651                           ; BSR set to: 0
  6652  001702  C090  F076         	movff	efgtoa@e,efgtoa@ne
  6653  001706  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  6654  00170A  EF8B  F00B         	goto	l709
  6655  00170E                     l4784:
  6656                           
  6657                           ; BSR set to: 0
  6658  00170E  0E00               	movlw	0
  6659  001710  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  6660  001712  0E00               	movlw	0
  6661  001714  6F76               	movwf	efgtoa@ne& (0+255),b
  6662  001716                     l709:
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  6666  001716  0E00               	movlw	0
  6667  001718  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  6668  00171A  0E00               	movlw	0
  6669  00171C  6F72               	movwf	efgtoa@pp& (0+255),b
  6670                           
  6671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  6672  00171E  0E00               	movlw	0
  6673  001720  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  6674  001722  0E00               	movlw	0
  6675  001724  6F70               	movwf	efgtoa@t& (0+255),b
  6676                           
  6677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  6678  001726  0E00               	movlw	0
  6679  001728  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6680  00172A  0E00               	movlw	0
  6681  00172C  6F8A               	movwf	efgtoa@i& (0+255),b
  6682                           
  6683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  6684  00172E  EF86  F00C         	goto	l4834
  6685  001732                     l4786:
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  6689  001732  C082  F003         	movff	efgtoa@h,___fldiv@b
  6690  001736  C083  F004         	movff	efgtoa@h+1,___fldiv@b+1
  6691  00173A  C084  F005         	movff	efgtoa@h+2,___fldiv@b+2
  6692  00173E  C085  F006         	movff	efgtoa@h+3,___fldiv@b+3
  6693  001742  C094  F007         	movff	efgtoa@u,___fldiv@a
  6694  001746  C095  F008         	movff	efgtoa@u+1,___fldiv@a+1
  6695  00174A  C096  F009         	movff	efgtoa@u+2,___fldiv@a+2
  6696  00174E  C097  F00A         	movff	efgtoa@u+3,___fldiv@a+3
  6697  001752  EC8B  F015         	call	___fldiv	;wreg free
  6698  001756  C003  F01C         	movff	?___fldiv,floorf@x
  6699  00175A  C004  F01D         	movff	?___fldiv+1,floorf@x+1
  6700  00175E  C005  F01E         	movff	?___fldiv+2,floorf@x+2
  6701  001762  C006  F01F         	movff	?___fldiv+3,floorf@x+3
  6702  001766  EC99  F018         	call	_floorf	;wreg free
  6703  00176A  C01C  F086         	movff	?_floorf,efgtoa@l
  6704  00176E  C01D  F087         	movff	?_floorf+1,efgtoa@l+1
  6705  001772  C01E  F088         	movff	?_floorf+2,efgtoa@l+2
  6706  001776  C01F  F089         	movff	?_floorf+3,efgtoa@l+3
  6707                           
  6708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  6709  00177A  C086  F003         	movff	efgtoa@l,___fltol@f1
  6710  00177E  C087  F004         	movff	efgtoa@l+1,___fltol@f1+1
  6711  001782  C088  F005         	movff	efgtoa@l+2,___fltol@f1+2
  6712  001786  C089  F006         	movff	efgtoa@l+3,___fltol@f1+3
  6713  00178A  EC1D  F01D         	call	___fltol	;wreg free
  6714  00178E  C003  F078         	movff	?___fltol,efgtoa@d
  6715  001792  C004  F079         	movff	?___fltol+1,efgtoa@d+1
  6716  001796                     
  6717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6718  001796  0100               	movlb	0	; () banked
  6719  001798  B9E5               	btfsc	_flags& (0+255),4,b
  6720  00179A  EFD1  F00B         	goto	u5111
  6721  00179E  EFD3  F00B         	goto	u5110
  6722  0017A2                     u5111:
  6723  0017A2  EFF0  F00B         	goto	l4798
  6724  0017A6                     u5110:
  6725  0017A6                     
  6726                           ; BSR set to: 0
  6727  0017A6  5178               	movf	efgtoa@d& (0+255),w,b
  6728  0017A8  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6729  0017AA  A4D8               	btfss	status,2,c
  6730  0017AC  EFDA  F00B         	goto	u5121
  6731  0017B0  EFDC  F00B         	goto	u5120
  6732  0017B4                     u5121:
  6733  0017B4  EFF0  F00B         	goto	l4798
  6734  0017B8                     u5120:
  6735  0017B8                     
  6736                           ; BSR set to: 0
  6737  0017B8  0E67               	movlw	103
  6738  0017BA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6739  0017BC  A4D8               	btfss	status,2,c
  6740  0017BE  EFE3  F00B         	goto	u5131
  6741  0017C2  EFE5  F00B         	goto	u5130
  6742  0017C6                     u5131:
  6743  0017C6  EFF0  F00B         	goto	l4798
  6744  0017CA                     u5130:
  6745  0017CA                     
  6746                           ; BSR set to: 0
  6747  0017CA  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6748  0017CC  EFEC  F00B         	goto	u5140
  6749  0017D0  EFEA  F00B         	goto	u5141
  6750  0017D4                     u5141:
  6751  0017D4  EFF0  F00B         	goto	l4798
  6752  0017D8                     u5140:
  6753  0017D8                     
  6754                           ; BSR set to: 0
  6755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  6756  0017D8  4B70               	infsnz	efgtoa@t& (0+255),f,b
  6757  0017DA  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  6758                           
  6759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  6760  0017DC  EF3A  F00C         	goto	l4826
  6761  0017E0                     l4798:
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  6765  0017E0  5172               	movf	efgtoa@pp& (0+255),w,b
  6766  0017E2  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6767  0017E4  A4D8               	btfss	status,2,c
  6768  0017E6  EFF7  F00B         	goto	u5151
  6769  0017EA  EFF9  F00B         	goto	u5150
  6770  0017EE                     u5151:
  6771  0017EE  EF23  F00C         	goto	l4818
  6772  0017F2                     u5150:
  6773  0017F2                     
  6774                           ; BSR set to: 0
  6775  0017F2  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6776  0017F4  EF00  F00C         	goto	u5160
  6777  0017F8  EFFE  F00B         	goto	u5161
  6778  0017FC                     u5161:
  6779  0017FC  EF23  F00C         	goto	l4818
  6780  001800                     u5160:
  6781  001800                     
  6782                           ; BSR set to: 0
  6783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  6784  001800  0E68               	movlw	low _dbuf
  6785  001802  2592               	addwf	efgtoa@n& (0+255),w,b
  6786  001804  6ED9               	movwf	fsr2l,c
  6787  001806  0E01               	movlw	high _dbuf
  6788  001808  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6789  00180A  6EDA               	movwf	fsr2h,c
  6790  00180C  0E2E               	movlw	46
  6791  00180E  6EDF               	movwf	indf2,c
  6792  001810                     
  6793                           ; BSR set to: 0
  6794  001810  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6795  001812  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6796  001814                     
  6797                           ; BSR set to: 0
  6798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  6799  001814  077F               	decf	efgtoa@w& (0+255),f,b
  6800  001816  A0D8               	btfss	status,0,c
  6801  001818  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6802  00181A                     
  6803                           ; BSR set to: 0
  6804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  6805  00181A  0E00               	movlw	0
  6806  00181C  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  6807  00181E  0E01               	movlw	1
  6808  001820  6F72               	movwf	efgtoa@pp& (0+255),b
  6809  001822  EF23  F00C         	goto	l4818
  6810  001826                     l4810:
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  6814  001826  0E68               	movlw	low _dbuf
  6815  001828  2592               	addwf	efgtoa@n& (0+255),w,b
  6816  00182A  6ED9               	movwf	fsr2l,c
  6817  00182C  0E01               	movlw	high _dbuf
  6818  00182E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6819  001830  6EDA               	movwf	fsr2h,c
  6820  001832  0E30               	movlw	48
  6821  001834  6EDF               	movwf	indf2,c
  6822  001836                     
  6823                           ; BSR set to: 0
  6824  001836  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6825  001838  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6826  00183A                     
  6827                           ; BSR set to: 0
  6828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  6829  00183A  077F               	decf	efgtoa@w& (0+255),f,b
  6830  00183C  A0D8               	btfss	status,0,c
  6831  00183E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6832  001840                     
  6833                           ; BSR set to: 0
  6834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  6835  001840  0770               	decf	efgtoa@t& (0+255),f,b
  6836  001842  A0D8               	btfss	status,0,c
  6837  001844  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  6838  001846                     l4818:
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  6842  001846  5170               	movf	efgtoa@t& (0+255),w,b
  6843  001848  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6844  00184A  A4D8               	btfss	status,2,c
  6845  00184C  EF2A  F00C         	goto	u5171
  6846  001850  EF2C  F00C         	goto	u5170
  6847  001854                     u5171:
  6848  001854  EF13  F00C         	goto	l4810
  6849  001858                     u5170:
  6850  001858                     
  6851                           ; BSR set to: 0
  6852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  6853  001858  0E68               	movlw	low _dbuf
  6854  00185A  2592               	addwf	efgtoa@n& (0+255),w,b
  6855  00185C  6ED9               	movwf	fsr2l,c
  6856  00185E  0E01               	movlw	high _dbuf
  6857  001860  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6858  001862  6EDA               	movwf	fsr2h,c
  6859  001864  5178               	movf	efgtoa@d& (0+255),w,b
  6860  001866  0F30               	addlw	48
  6861  001868  6EDF               	movwf	indf2,c
  6862  00186A                     
  6863                           ; BSR set to: 0
  6864  00186A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6865  00186C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6866  00186E                     
  6867                           ; BSR set to: 0
  6868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  6869  00186E  077F               	decf	efgtoa@w& (0+255),f,b
  6870  001870  A0D8               	btfss	status,0,c
  6871  001872  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6872  001874                     l4826:
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  6876  001874  C082  F02A         	movff	efgtoa@h,___flsub@b
  6877  001878  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  6878  00187C  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  6879  001880  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  6880  001884  C094  F015         	movff	efgtoa@u,___flmul@a
  6881  001888  C095  F016         	movff	efgtoa@u+1,___flmul@a+1
  6882  00188C  C096  F017         	movff	efgtoa@u+2,___flmul@a+2
  6883  001890  C097  F018         	movff	efgtoa@u+3,___flmul@a+3
  6884  001894  C086  F011         	movff	efgtoa@l,___flmul@b
  6885  001898  C087  F012         	movff	efgtoa@l+1,___flmul@b+1
  6886  00189C  C088  F013         	movff	efgtoa@l+2,___flmul@b+2
  6887  0018A0  C089  F014         	movff	efgtoa@l+3,___flmul@b+3
  6888  0018A4  EC76  F013         	call	___flmul	;wreg free
  6889  0018A8  C011  F02E         	movff	?___flmul,___flsub@a
  6890  0018AC  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  6891  0018B0  C013  F030         	movff	?___flmul+2,___flsub@a+2
  6892  0018B4  C014  F031         	movff	?___flmul+3,___flsub@a+3
  6893  0018B8  ECE5  F025         	call	___flsub	;wreg free
  6894  0018BC  C02A  F082         	movff	?___flsub,efgtoa@h
  6895  0018C0  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  6896  0018C4  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  6897  0018C8  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  6898  0018CC                     
  6899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  6900  0018CC  C094  F003         	movff	efgtoa@u,___fldiv@b
  6901  0018D0  C095  F004         	movff	efgtoa@u+1,___fldiv@b+1
  6902  0018D4  C096  F005         	movff	efgtoa@u+2,___fldiv@b+2
  6903  0018D8  C097  F006         	movff	efgtoa@u+3,___fldiv@b+3
  6904  0018DC  0E00               	movlw	0
  6905  0018DE  6E07               	movwf	___fldiv@a^0,c
  6906  0018E0  0E00               	movlw	0
  6907  0018E2  6E08               	movwf	(___fldiv@a+1)^0,c
  6908  0018E4  0E20               	movlw	32
  6909  0018E6  6E09               	movwf	(___fldiv@a+2)^0,c
  6910  0018E8  0E41               	movlw	65
  6911  0018EA  6E0A               	movwf	(___fldiv@a+3)^0,c
  6912  0018EC  EC8B  F015         	call	___fldiv	;wreg free
  6913  0018F0  C003  F094         	movff	?___fldiv,efgtoa@u
  6914  0018F4  C004  F095         	movff	?___fldiv+1,efgtoa@u+1
  6915  0018F8  C005  F096         	movff	?___fldiv+2,efgtoa@u+2
  6916  0018FC  C006  F097         	movff	?___fldiv+3,efgtoa@u+3
  6917  001900                     
  6918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  6919  001900  0100               	movlb	0	; () banked
  6920  001902  0776               	decf	efgtoa@ne& (0+255),f,b
  6921  001904  A0D8               	btfss	status,0,c
  6922  001906  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  6923  001908                     
  6924                           ; BSR set to: 0
  6925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  6926  001908  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  6927  00190A  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  6928  00190C                     l4834:
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  6932  00190C  5174               	movf	efgtoa@m& (0+255),w,b
  6933  00190E  5D8A               	subwf	efgtoa@i& (0+255),w,b
  6934  001910  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  6935  001912  0A80               	xorlw	128
  6936  001914  6E3D               	movwf	??_efgtoa^0,c
  6937  001916  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  6938  001918  0A80               	xorlw	128
  6939  00191A  583D               	subwfb	??_efgtoa^0,w,c
  6940  00191C  B0D8               	btfsc	status,0,c
  6941  00191E  EF93  F00C         	goto	u5181
  6942  001922  EF95  F00C         	goto	u5180
  6943  001926                     u5181:
  6944  001926  EFA3  F00C         	goto	l4838
  6945  00192A                     u5180:
  6946  00192A                     
  6947                           ; BSR set to: 0
  6948  00192A  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6949  00192C  EFA1  F00C         	goto	u5191
  6950  001930  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  6951  001932  E109               	bnz	u5190
  6952  001934  0E4B               	movlw	75
  6953  001936  5D92               	subwf	efgtoa@n& (0+255),w,b
  6954  001938  A0D8               	btfss	status,0,c
  6955  00193A  EFA1  F00C         	goto	u5191
  6956  00193E  EFA3  F00C         	goto	u5190
  6957  001942                     u5191:
  6958  001942  EF99  F00B         	goto	l4786
  6959  001946                     u5190:
  6960  001946                     l4838:
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  6964  001946  5172               	movf	efgtoa@pp& (0+255),w,b
  6965  001948  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6966  00194A  A4D8               	btfss	status,2,c
  6967  00194C  EFAA  F00C         	goto	u5201
  6968  001950  EFAC  F00C         	goto	u5200
  6969  001954                     u5201:
  6970  001954  EFBD  F00C         	goto	l4846
  6971  001958                     u5200:
  6972  001958                     
  6973                           ; BSR set to: 0
  6974  001958  A9E5               	btfss	_flags& (0+255),4,b
  6975  00195A  EFB1  F00C         	goto	u5211
  6976  00195E  EFB3  F00C         	goto	u5210
  6977  001962                     u5211:
  6978  001962  EFBD  F00C         	goto	l4846
  6979  001966                     u5210:
  6980  001966                     
  6981                           ; BSR set to: 0
  6982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  6983  001966  0E68               	movlw	low _dbuf
  6984  001968  2592               	addwf	efgtoa@n& (0+255),w,b
  6985  00196A  6ED9               	movwf	fsr2l,c
  6986  00196C  0E01               	movlw	high _dbuf
  6987  00196E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6988  001970  6EDA               	movwf	fsr2h,c
  6989  001972  0E2E               	movlw	46
  6990  001974  6EDF               	movwf	indf2,c
  6991  001976                     
  6992                           ; BSR set to: 0
  6993  001976  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6994  001978  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6995  00197A                     l4846:
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  6999  00197A  0E68               	movlw	low _dbuf
  7000  00197C  2592               	addwf	efgtoa@n& (0+255),w,b
  7001  00197E  6ED9               	movwf	fsr2l,c
  7002  001980  0E01               	movlw	high _dbuf
  7003  001982  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7004  001984  6EDA               	movwf	fsr2h,c
  7005  001986  0E00               	movlw	0
  7006  001988  6EDF               	movwf	indf2,c
  7007  00198A                     
  7008                           ; BSR set to: 0
  7009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  7010  00198A  0E65               	movlw	101
  7011  00198C  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  7012  00198E  A4D8               	btfss	status,2,c
  7013  001990  EFCC  F00C         	goto	u5221
  7014  001994  EFCE  F00C         	goto	u5220
  7015  001998                     u5221:
  7016  001998  EF7C  F008         	goto	l4658
  7017  00199C                     u5220:
  7018  00199C                     
  7019                           ; BSR set to: 0
  7020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  7021  00199C  0E00               	movlw	0
  7022  00199E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  7023  0019A0  0E4F               	movlw	79
  7024  0019A2  6F8A               	movwf	efgtoa@i& (0+255),b
  7025  0019A4                     
  7026                           ; BSR set to: 0
  7027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  7028  0019A4  0E68               	movlw	low _dbuf
  7029  0019A6  258A               	addwf	efgtoa@i& (0+255),w,b
  7030  0019A8  6ED9               	movwf	fsr2l,c
  7031  0019AA  0E01               	movlw	high _dbuf
  7032  0019AC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7033  0019AE  6EDA               	movwf	fsr2h,c
  7034  0019B0  0E00               	movlw	0
  7035  0019B2  6EDF               	movwf	indf2,c
  7036  0019B4                     
  7037                           ; BSR set to: 0
  7038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  7039  0019B4  0E00               	movlw	0
  7040  0019B6  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  7041  0019B8  0E00               	movlw	0
  7042  0019BA  6F7A               	movwf	efgtoa@sign& (0+255),b
  7043  0019BC                     
  7044                           ; BSR set to: 0
  7045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  7046  0019BC  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7047  0019BE  EFE5  F00C         	goto	u5230
  7048  0019C2  EFE3  F00C         	goto	u5231
  7049  0019C6                     u5231:
  7050  0019C6  EFED  F00C         	goto	l4862
  7051  0019CA                     u5230:
  7052  0019CA                     
  7053                           ; BSR set to: 0
  7054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  7055  0019CA  0E00               	movlw	0
  7056  0019CC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  7057  0019CE  0E01               	movlw	1
  7058  0019D0  6F7A               	movwf	efgtoa@sign& (0+255),b
  7059  0019D2                     
  7060                           ; BSR set to: 0
  7061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  7062  0019D2  6D90               	negf	efgtoa@e& (0+255),b
  7063  0019D4  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  7064  0019D6  B0D8               	btfsc	status,0,c
  7065  0019D8  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  7066  0019DA                     l4862:
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  7070  0019DA  0E00               	movlw	0
  7071  0019DC  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  7072  0019DE  0E02               	movlw	2
  7073  0019E0  6F7C               	movwf	efgtoa@p& (0+255),b
  7074                           
  7075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  7076  0019E2  EF1E  F00D         	goto	l4874
  7077  0019E6                     l4864:
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  7081  0019E6  078A               	decf	efgtoa@i& (0+255),f,b
  7082  0019E8  A0D8               	btfss	status,0,c
  7083  0019EA  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  7084  0019EC                     
  7085                           ; BSR set to: 0
  7086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  7087  0019EC  0E68               	movlw	low _dbuf
  7088  0019EE  258A               	addwf	efgtoa@i& (0+255),w,b
  7089  0019F0  6ED9               	movwf	fsr2l,c
  7090  0019F2  0E01               	movlw	high _dbuf
  7091  0019F4  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7092  0019F6  6EDA               	movwf	fsr2h,c
  7093  0019F8  C090  F003         	movff	efgtoa@e,___awmod@dividend
  7094  0019FC  C091  F004         	movff	efgtoa@e+1,___awmod@dividend+1
  7095  001A00  0E00               	movlw	0
  7096  001A02  6E06               	movwf	(___awmod@divisor+1)^0,c
  7097  001A04  0E0A               	movlw	10
  7098  001A06  6E05               	movwf	___awmod@divisor^0,c
  7099  001A08  EC0D  F022         	call	___awmod	;wreg free
  7100  001A0C  5003               	movf	?___awmod^0,w,c
  7101  001A0E  0F30               	addlw	48
  7102  001A10  6EDF               	movwf	indf2,c
  7103  001A12                     
  7104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  7105  001A12  C090  F003         	movff	efgtoa@e,___awdiv@dividend
  7106  001A16  C091  F004         	movff	efgtoa@e+1,___awdiv@dividend+1
  7107  001A1A  0E00               	movlw	0
  7108  001A1C  6E06               	movwf	(___awdiv@divisor+1)^0,c
  7109  001A1E  0E0A               	movlw	10
  7110  001A20  6E05               	movwf	___awdiv@divisor^0,c
  7111  001A22  ECAB  F021         	call	___awdiv	;wreg free
  7112  001A26  C003  F090         	movff	?___awdiv,efgtoa@e
  7113  001A2A  C004  F091         	movff	?___awdiv+1,efgtoa@e+1
  7114  001A2E                     
  7115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  7116  001A2E  0100               	movlb	0	; () banked
  7117  001A30  077C               	decf	efgtoa@p& (0+255),f,b
  7118  001A32  A0D8               	btfss	status,0,c
  7119  001A34  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  7120  001A36                     
  7121                           ; BSR set to: 0
  7122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  7123  001A36  077F               	decf	efgtoa@w& (0+255),f,b
  7124  001A38  A0D8               	btfss	status,0,c
  7125  001A3A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  7126  001A3C                     l4874:
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  7130  001A3C  5190               	movf	efgtoa@e& (0+255),w,b
  7131  001A3E  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7132  001A40  A4D8               	btfss	status,2,c
  7133  001A42  EF25  F00D         	goto	u5241
  7134  001A46  EF27  F00D         	goto	u5240
  7135  001A4A                     u5241:
  7136  001A4A  EFF3  F00C         	goto	l4864
  7137  001A4E                     u5240:
  7138  001A4E                     
  7139                           ; BSR set to: 0
  7140  001A4E  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7141  001A50  EF34  F00D         	goto	u5250
  7142  001A54  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  7143  001A56  E106               	bnz	u5251
  7144  001A58  057C               	decf	efgtoa@p& (0+255),w,b
  7145  001A5A  B0D8               	btfsc	status,0,c
  7146  001A5C  EF32  F00D         	goto	u5251
  7147  001A60  EF34  F00D         	goto	u5250
  7148  001A64                     u5251:
  7149  001A64  EFF3  F00C         	goto	l4864
  7150  001A68                     u5250:
  7151  001A68                     
  7152                           ; BSR set to: 0
  7153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  7154  001A68  078A               	decf	efgtoa@i& (0+255),f,b
  7155  001A6A  A0D8               	btfss	status,0,c
  7156  001A6C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  7157  001A6E                     
  7158                           ; BSR set to: 0
  7159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  7160  001A6E  517A               	movf	efgtoa@sign& (0+255),w,b
  7161  001A70  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7162  001A72  A4D8               	btfss	status,2,c
  7163  001A74  EF3E  F00D         	goto	u5261
  7164  001A78  EF40  F00D         	goto	u5260
  7165  001A7C                     u5261:
  7166  001A7C  EF46  F00D         	goto	l4884
  7167  001A80                     u5260:
  7168  001A80                     
  7169                           ; BSR set to: 0
  7170  001A80  0E00               	movlw	0
  7171  001A82  6F6B               	movwf	(_efgtoa$1172+1)& (0+255),b
  7172  001A84  0E2B               	movlw	43
  7173  001A86  6F6A               	movwf	_efgtoa$1172& (0+255),b
  7174  001A88  EF4A  F00D         	goto	l4886
  7175  001A8C                     l4884:
  7176                           
  7177                           ; BSR set to: 0
  7178  001A8C  0E00               	movlw	0
  7179  001A8E  6F6B               	movwf	(_efgtoa$1172+1)& (0+255),b
  7180  001A90  0E2D               	movlw	45
  7181  001A92  6F6A               	movwf	_efgtoa$1172& (0+255),b
  7182  001A94                     l4886:
  7183                           
  7184                           ; BSR set to: 0
  7185  001A94  0E68               	movlw	low _dbuf
  7186  001A96  258A               	addwf	efgtoa@i& (0+255),w,b
  7187  001A98  6ED9               	movwf	fsr2l,c
  7188  001A9A  0E01               	movlw	high _dbuf
  7189  001A9C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7190  001A9E  6EDA               	movwf	fsr2h,c
  7191  001AA0  C06A  FFDF         	movff	_efgtoa$1172,indf2
  7192  001AA4                     
  7193                           ; BSR set to: 0
  7194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  7195  001AA4  077F               	decf	efgtoa@w& (0+255),f,b
  7196  001AA6  A0D8               	btfss	status,0,c
  7197  001AA8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  7198  001AAA                     
  7199                           ; BSR set to: 0
  7200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7201  001AAA  078A               	decf	efgtoa@i& (0+255),f,b
  7202  001AAC  A0D8               	btfss	status,0,c
  7203  001AAE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  7204  001AB0                     
  7205                           ; BSR set to: 0
  7206  001AB0  0EBF               	movlw	191
  7207  001AB2  6E3D               	movwf	??_efgtoa^0,c
  7208  001AB4  0EFF               	movlw	255
  7209  001AB6  6E3E               	movwf	(??_efgtoa+1)^0,c
  7210  001AB8  503C               	movf	efgtoa@c^0,w,c
  7211  001ABA  6E3F               	movwf	(??_efgtoa+2)^0,c
  7212  001ABC  6A40               	clrf	(??_efgtoa+3)^0,c
  7213  001ABE  503D               	movf	??_efgtoa^0,w,c
  7214  001AC0  263F               	addwf	(??_efgtoa+2)^0,f,c
  7215  001AC2  503E               	movf	(??_efgtoa+1)^0,w,c
  7216  001AC4  2240               	addwfc	(??_efgtoa+3)^0,f,c
  7217  001AC6  5040               	movf	(??_efgtoa+3)^0,w,c
  7218  001AC8  E10A               	bnz	u5270
  7219  001ACA  0E1A               	movlw	26
  7220  001ACC  5C3F               	subwf	(??_efgtoa+2)^0,w,c
  7221  001ACE  A0D8               	btfss	status,0,c
  7222  001AD0  EF6C  F00D         	goto	u5271
  7223  001AD4  EF6F  F00D         	goto	u5270
  7224  001AD8                     u5271:
  7225  001AD8  0E01               	movlw	1
  7226  001ADA  EF70  F00D         	goto	u5280
  7227  001ADE                     u5270:
  7228  001ADE  0E00               	movlw	0
  7229  001AE0                     u5280:
  7230  001AE0  6F6E               	movwf	_efgtoa$1174& (0+255),b
  7231  001AE2  6B6F               	clrf	(_efgtoa$1174+1)& (0+255),b
  7232  001AE4                     
  7233                           ; BSR set to: 0
  7234  001AE4  516E               	movf	_efgtoa$1174& (0+255),w,b
  7235  001AE6  116F               	iorwf	(_efgtoa$1174+1)& (0+255),w,b
  7236  001AE8  A4D8               	btfss	status,2,c
  7237  001AEA  EF79  F00D         	goto	u5291
  7238  001AEE  EF7B  F00D         	goto	u5290
  7239  001AF2                     u5291:
  7240  001AF2  EF81  F00D         	goto	l4900
  7241  001AF6                     u5290:
  7242  001AF6                     
  7243                           ; BSR set to: 0
  7244  001AF6  0E00               	movlw	0
  7245  001AF8  6F6D               	movwf	(_efgtoa$1173+1)& (0+255),b
  7246  001AFA  0E65               	movlw	101
  7247  001AFC  6F6C               	movwf	_efgtoa$1173& (0+255),b
  7248  001AFE  EF85  F00D         	goto	l4902
  7249  001B02                     l4900:
  7250                           
  7251                           ; BSR set to: 0
  7252  001B02  0E00               	movlw	0
  7253  001B04  6F6D               	movwf	(_efgtoa$1173+1)& (0+255),b
  7254  001B06  0E45               	movlw	69
  7255  001B08  6F6C               	movwf	_efgtoa$1173& (0+255),b
  7256  001B0A                     l4902:
  7257                           
  7258                           ; BSR set to: 0
  7259  001B0A  0E68               	movlw	low _dbuf
  7260  001B0C  258A               	addwf	efgtoa@i& (0+255),w,b
  7261  001B0E  6ED9               	movwf	fsr2l,c
  7262  001B10  0E01               	movlw	high _dbuf
  7263  001B12  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7264  001B14  6EDA               	movwf	fsr2h,c
  7265  001B16  C06C  FFDF         	movff	_efgtoa$1173,indf2
  7266  001B1A                     
  7267                           ; BSR set to: 0
  7268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  7269  001B1A  077F               	decf	efgtoa@w& (0+255),f,b
  7270  001B1C  A0D8               	btfss	status,0,c
  7271  001B1E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  7272  001B20                     
  7273                           ; BSR set to: 0
  7274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  7275  001B20  0E68               	movlw	low _dbuf
  7276  001B22  2592               	addwf	efgtoa@n& (0+255),w,b
  7277  001B24  6E03               	movwf	strcpy@dest^0,c
  7278  001B26  0E01               	movlw	high _dbuf
  7279  001B28  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7280  001B2A  6E04               	movwf	(strcpy@dest+1)^0,c
  7281  001B2C  0E68               	movlw	low _dbuf
  7282  001B2E  258A               	addwf	efgtoa@i& (0+255),w,b
  7283  001B30  6E05               	movwf	strcpy@src^0,c
  7284  001B32  0E01               	movlw	high _dbuf
  7285  001B34  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7286  001B36  6E06               	movwf	(strcpy@src+1)^0,c
  7287  001B38  EC0A  F025         	call	_strcpy	;wreg free
  7288  001B3C  EF7C  F008         	goto	l4658
  7289  001B40                     l665:
  7290  001B40  0012               	return		;funcret
  7291  001B42                     __end_of_efgtoa:
  7292                           	opt callstack 0
  7293                           
  7294 ;; *************** function _tolower *****************
  7295 ;; Defined at:
  7296 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  c               2    8[COMRAM] int 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;		None
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  2    8[COMRAM] int 
  7303 ;; Registers used:
  7304 ;;		wreg, status,2, status,0
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7312 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7313 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7314 ;;Total ram usage:        8 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:    4
  7317 ;; This function calls:
  7318 ;;		_isupper
  7319 ;; This function is called by:
  7320 ;;		_efgtoa
  7321 ;;		_vfpfcnvrt
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text37
  7326  0049B4                     __ptext37:
  7327                           	opt callstack 0
  7328  0049B4                     _tolower:
  7329                           	opt callstack 21
  7330  0049B4  0EBF               	movlw	191
  7331  0049B6  6E0B               	movwf	??_tolower^0,c
  7332  0049B8  0EFF               	movlw	255
  7333  0049BA  6E0C               	movwf	(??_tolower+1)^0,c
  7334  0049BC  C009  F00D         	movff	tolower@c,??_tolower+2
  7335  0049C0  C00A  F00E         	movff	tolower@c+1,??_tolower+3
  7336  0049C4  500B               	movf	??_tolower^0,w,c
  7337  0049C6  260D               	addwf	(??_tolower+2)^0,f,c
  7338  0049C8  500C               	movf	(??_tolower+1)^0,w,c
  7339  0049CA  220E               	addwfc	(??_tolower+3)^0,f,c
  7340  0049CC  500E               	movf	(??_tolower+3)^0,w,c
  7341  0049CE  E10A               	bnz	u3840
  7342  0049D0  0E1A               	movlw	26
  7343  0049D2  5C0D               	subwf	(??_tolower+2)^0,w,c
  7344  0049D4  A0D8               	btfss	status,0,c
  7345  0049D6  EFEF  F024         	goto	u3841
  7346  0049DA  EFF2  F024         	goto	u3840
  7347  0049DE                     u3841:
  7348  0049DE  0E01               	movlw	1
  7349  0049E0  EFF3  F024         	goto	u3850
  7350  0049E4                     u3840:
  7351  0049E4  0E00               	movlw	0
  7352  0049E6                     u3850:
  7353  0049E6  6E0F               	movwf	_tolower$1787^0,c
  7354  0049E8  6A10               	clrf	(_tolower$1787+1)^0,c
  7355  0049EA  500F               	movf	_tolower$1787^0,w,c
  7356  0049EC  1010               	iorwf	(_tolower$1787+1)^0,w,c
  7357  0049EE  B4D8               	btfsc	status,2,c
  7358  0049F0  EFFC  F024         	goto	u3861
  7359  0049F4  EFFE  F024         	goto	u3860
  7360  0049F8                     u3861:
  7361  0049F8  EF05  F025         	goto	l1612
  7362  0049FC                     u3860:
  7363  0049FC  0E20               	movlw	32
  7364  0049FE  1009               	iorwf	tolower@c^0,w,c
  7365  004A00  6E09               	movwf	?_tolower^0,c
  7366  004A02  500A               	movf	(tolower@c+1)^0,w,c
  7367  004A04  6E0A               	movwf	(?_tolower+1)^0,c
  7368  004A06  EF09  F025         	goto	l1617
  7369  004A0A                     l1612:
  7370  004A0A  C009  F009         	movff	tolower@c,?_tolower
  7371  004A0E  C00A  F00A         	movff	tolower@c+1,?_tolower+1
  7372  004A12                     l1617:
  7373  004A12  0012               	return		;funcret
  7374  004A14                     __end_of_tolower:
  7375                           	opt callstack 0
  7376                           
  7377 ;; *************** function _isupper *****************
  7378 ;; Defined at:
  7379 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  c               2    2[COMRAM] int 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;		None
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  2    2[COMRAM] int 
  7386 ;; Registers used:
  7387 ;;		wreg, status,2, status,0
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7393 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7395 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7396 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7397 ;;Total ram usage:        6 bytes
  7398 ;; Hardware stack levels used:    1
  7399 ;; Hardware stack levels required when called:    3
  7400 ;; This function calls:
  7401 ;;		Nothing
  7402 ;; This function is called by:
  7403 ;;		_efgtoa
  7404 ;;		_vfpfcnvrt
  7405 ;;		_tolower
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text38
  7410  004D8A                     __ptext38:
  7411                           	opt callstack 0
  7412  004D8A                     _isupper:
  7413                           	opt callstack 21
  7414  004D8A  0EBF               	movlw	191
  7415  004D8C  6E05               	movwf	??_isupper^0,c
  7416  004D8E  0EFF               	movlw	255
  7417  004D90  6E06               	movwf	(??_isupper+1)^0,c
  7418  004D92  C003  F007         	movff	isupper@c,??_isupper+2
  7419  004D96  C004  F008         	movff	isupper@c+1,??_isupper+3
  7420  004D9A  5005               	movf	??_isupper^0,w,c
  7421  004D9C  2607               	addwf	(??_isupper+2)^0,f,c
  7422  004D9E  5006               	movf	(??_isupper+1)^0,w,c
  7423  004DA0  2208               	addwfc	(??_isupper+3)^0,f,c
  7424  004DA2  5008               	movf	(??_isupper+3)^0,w,c
  7425  004DA4  E10A               	bnz	u3260
  7426  004DA6  0E1A               	movlw	26
  7427  004DA8  5C07               	subwf	(??_isupper+2)^0,w,c
  7428  004DAA  A0D8               	btfss	status,0,c
  7429  004DAC  EFDA  F026         	goto	u3261
  7430  004DB0  EFDD  F026         	goto	u3260
  7431  004DB4                     u3261:
  7432  004DB4  0E01               	movlw	1
  7433  004DB6  EFDE  F026         	goto	u3270
  7434  004DBA                     u3260:
  7435  004DBA  0E00               	movlw	0
  7436  004DBC                     u3270:
  7437  004DBC  6E03               	movwf	?_isupper^0,c
  7438  004DBE  6A04               	clrf	(?_isupper+1)^0,c
  7439  004DC0  0012               	return		;funcret
  7440  004DC2                     __end_of_isupper:
  7441                           	opt callstack 0
  7442                           
  7443 ;; *************** function _strcpy *****************
  7444 ;; Defined at:
  7445 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  dest            2    2[COMRAM] PTR unsigned char 
  7448 ;;		 -> dbuf(80), 
  7449 ;;  src             2    4[COMRAM] PTR const unsigned char 
  7450 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  7451 ;;		 -> dbuf(80), 
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;  d               2   10[COMRAM] PTR unsigned char 
  7454 ;;		 -> dbuf(80), 
  7455 ;;  s               2    8[COMRAM] PTR const unsigned char 
  7456 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  7457 ;;		 -> dbuf(80), 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  2    2[COMRAM] PTR unsigned char 
  7460 ;; Registers used:
  7461 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7467 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7468 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7469 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7470 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7471 ;;Total ram usage:       10 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    3
  7474 ;; This function calls:
  7475 ;;		Nothing
  7476 ;; This function is called by:
  7477 ;;		_efgtoa
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text39
  7482  004A14                     __ptext39:
  7483                           	opt callstack 0
  7484  004A14                     _strcpy:
  7485                           	opt callstack 21
  7486  004A14  C005  F009         	movff	strcpy@src,strcpy@s
  7487  004A18  C006  F00A         	movff	strcpy@src+1,strcpy@s+1
  7488  004A1C  C003  F00B         	movff	strcpy@dest,strcpy@d
  7489  004A20  C004  F00C         	movff	strcpy@dest+1,strcpy@d+1
  7490  004A24                     l4042:
  7491  004A24  5009               	movf	strcpy@s^0,w,c
  7492  004A26  6E07               	movwf	??_strcpy^0,c
  7493  004A28  500A               	movf	(strcpy@s+1)^0,w,c
  7494  004A2A  6E08               	movwf	(??_strcpy+1)^0,c
  7495  004A2C  4A09               	infsnz	strcpy@s^0,f,c
  7496  004A2E  2A0A               	incf	(strcpy@s+1)^0,f,c
  7497  004A30  C007  FFF6         	movff	??_strcpy,tblptrl
  7498  004A34  C008  FFF7         	movff	??_strcpy+1,tblptrh
  7499  004A38  0E00               	movlw	low (__smallconst shr (0+16))
  7500  004A3A  6EF8               	movwf	tblptru,c
  7501  004A3C  C00B  FFD9         	movff	strcpy@d,fsr2l
  7502  004A40  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  7503  004A44  4A0B               	infsnz	strcpy@d^0,f,c
  7504  004A46  2A0C               	incf	(strcpy@d+1)^0,f,c
  7505  004A48  0E0E               	movlw	(high __ramtop+-1)
  7506  004A4A  64F7               	cpfsgt	tblptrh,c
  7507  004A4C  D003               	bra	u3827
  7508  004A4E  0008               	tblrd		*
  7509  004A50  50F5               	movf	tablat,w,c
  7510  004A52  D005               	bra	u3820
  7511  004A54                     u3827:
  7512  004A54  CFF6 FFE9          	movff	tblptrl,fsr0l
  7513  004A58  CFF7 FFEA          	movff	tblptrh,fsr0h
  7514  004A5C  50EF               	movf	indf0,w,c
  7515  004A5E                     u3820:
  7516  004A5E  6EDF               	movwf	indf2,c
  7517  004A60  50DF               	movf	indf2,w,c
  7518  004A62  A4D8               	btfss	status,2,c
  7519  004A64  EF36  F025         	goto	u3831
  7520  004A68  EF38  F025         	goto	u3830
  7521  004A6C                     u3831:
  7522  004A6C  EF12  F025         	goto	l4042
  7523  004A70                     u3830:
  7524  004A70  0012               	return		;funcret
  7525  004A72                     __end_of_strcpy:
  7526                           	opt callstack 0
  7527                           
  7528 ;; *************** function _pad *****************
  7529 ;; Defined at:
  7530 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  7533 ;;		 -> sprintf@f(6), 
  7534 ;;  buf             2   20[COMRAM] PTR unsigned char 
  7535 ;;		 -> dbuf(80), 
  7536 ;;  p               2   22[COMRAM] int 
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;  w               2   27[COMRAM] int 
  7539 ;;  i               2   25[COMRAM] int 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  2   18[COMRAM] int 
  7542 ;; Registers used:
  7543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7549 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7550 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7552 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7553 ;;Total ram usage:       11 bytes
  7554 ;; Hardware stack levels used:    1
  7555 ;; Hardware stack levels required when called:    6
  7556 ;; This function calls:
  7557 ;;		_fputc
  7558 ;;		_fputs
  7559 ;;		_strlen
  7560 ;; This function is called by:
  7561 ;;		_efgtoa
  7562 ;;		_utoa
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           	psect	text40
  7567  004290                     __ptext40:
  7568                           	opt callstack 0
  7569  004290                     _pad:
  7570                           	opt callstack 18
  7571  004290                     
  7572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7573  004290  0100               	movlb	0	; () banked
  7574  004292  A1E5               	btfss	_flags& (0+255),0,b
  7575  004294  EF4E  F021         	goto	u3711
  7576  004298  EF50  F021         	goto	u3710
  7577  00429C                     u3711:
  7578  00429C  EF5A  F021         	goto	l4000
  7579  0042A0                     u3710:
  7580  0042A0                     
  7581                           ; BSR set to: 0
  7582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7583  0042A0  C015  F00C         	movff	pad@buf,fputs@s
  7584  0042A4  C016  F00D         	movff	pad@buf+1,fputs@s+1
  7585  0042A8  C013  F00E         	movff	pad@fp,fputs@fp
  7586  0042AC  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  7587  0042B0  EC08  F026         	call	_fputs	;wreg free
  7588  0042B4                     l4000:
  7589                           
  7590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7591  0042B4  BE18               	btfsc	(pad@p+1)^0,7,c
  7592  0042B6  EF5F  F021         	goto	u3721
  7593  0042BA  EF61  F021         	goto	u3720
  7594  0042BE                     u3721:
  7595  0042BE  EF67  F021         	goto	l4004
  7596  0042C2                     u3720:
  7597  0042C2  C017  F01C         	movff	pad@p,pad@w
  7598  0042C6  C018  F01D         	movff	pad@p+1,pad@w+1
  7599  0042CA  EF6B  F021         	goto	l642
  7600  0042CE                     l4004:
  7601  0042CE  0E00               	movlw	0
  7602  0042D0  6E1D               	movwf	(pad@w+1)^0,c
  7603  0042D2  0E00               	movlw	0
  7604  0042D4  6E1C               	movwf	pad@w^0,c
  7605  0042D6                     l642:
  7606                           
  7607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7608  0042D6  0E00               	movlw	0
  7609  0042D8  6E1B               	movwf	(pad@i+1)^0,c
  7610  0042DA  0E00               	movlw	0
  7611  0042DC  6E1A               	movwf	pad@i^0,c
  7612                           
  7613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7614  0042DE  EF7D  F021         	goto	l4010
  7615  0042E2                     l4006:
  7616                           
  7617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7618  0042E2  0E00               	movlw	0
  7619  0042E4  6E04               	movwf	(fputc@c+1)^0,c
  7620  0042E6  0E20               	movlw	32
  7621  0042E8  6E03               	movwf	fputc@c^0,c
  7622  0042EA  C013  F005         	movff	pad@fp,fputc@fp
  7623  0042EE  C014  F006         	movff	pad@fp+1,fputc@fp+1
  7624  0042F2  ECE3  F020         	call	_fputc	;wreg free
  7625  0042F6                     
  7626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  7627  0042F6  4A1A               	infsnz	pad@i^0,f,c
  7628  0042F8  2A1B               	incf	(pad@i+1)^0,f,c
  7629  0042FA                     l4010:
  7630                           
  7631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7632  0042FA  501C               	movf	pad@w^0,w,c
  7633  0042FC  5C1A               	subwf	pad@i^0,w,c
  7634  0042FE  501B               	movf	(pad@i+1)^0,w,c
  7635  004300  0A80               	xorlw	128
  7636  004302  6E19               	movwf	??_pad^0,c
  7637  004304  501D               	movf	(pad@w+1)^0,w,c
  7638  004306  0A80               	xorlw	128
  7639  004308  5819               	subwfb	??_pad^0,w,c
  7640  00430A  A0D8               	btfss	status,0,c
  7641  00430C  EF8A  F021         	goto	u3731
  7642  004310  EF8C  F021         	goto	u3730
  7643  004314                     u3731:
  7644  004314  EF71  F021         	goto	l4006
  7645  004318                     u3730:
  7646  004318                     
  7647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7648  004318  0100               	movlb	0	; () banked
  7649  00431A  B1E5               	btfsc	_flags& (0+255),0,b
  7650  00431C  EF92  F021         	goto	u3741
  7651  004320  EF94  F021         	goto	u3740
  7652  004324                     u3741:
  7653  004324  EF9E  F021         	goto	l4014
  7654  004328                     u3740:
  7655  004328                     
  7656                           ; BSR set to: 0
  7657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7658  004328  C015  F00C         	movff	pad@buf,fputs@s
  7659  00432C  C016  F00D         	movff	pad@buf+1,fputs@s+1
  7660  004330  C013  F00E         	movff	pad@fp,fputs@fp
  7661  004334  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  7662  004338  EC08  F026         	call	_fputs	;wreg free
  7663  00433C                     l4014:
  7664                           
  7665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7666  00433C  C015  F003         	movff	pad@buf,strlen@s
  7667  004340  C016  F004         	movff	pad@buf+1,strlen@s+1
  7668  004344  EC50  F027         	call	_strlen	;wreg free
  7669  004348  501C               	movf	pad@w^0,w,c
  7670  00434A  2403               	addwf	?_strlen^0,w,c
  7671  00434C  6E13               	movwf	?_pad^0,c
  7672  00434E  501D               	movf	(pad@w+1)^0,w,c
  7673  004350  2004               	addwfc	(?_strlen+1)^0,w,c
  7674  004352  6E14               	movwf	(?_pad+1)^0,c
  7675  004354  0012               	return		;funcret
  7676  004356                     __end_of_pad:
  7677                           	opt callstack 0
  7678                           
  7679 ;; *************** function _strlen *****************
  7680 ;; Defined at:
  7681 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  s               2    2[COMRAM] PTR const unsigned char 
  7684 ;;		 -> dbuf(80), 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  a               2    4[COMRAM] PTR const unsigned char 
  7687 ;;		 -> dbuf(80), 
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  2    2[COMRAM] unsigned int 
  7690 ;; Registers used:
  7691 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7698 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7700 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7701 ;;Total ram usage:        4 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; Hardware stack levels required when called:    3
  7704 ;; This function calls:
  7705 ;;		Nothing
  7706 ;; This function is called by:
  7707 ;;		_pad
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text41
  7712  004EA0                     __ptext41:
  7713                           	opt callstack 0
  7714  004EA0                     _strlen:
  7715                           	opt callstack 20
  7716  004EA0  C003  F005         	movff	strlen@s,strlen@a
  7717  004EA4  C004  F006         	movff	strlen@s+1,strlen@a+1
  7718  004EA8  EF58  F027         	goto	l3776
  7719  004EAC                     l3774:
  7720  004EAC  4A03               	infsnz	strlen@s^0,f,c
  7721  004EAE  2A04               	incf	(strlen@s+1)^0,f,c
  7722  004EB0                     l3776:
  7723  004EB0  C003  FFD9         	movff	strlen@s,fsr2l
  7724  004EB4  C004  FFDA         	movff	strlen@s+1,fsr2h
  7725  004EB8  50DF               	movf	indf2,w,c
  7726  004EBA  A4D8               	btfss	status,2,c
  7727  004EBC  EF62  F027         	goto	u3251
  7728  004EC0  EF64  F027         	goto	u3250
  7729  004EC4                     u3251:
  7730  004EC4  EF56  F027         	goto	l3774
  7731  004EC8                     u3250:
  7732  004EC8  5005               	movf	strlen@a^0,w,c
  7733  004ECA  5C03               	subwf	strlen@s^0,w,c
  7734  004ECC  6E03               	movwf	?_strlen^0,c
  7735  004ECE  5006               	movf	(strlen@a+1)^0,w,c
  7736  004ED0  5804               	subwfb	(strlen@s+1)^0,w,c
  7737  004ED2  6E04               	movwf	(?_strlen+1)^0,c
  7738  004ED4  0012               	return		;funcret
  7739  004ED6                     __end_of_strlen:
  7740                           	opt callstack 0
  7741                           
  7742 ;; *************** function _fputs *****************
  7743 ;; Defined at:
  7744 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  s               2   11[COMRAM] PTR const unsigned char 
  7747 ;;		 -> dbuf(80), 
  7748 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  7749 ;;		 -> sprintf@f(6), 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  i               2   16[COMRAM] int 
  7752 ;;  c               1   15[COMRAM] unsigned char 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  2   11[COMRAM] int 
  7755 ;; Registers used:
  7756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7763 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7765 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7766 ;;Total ram usage:        7 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; Hardware stack levels required when called:    5
  7769 ;; This function calls:
  7770 ;;		_fputc
  7771 ;; This function is called by:
  7772 ;;		_pad
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text42
  7777  004C10                     __ptext42:
  7778                           	opt callstack 0
  7779  004C10                     _fputs:
  7780                           	opt callstack 18
  7781  004C10  0E00               	movlw	0
  7782  004C12  6E12               	movwf	(fputs@i+1)^0,c
  7783  004C14  0E00               	movlw	0
  7784  004C16  6E11               	movwf	fputs@i^0,c
  7785  004C18  EF19  F026         	goto	l3770
  7786  004C1C                     l3766:
  7787  004C1C  C010  F003         	movff	fputs@c,fputc@c
  7788  004C20  6A04               	clrf	(fputc@c+1)^0,c
  7789  004C22  C00E  F005         	movff	fputs@fp,fputc@fp
  7790  004C26  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  7791  004C2A  ECE3  F020         	call	_fputc	;wreg free
  7792  004C2E  4A11               	infsnz	fputs@i^0,f,c
  7793  004C30  2A12               	incf	(fputs@i+1)^0,f,c
  7794  004C32                     l3770:
  7795  004C32  5011               	movf	fputs@i^0,w,c
  7796  004C34  240C               	addwf	fputs@s^0,w,c
  7797  004C36  6ED9               	movwf	fsr2l,c
  7798  004C38  5012               	movf	(fputs@i+1)^0,w,c
  7799  004C3A  200D               	addwfc	(fputs@s+1)^0,w,c
  7800  004C3C  6EDA               	movwf	fsr2h,c
  7801  004C3E  50DF               	movf	indf2,w,c
  7802  004C40  6E10               	movwf	fputs@c^0,c
  7803  004C42  5010               	movf	fputs@c^0,w,c
  7804  004C44  A4D8               	btfss	status,2,c
  7805  004C46  EF27  F026         	goto	u3241
  7806  004C4A  EF29  F026         	goto	u3240
  7807  004C4E                     u3241:
  7808  004C4E  EF0E  F026         	goto	l3766
  7809  004C52                     u3240:
  7810  004C52  0012               	return		;funcret
  7811  004C54                     __end_of_fputs:
  7812                           	opt callstack 0
  7813                           
  7814 ;; *************** function _fputc *****************
  7815 ;; Defined at:
  7816 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;  c               2    2[COMRAM] int 
  7819 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  7820 ;;		 -> sprintf@f(6), 
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;		None
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  2    2[COMRAM] int 
  7825 ;; Registers used:
  7826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7834 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7836 ;;Total ram usage:        9 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; Hardware stack levels required when called:    4
  7839 ;; This function calls:
  7840 ;;		_putch
  7841 ;; This function is called by:
  7842 ;;		_pad
  7843 ;;		_vfpfcnvrt
  7844 ;;		_fputs
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text43
  7849  0041C6                     __ptext43:
  7850                           	opt callstack 0
  7851  0041C6                     _fputc:
  7852                           	opt callstack 18
  7853  0041C6  5005               	movf	fputc@fp^0,w,c
  7854  0041C8  1006               	iorwf	(fputc@fp+1)^0,w,c
  7855  0041CA  B4D8               	btfsc	status,2,c
  7856  0041CC  EFEA  F020         	goto	u3201
  7857  0041D0  EFEC  F020         	goto	u3200
  7858  0041D4                     u3201:
  7859  0041D4  EFF5  F020         	goto	l3754
  7860  0041D8                     u3200:
  7861  0041D8  5005               	movf	fputc@fp^0,w,c
  7862  0041DA  1006               	iorwf	(fputc@fp+1)^0,w,c
  7863  0041DC  A4D8               	btfss	status,2,c
  7864  0041DE  EFF3  F020         	goto	u3211
  7865  0041E2  EFF5  F020         	goto	u3210
  7866  0041E6                     u3211:
  7867  0041E6  EFFA  F020         	goto	l3756
  7868  0041EA                     u3210:
  7869  0041EA                     l3754:
  7870  0041EA  5003               	movf	fputc@c^0,w,c
  7871  0041EC  EC6B  F028         	call	_putch
  7872  0041F0  EF47  F021         	goto	l1568
  7873  0041F4                     l3756:
  7874  0041F4  EE20 F004          	lfsr	2,4
  7875  0041F8  5005               	movf	fputc@fp^0,w,c
  7876  0041FA  26D9               	addwf	fsr2l,f,c
  7877  0041FC  5006               	movf	(fputc@fp+1)^0,w,c
  7878  0041FE  22DA               	addwfc	fsr2h,f,c
  7879  004200  50DE               	movf	postinc2,w,c
  7880  004202  10DE               	iorwf	postinc2,w,c
  7881  004204  B4D8               	btfsc	status,2,c
  7882  004206  EF07  F021         	goto	u3221
  7883  00420A  EF09  F021         	goto	u3220
  7884  00420E                     u3221:
  7885  00420E  EF24  F021         	goto	l3760
  7886  004212                     u3220:
  7887  004212  EE20 F004          	lfsr	2,4
  7888  004216  5005               	movf	fputc@fp^0,w,c
  7889  004218  26D9               	addwf	fsr2l,f,c
  7890  00421A  5006               	movf	(fputc@fp+1)^0,w,c
  7891  00421C  22DA               	addwfc	fsr2h,f,c
  7892  00421E  EE10 F002          	lfsr	1,2
  7893  004222  5005               	movf	fputc@fp^0,w,c
  7894  004224  26E1               	addwf	fsr1l,f,c
  7895  004226  5006               	movf	(fputc@fp+1)^0,w,c
  7896  004228  22E2               	addwfc	fsr1h,f,c
  7897  00422A  50DE               	movf	postinc2,w,c
  7898  00422C  5CE6               	subwf	postinc1,w,c
  7899  00422E  50E6               	movf	postinc1,w,c
  7900  004230  0A80               	xorlw	128
  7901  004232  6E0B               	movwf	(??_fputc+4)^0,c
  7902  004234  50DE               	movf	postinc2,w,c
  7903  004236  0A80               	xorlw	128
  7904  004238  580B               	subwfb	(??_fputc+4)^0,w,c
  7905  00423A  B0D8               	btfsc	status,0,c
  7906  00423C  EF22  F021         	goto	u3231
  7907  004240  EF24  F021         	goto	u3230
  7908  004244                     u3231:
  7909  004244  EF47  F021         	goto	l1568
  7910  004248                     u3230:
  7911  004248                     l3760:
  7912  004248  EE20 F002          	lfsr	2,2
  7913  00424C  5005               	movf	fputc@fp^0,w,c
  7914  00424E  26D9               	addwf	fsr2l,f,c
  7915  004250  5006               	movf	(fputc@fp+1)^0,w,c
  7916  004252  22DA               	addwfc	fsr2h,f,c
  7917  004254  CFDE F007          	movff	postinc2,??_fputc
  7918  004258  CFDD F008          	movff	postdec2,??_fputc+1
  7919  00425C  C005  FFD9         	movff	fputc@fp,fsr2l
  7920  004260  C006  FFDA         	movff	fputc@fp+1,fsr2h
  7921  004264  CFDE F009          	movff	postinc2,??_fputc+2
  7922  004268  CFDD F00A          	movff	postdec2,??_fputc+3
  7923  00426C  5007               	movf	??_fputc^0,w,c
  7924  00426E  2409               	addwf	(??_fputc+2)^0,w,c
  7925  004270  6ED9               	movwf	fsr2l,c
  7926  004272  5008               	movf	(??_fputc+1)^0,w,c
  7927  004274  200A               	addwfc	(??_fputc+3)^0,w,c
  7928  004276  6EDA               	movwf	fsr2h,c
  7929  004278  C003  FFDF         	movff	fputc@c,indf2
  7930  00427C  EE20 F002          	lfsr	2,2
  7931  004280  5005               	movf	fputc@fp^0,w,c
  7932  004282  26D9               	addwf	fsr2l,f,c
  7933  004284  5006               	movf	(fputc@fp+1)^0,w,c
  7934  004286  22DA               	addwfc	fsr2h,f,c
  7935  004288  2ADE               	incf	postinc2,f,c
  7936  00428A  0E00               	movlw	0
  7937  00428C  22DD               	addwfc	postdec2,f,c
  7938  00428E                     l1568:
  7939  00428E  0012               	return		;funcret
  7940  004290                     __end_of_fputc:
  7941                           	opt callstack 0
  7942                           
  7943 ;; *************** function _putch *****************
  7944 ;; Defined at:
  7945 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  c               1    wreg     unsigned char 
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;  c               1    0[COMRAM] unsigned char 
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  1    wreg      void 
  7952 ;; Registers used:
  7953 ;;		wreg
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7963 ;;Total ram usage:        0 bytes
  7964 ;; Hardware stack levels used:    1
  7965 ;; Hardware stack levels required when called:    3
  7966 ;; This function calls:
  7967 ;;		Nothing
  7968 ;; This function is called by:
  7969 ;;		_fputc
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           	psect	text44
  7974  0050D6                     __ptext44:
  7975                           	opt callstack 0
  7976  0050D6                     _putch:
  7977                           	opt callstack 18
  7978  0050D6  0012               	return		;funcret
  7979  0050D8                     __end_of_putch:
  7980                           	opt callstack 0
  7981                           
  7982 ;; *************** function _floorf *****************
  7983 ;; Defined at:
  7984 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  x               4   27[COMRAM] float 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;  u               4   43[COMRAM] struct .
  7989 ;;  m               4   37[COMRAM] unsigned long 
  7990 ;;  e               2   41[COMRAM] int 
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  4   27[COMRAM] float 
  7993 ;; Registers used:
  7994 ;;		wreg, status,2, status,0
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8001 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8002 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8003 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8004 ;;Total ram usage:       20 bytes
  8005 ;; Hardware stack levels used:    1
  8006 ;; Hardware stack levels required when called:    3
  8007 ;; This function calls:
  8008 ;;		Nothing
  8009 ;; This function is called by:
  8010 ;;		_efgtoa
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text45
  8015  003132                     __ptext45:
  8016                           	opt callstack 0
  8017  003132                     _floorf:
  8018                           	opt callstack 21
  8019  003132  C138  F02C         	movff	floorf@F524,floorf@u
  8020  003136  C139  F02D         	movff	floorf@F524+1,floorf@u+1
  8021  00313A  C13A  F02E         	movff	floorf@F524+2,floorf@u+2
  8022  00313E  C13B  F02F         	movff	floorf@F524+3,floorf@u+3
  8023  003142  C01C  F02C         	movff	floorf@x,floorf@u
  8024  003146  C01D  F02D         	movff	floorf@x+1,floorf@u+1
  8025  00314A  C01E  F02E         	movff	floorf@x+2,floorf@u+2
  8026  00314E  C01F  F02F         	movff	floorf@x+3,floorf@u+3
  8027  003152  0E81               	movlw	129
  8028  003154  6E20               	movwf	??_floorf^0,c
  8029  003156  0EFF               	movlw	255
  8030  003158  6E21               	movwf	(??_floorf+1)^0,c
  8031  00315A  C02C  F022         	movff	floorf@u,??_floorf+2
  8032  00315E  C02D  F023         	movff	floorf@u+1,??_floorf+3
  8033  003162  C02E  F024         	movff	floorf@u+2,??_floorf+4
  8034  003166  C02F  F025         	movff	floorf@u+3,??_floorf+5
  8035  00316A  0E18               	movlw	24
  8036  00316C  EFBD  F018         	goto	u3870
  8037  003170                     u3875:
  8038  003170  90D8               	bcf	status,0,c
  8039  003172  3225               	rrcf	(??_floorf+5)^0,f,c
  8040  003174  3224               	rrcf	(??_floorf+4)^0,f,c
  8041  003176  3223               	rrcf	(??_floorf+3)^0,f,c
  8042  003178  3222               	rrcf	(??_floorf+2)^0,f,c
  8043  00317A                     u3870:
  8044  00317A  2EE8               	decfsz	wreg,f,c
  8045  00317C  EFB8  F018         	goto	u3875
  8046  003180  5022               	movf	(??_floorf+2)^0,w,c
  8047  003182  2420               	addwf	??_floorf^0,w,c
  8048  003184  6E2A               	movwf	floorf@e^0,c
  8049  003186  0E00               	movlw	0
  8050  003188  2021               	addwfc	(??_floorf+1)^0,w,c
  8051  00318A  6E2B               	movwf	(floorf@e+1)^0,c
  8052  00318C  BE2B               	btfsc	(floorf@e+1)^0,7,c
  8053  00318E  EFD2  F018         	goto	u3881
  8054  003192  502B               	movf	(floorf@e+1)^0,w,c
  8055  003194  E109               	bnz	u3880
  8056  003196  0E17               	movlw	23
  8057  003198  5C2A               	subwf	floorf@e^0,w,c
  8058  00319A  A0D8               	btfss	status,0,c
  8059  00319C  EFD2  F018         	goto	u3881
  8060  0031A0  EFD4  F018         	goto	u3880
  8061  0031A4                     u3881:
  8062  0031A4  EFDE  F018         	goto	l4060
  8063  0031A8                     u3880:
  8064  0031A8                     l4058:
  8065  0031A8  C01C  F01C         	movff	floorf@x,?_floorf
  8066  0031AC  C01D  F01D         	movff	floorf@x+1,?_floorf+1
  8067  0031B0  C01E  F01E         	movff	floorf@x+2,?_floorf+2
  8068  0031B4  C01F  F01F         	movff	floorf@x+3,?_floorf+3
  8069  0031B8  EFA1  F019         	goto	l1529
  8070  0031BC                     l4060:
  8071  0031BC  BE2B               	btfsc	(floorf@e+1)^0,7,c
  8072  0031BE  EFE3  F018         	goto	u3891
  8073  0031C2  EFE5  F018         	goto	u3890
  8074  0031C6                     u3891:
  8075  0031C6  EF55  F019         	goto	l4070
  8076  0031CA                     u3890:
  8077  0031CA  C02A  F020         	movff	floorf@e,??_floorf
  8078  0031CE  0EFF               	movlw	255
  8079  0031D0  6E21               	movwf	(??_floorf+1)^0,c
  8080  0031D2  0EFF               	movlw	255
  8081  0031D4  6E22               	movwf	(??_floorf+2)^0,c
  8082  0031D6  0E7F               	movlw	127
  8083  0031D8  6E23               	movwf	(??_floorf+3)^0,c
  8084  0031DA  0E00               	movlw	0
  8085  0031DC  6E24               	movwf	(??_floorf+4)^0,c
  8086  0031DE                     u3905:
  8087  0031DE  6620               	tstfsz	??_floorf^0,c
  8088  0031E0  EFF4  F018         	goto	u3906
  8089  0031E4  EFFC  F018         	goto	u3907
  8090  0031E8                     u3906:
  8091  0031E8  3424               	rlcf	(??_floorf+4)^0,w,c
  8092  0031EA  3224               	rrcf	(??_floorf+4)^0,f,c
  8093  0031EC  3223               	rrcf	(??_floorf+3)^0,f,c
  8094  0031EE  3222               	rrcf	(??_floorf+2)^0,f,c
  8095  0031F0  3221               	rrcf	(??_floorf+1)^0,f,c
  8096  0031F2  2E20               	decfsz	??_floorf^0,f,c
  8097  0031F4  EFEF  F018         	goto	u3905
  8098  0031F8                     u3907:
  8099  0031F8  C021  F026         	movff	??_floorf+1,floorf@m
  8100  0031FC  C022  F027         	movff	??_floorf+2,floorf@m+1
  8101  003200  C023  F028         	movff	??_floorf+3,floorf@m+2
  8102  003204  C024  F029         	movff	??_floorf+4,floorf@m+3
  8103  003208  5026               	movf	floorf@m^0,w,c
  8104  00320A  142C               	andwf	floorf@u^0,w,c
  8105  00320C  6E20               	movwf	??_floorf^0,c
  8106  00320E  5027               	movf	(floorf@m+1)^0,w,c
  8107  003210  142D               	andwf	(floorf@u+1)^0,w,c
  8108  003212  6E21               	movwf	(??_floorf+1)^0,c
  8109  003214  5028               	movf	(floorf@m+2)^0,w,c
  8110  003216  142E               	andwf	(floorf@u+2)^0,w,c
  8111  003218  6E22               	movwf	(??_floorf+2)^0,c
  8112  00321A  5029               	movf	(floorf@m+3)^0,w,c
  8113  00321C  142F               	andwf	(floorf@u+3)^0,w,c
  8114  00321E  6E23               	movwf	(??_floorf+3)^0,c
  8115  003220  5020               	movf	??_floorf^0,w,c
  8116  003222  1021               	iorwf	(??_floorf+1)^0,w,c
  8117  003224  1022               	iorwf	(??_floorf+2)^0,w,c
  8118  003226  1023               	iorwf	(??_floorf+3)^0,w,c
  8119  003228  A4D8               	btfss	status,2,c
  8120  00322A  EF19  F019         	goto	u3911
  8121  00322E  EF1B  F019         	goto	u3910
  8122  003232                     u3911:
  8123  003232  EF1D  F019         	goto	l4066
  8124  003236                     u3910:
  8125  003236  EFD4  F018         	goto	l4058
  8126  00323A                     l4066:
  8127  00323A  C02C  F020         	movff	floorf@u,??_floorf
  8128  00323E  C02D  F021         	movff	floorf@u+1,??_floorf+1
  8129  003242  C02E  F022         	movff	floorf@u+2,??_floorf+2
  8130  003246  C02F  F023         	movff	floorf@u+3,??_floorf+3
  8131  00324A  0E20               	movlw	32
  8132  00324C  EF2D  F019         	goto	u3920
  8133  003250                     u3925:
  8134  003250  90D8               	bcf	status,0,c
  8135  003252  3223               	rrcf	(??_floorf+3)^0,f,c
  8136  003254  3222               	rrcf	(??_floorf+2)^0,f,c
  8137  003256  3221               	rrcf	(??_floorf+1)^0,f,c
  8138  003258  3220               	rrcf	??_floorf^0,f,c
  8139  00325A                     u3920:
  8140  00325A  2EE8               	decfsz	wreg,f,c
  8141  00325C  EF28  F019         	goto	u3925
  8142  003260  5020               	movf	??_floorf^0,w,c
  8143  003262  1021               	iorwf	(??_floorf+1)^0,w,c
  8144  003264  1022               	iorwf	(??_floorf+2)^0,w,c
  8145  003266  1023               	iorwf	(??_floorf+3)^0,w,c
  8146  003268  B4D8               	btfsc	status,2,c
  8147  00326A  EF39  F019         	goto	u3931
  8148  00326E  EF3B  F019         	goto	u3930
  8149  003272                     u3931:
  8150  003272  EF43  F019         	goto	l1532
  8151  003276                     u3930:
  8152  003276  5026               	movf	floorf@m^0,w,c
  8153  003278  262C               	addwf	floorf@u^0,f,c
  8154  00327A  5027               	movf	(floorf@m+1)^0,w,c
  8155  00327C  222D               	addwfc	(floorf@u+1)^0,f,c
  8156  00327E  5028               	movf	(floorf@m+2)^0,w,c
  8157  003280  222E               	addwfc	(floorf@u+2)^0,f,c
  8158  003282  5029               	movf	(floorf@m+3)^0,w,c
  8159  003284  222F               	addwfc	(floorf@u+3)^0,f,c
  8160  003286                     l1532:
  8161  003286  1C26               	comf	floorf@m^0,w,c
  8162  003288  6E20               	movwf	??_floorf^0,c
  8163  00328A  1C27               	comf	(floorf@m+1)^0,w,c
  8164  00328C  6E21               	movwf	(??_floorf+1)^0,c
  8165  00328E  1C28               	comf	(floorf@m+2)^0,w,c
  8166  003290  6E22               	movwf	(??_floorf+2)^0,c
  8167  003292  1C29               	comf	(floorf@m+3)^0,w,c
  8168  003294  6E23               	movwf	(??_floorf+3)^0,c
  8169  003296  5020               	movf	??_floorf^0,w,c
  8170  003298  162C               	andwf	floorf@u^0,f,c
  8171  00329A  5021               	movf	(??_floorf+1)^0,w,c
  8172  00329C  162D               	andwf	(floorf@u+1)^0,f,c
  8173  00329E  5022               	movf	(??_floorf+2)^0,w,c
  8174  0032A0  162E               	andwf	(floorf@u+2)^0,f,c
  8175  0032A2  5023               	movf	(??_floorf+3)^0,w,c
  8176  0032A4  162F               	andwf	(floorf@u+3)^0,f,c
  8177  0032A6  EF99  F019         	goto	l4078
  8178  0032AA                     l4070:
  8179  0032AA  C02C  F020         	movff	floorf@u,??_floorf
  8180  0032AE  C02D  F021         	movff	floorf@u+1,??_floorf+1
  8181  0032B2  C02E  F022         	movff	floorf@u+2,??_floorf+2
  8182  0032B6  C02F  F023         	movff	floorf@u+3,??_floorf+3
  8183  0032BA  0E20               	movlw	32
  8184  0032BC  EF65  F019         	goto	u3940
  8185  0032C0                     u3945:
  8186  0032C0  90D8               	bcf	status,0,c
  8187  0032C2  3223               	rrcf	(??_floorf+3)^0,f,c
  8188  0032C4  3222               	rrcf	(??_floorf+2)^0,f,c
  8189  0032C6  3221               	rrcf	(??_floorf+1)^0,f,c
  8190  0032C8  3220               	rrcf	??_floorf^0,f,c
  8191  0032CA                     u3940:
  8192  0032CA  2EE8               	decfsz	wreg,f,c
  8193  0032CC  EF60  F019         	goto	u3945
  8194  0032D0  5020               	movf	??_floorf^0,w,c
  8195  0032D2  1021               	iorwf	(??_floorf+1)^0,w,c
  8196  0032D4  1022               	iorwf	(??_floorf+2)^0,w,c
  8197  0032D6  1023               	iorwf	(??_floorf+3)^0,w,c
  8198  0032D8  A4D8               	btfss	status,2,c
  8199  0032DA  EF71  F019         	goto	u3951
  8200  0032DE  EF73  F019         	goto	u3950
  8201  0032E2                     u3951:
  8202  0032E2  EF7D  F019         	goto	l4074
  8203  0032E6                     u3950:
  8204  0032E6  0E00               	movlw	0
  8205  0032E8  6E2C               	movwf	floorf@u^0,c
  8206  0032EA  0E00               	movlw	0
  8207  0032EC  6E2D               	movwf	(floorf@u+1)^0,c
  8208  0032EE  0E00               	movlw	0
  8209  0032F0  6E2E               	movwf	(floorf@u+2)^0,c
  8210  0032F2  0E00               	movlw	0
  8211  0032F4  6E2F               	movwf	(floorf@u+3)^0,c
  8212  0032F6  EF99  F019         	goto	l4078
  8213  0032FA                     l4074:
  8214  0032FA  90D8               	bcf	status,0,c
  8215  0032FC  342C               	rlcf	floorf@u^0,w,c
  8216  0032FE  6E20               	movwf	??_floorf^0,c
  8217  003300  342D               	rlcf	(floorf@u+1)^0,w,c
  8218  003302  6E21               	movwf	(??_floorf+1)^0,c
  8219  003304  342E               	rlcf	(floorf@u+2)^0,w,c
  8220  003306  6E22               	movwf	(??_floorf+2)^0,c
  8221  003308  342F               	rlcf	(floorf@u+3)^0,w,c
  8222  00330A  6E23               	movwf	(??_floorf+3)^0,c
  8223  00330C  5020               	movf	??_floorf^0,w,c
  8224  00330E  1021               	iorwf	(??_floorf+1)^0,w,c
  8225  003310  1022               	iorwf	(??_floorf+2)^0,w,c
  8226  003312  1023               	iorwf	(??_floorf+3)^0,w,c
  8227  003314  B4D8               	btfsc	status,2,c
  8228  003316  EF8F  F019         	goto	u3961
  8229  00331A  EF91  F019         	goto	u3960
  8230  00331E                     u3961:
  8231  00331E  EF99  F019         	goto	l4078
  8232  003322                     u3960:
  8233  003322  0E00               	movlw	0
  8234  003324  6E2C               	movwf	floorf@u^0,c
  8235  003326  0E00               	movlw	0
  8236  003328  6E2D               	movwf	(floorf@u+1)^0,c
  8237  00332A  0E80               	movlw	128
  8238  00332C  6E2E               	movwf	(floorf@u+2)^0,c
  8239  00332E  0EBF               	movlw	191
  8240  003330  6E2F               	movwf	(floorf@u+3)^0,c
  8241  003332                     l4078:
  8242  003332  C02C  F01C         	movff	floorf@u,?_floorf
  8243  003336  C02D  F01D         	movff	floorf@u+1,?_floorf+1
  8244  00333A  C02E  F01E         	movff	floorf@u+2,?_floorf+2
  8245  00333E  C02F  F01F         	movff	floorf@u+3,?_floorf+3
  8246  003342                     l1529:
  8247  003342  0012               	return		;funcret
  8248  003344                     __end_of_floorf:
  8249                           	opt callstack 0
  8250                           
  8251 ;; *************** function ___fpclassifyf *****************
  8252 ;; Defined at:
  8253 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  x               4    2[COMRAM] float 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  u               4   12[COMRAM] struct .
  8258 ;;  e               2   10[COMRAM] int 
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  2    2[COMRAM] int 
  8261 ;; Registers used:
  8262 ;;		wreg, status,2, status,0
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8269 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8270 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8271 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8272 ;;Total ram usage:       14 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; Hardware stack levels required when called:    3
  8275 ;; This function calls:
  8276 ;;		Nothing
  8277 ;; This function is called by:
  8278 ;;		_efgtoa
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text46
  8283  003C44                     __ptext46:
  8284                           	opt callstack 0
  8285  003C44                     ___fpclassifyf:
  8286                           	opt callstack 21
  8287  003C44  C13C  F00D         	movff	___fpclassifyf@F463,___fpclassifyf@u
  8288  003C48  C13D  F00E         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  8289  003C4C  C13E  F00F         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  8290  003C50  C13F  F010         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  8291  003C54  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
  8292  003C58  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8293  003C5C  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8294  003C60  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8295  003C64  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  8296  003C68  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8297  003C6C  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8298  003C70  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8299  003C74  0E18               	movlw	24
  8300  003C76  EF42  F01E         	goto	u3750
  8301  003C7A                     u3755:
  8302  003C7A  90D8               	bcf	status,0,c
  8303  003C7C  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
  8304  003C7E  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
  8305  003C80  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
  8306  003C82  3207               	rrcf	??___fpclassifyf^0,f,c
  8307  003C84                     u3750:
  8308  003C84  2EE8               	decfsz	wreg,f,c
  8309  003C86  EF3D  F01E         	goto	u3755
  8310  003C8A  5007               	movf	??___fpclassifyf^0,w,c
  8311  003C8C  6E0B               	movwf	___fpclassifyf@e^0,c
  8312  003C8E  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
  8313  003C90  500B               	movf	___fpclassifyf@e^0,w,c
  8314  003C92  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8315  003C94  A4D8               	btfss	status,2,c
  8316  003C96  EF4F  F01E         	goto	u3761
  8317  003C9A  EF51  F01E         	goto	u3760
  8318  003C9E                     u3761:
  8319  003C9E  EF71  F01E         	goto	l4030
  8320  003CA2                     u3760:
  8321  003CA2  90D8               	bcf	status,0,c
  8322  003CA4  340D               	rlcf	___fpclassifyf@u^0,w,c
  8323  003CA6  6E07               	movwf	??___fpclassifyf^0,c
  8324  003CA8  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8325  003CAA  6E08               	movwf	(??___fpclassifyf+1)^0,c
  8326  003CAC  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8327  003CAE  6E09               	movwf	(??___fpclassifyf+2)^0,c
  8328  003CB0  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8329  003CB2  6E0A               	movwf	(??___fpclassifyf+3)^0,c
  8330  003CB4  5007               	movf	??___fpclassifyf^0,w,c
  8331  003CB6  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  8332  003CB8  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  8333  003CBA  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  8334  003CBC  A4D8               	btfss	status,2,c
  8335  003CBE  EF63  F01E         	goto	u3771
  8336  003CC2  EF65  F01E         	goto	u3770
  8337  003CC6                     u3771:
  8338  003CC6  EF6B  F01E         	goto	l4026
  8339  003CCA                     u3770:
  8340  003CCA  0E00               	movlw	0
  8341  003CCC  6E04               	movwf	(?___fpclassifyf+1)^0,c
  8342  003CCE  0E02               	movlw	2
  8343  003CD0  6E03               	movwf	?___fpclassifyf^0,c
  8344  003CD2  EFA0  F01E         	goto	l1491
  8345  003CD6                     l4026:
  8346  003CD6  0E00               	movlw	0
  8347  003CD8  6E04               	movwf	(?___fpclassifyf+1)^0,c
  8348  003CDA  0E03               	movlw	3
  8349  003CDC  6E03               	movwf	?___fpclassifyf^0,c
  8350  003CDE  EFA0  F01E         	goto	l1491
  8351  003CE2                     l4030:
  8352  003CE2  280B               	incf	___fpclassifyf@e^0,w,c
  8353  003CE4  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8354  003CE6  A4D8               	btfss	status,2,c
  8355  003CE8  EF78  F01E         	goto	u3781
  8356  003CEC  EF7A  F01E         	goto	u3780
  8357  003CF0                     u3781:
  8358  003CF0  EF9C  F01E         	goto	l4036
  8359  003CF4                     u3780:
  8360  003CF4  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  8361  003CF8  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8362  003CFC  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8363  003D00  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8364  003D04  0E09               	movlw	9
  8365  003D06                     u3795:
  8366  003D06  90D8               	bcf	status,0,c
  8367  003D08  3607               	rlcf	??___fpclassifyf^0,f,c
  8368  003D0A  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
  8369  003D0C  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
  8370  003D0E  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
  8371  003D10  2EE8               	decfsz	wreg,f,c
  8372  003D12  EF83  F01E         	goto	u3795
  8373  003D16  5007               	movf	??___fpclassifyf^0,w,c
  8374  003D18  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  8375  003D1A  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  8376  003D1C  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  8377  003D1E  B4D8               	btfsc	status,2,c
  8378  003D20  EF94  F01E         	goto	u3801
  8379  003D24  EF97  F01E         	goto	u3800
  8380  003D28                     u3801:
  8381  003D28  0E01               	movlw	1
  8382  003D2A  EF98  F01E         	goto	u3810
  8383  003D2E                     u3800:
  8384  003D2E  0E00               	movlw	0
  8385  003D30                     u3810:
  8386  003D30  6E03               	movwf	?___fpclassifyf^0,c
  8387  003D32  6A04               	clrf	(?___fpclassifyf+1)^0,c
  8388  003D34  EFA0  F01E         	goto	l1491
  8389  003D38                     l4036:
  8390  003D38  0E00               	movlw	0
  8391  003D3A  6E04               	movwf	(?___fpclassifyf+1)^0,c
  8392  003D3C  0E04               	movlw	4
  8393  003D3E  6E03               	movwf	?___fpclassifyf^0,c
  8394  003D40                     l1491:
  8395  003D40  0012               	return		;funcret
  8396  003D42                     __end_of___fpclassifyf:
  8397                           	opt callstack 0
  8398                           
  8399 ;; *************** function ___fltol *****************
  8400 ;; Defined at:
  8401 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  f1              4    2[COMRAM] int 
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;  exp1            1   11[COMRAM] unsigned char 
  8406 ;;  sign1           1   10[COMRAM] unsigned char 
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  4    2[COMRAM] long 
  8409 ;; Registers used:
  8410 ;;		wreg, status,2, status,0
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8418 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8419 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8420 ;;Total ram usage:       10 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:    3
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_efgtoa
  8427 ;;		_Convert_ftochar
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text47
  8432  003A3A                     __ptext47:
  8433                           	opt callstack 0
  8434  003A3A                     ___fltol:
  8435                           	opt callstack 21
  8436  003A3A  3405               	rlcf	(___fltol@f1+2)^0,w,c
  8437  003A3C  3406               	rlcf	(___fltol@f1+3)^0,w,c
  8438  003A3E  6E0C               	movwf	___fltol@exp1^0,c
  8439  003A40  500C               	movf	___fltol@exp1^0,w,c
  8440  003A42  A4D8               	btfss	status,2,c
  8441  003A44  EF26  F01D         	goto	u4621
  8442  003A48  EF28  F01D         	goto	u4620
  8443  003A4C                     u4621:
  8444  003A4C  EF32  F01D         	goto	l4498
  8445  003A50                     u4620:
  8446  003A50                     l4494:
  8447  003A50  0E00               	movlw	0
  8448  003A52  6E03               	movwf	?___fltol^0,c
  8449  003A54  0E00               	movlw	0
  8450  003A56  6E04               	movwf	(?___fltol+1)^0,c
  8451  003A58  0E00               	movlw	0
  8452  003A5A  6E05               	movwf	(?___fltol+2)^0,c
  8453  003A5C  0E00               	movlw	0
  8454  003A5E  6E06               	movwf	(?___fltol+3)^0,c
  8455  003A60  EF9F  F01D         	goto	l1107
  8456  003A64                     l4498:
  8457  003A64  C003  F007         	movff	___fltol@f1,??___fltol
  8458  003A68  C004  F008         	movff	___fltol@f1+1,??___fltol+1
  8459  003A6C  C005  F009         	movff	___fltol@f1+2,??___fltol+2
  8460  003A70  C006  F00A         	movff	___fltol@f1+3,??___fltol+3
  8461  003A74  0E20               	movlw	32
  8462  003A76  EF42  F01D         	goto	u4630
  8463  003A7A                     u4635:
  8464  003A7A  90D8               	bcf	status,0,c
  8465  003A7C  320A               	rrcf	(??___fltol+3)^0,f,c
  8466  003A7E  3209               	rrcf	(??___fltol+2)^0,f,c
  8467  003A80  3208               	rrcf	(??___fltol+1)^0,f,c
  8468  003A82  3207               	rrcf	??___fltol^0,f,c
  8469  003A84                     u4630:
  8470  003A84  2EE8               	decfsz	wreg,f,c
  8471  003A86  EF3D  F01D         	goto	u4635
  8472  003A8A  5007               	movf	??___fltol^0,w,c
  8473  003A8C  6E0B               	movwf	___fltol@sign1^0,c
  8474  003A8E  8E05               	bsf	(___fltol@f1+2)^0,7,c
  8475  003A90  0EFF               	movlw	255
  8476  003A92  1603               	andwf	___fltol@f1^0,f,c
  8477  003A94  0EFF               	movlw	255
  8478  003A96  1604               	andwf	(___fltol@f1+1)^0,f,c
  8479  003A98  0EFF               	movlw	255
  8480  003A9A  1605               	andwf	(___fltol@f1+2)^0,f,c
  8481  003A9C  0E00               	movlw	0
  8482  003A9E  1606               	andwf	(___fltol@f1+3)^0,f,c
  8483  003AA0  0E96               	movlw	150
  8484  003AA2  5E0C               	subwf	___fltol@exp1^0,f,c
  8485  003AA4  BE0C               	btfsc	___fltol@exp1^0,7,c
  8486  003AA6  EF59  F01D         	goto	u4640
  8487  003AAA  EF57  F01D         	goto	u4641
  8488  003AAE                     u4641:
  8489  003AAE  EF6F  F01D         	goto	l4518
  8490  003AB2                     u4640:
  8491  003AB2  500C               	movf	___fltol@exp1^0,w,c
  8492  003AB4  0A80               	xorlw	128
  8493  003AB6  0F97               	addlw	151
  8494  003AB8  B0D8               	btfsc	status,0,c
  8495  003ABA  EF61  F01D         	goto	u4651
  8496  003ABE  EF63  F01D         	goto	u4650
  8497  003AC2                     u4651:
  8498  003AC2  EF65  F01D         	goto	l4514
  8499  003AC6                     u4650:
  8500  003AC6  EF28  F01D         	goto	l4494
  8501  003ACA                     l4514:
  8502  003ACA  90D8               	bcf	status,0,c
  8503  003ACC  3206               	rrcf	(___fltol@f1+3)^0,f,c
  8504  003ACE  3205               	rrcf	(___fltol@f1+2)^0,f,c
  8505  003AD0  3204               	rrcf	(___fltol@f1+1)^0,f,c
  8506  003AD2  3203               	rrcf	___fltol@f1^0,f,c
  8507  003AD4  3E0C               	incfsz	___fltol@exp1^0,f,c
  8508  003AD6  EF65  F01D         	goto	l4514
  8509  003ADA  EF87  F01D         	goto	l4528
  8510  003ADE                     l4518:
  8511  003ADE  0E1F               	movlw	31
  8512  003AE0  640C               	cpfsgt	___fltol@exp1^0,c
  8513  003AE2  EF75  F01D         	goto	u4661
  8514  003AE6  EF77  F01D         	goto	u4660
  8515  003AEA                     u4661:
  8516  003AEA  EF7F  F01D         	goto	l4526
  8517  003AEE                     u4660:
  8518  003AEE  EF28  F01D         	goto	l4494
  8519  003AF2                     l4524:
  8520  003AF2  90D8               	bcf	status,0,c
  8521  003AF4  3603               	rlcf	___fltol@f1^0,f,c
  8522  003AF6  3604               	rlcf	(___fltol@f1+1)^0,f,c
  8523  003AF8  3605               	rlcf	(___fltol@f1+2)^0,f,c
  8524  003AFA  3606               	rlcf	(___fltol@f1+3)^0,f,c
  8525  003AFC  060C               	decf	___fltol@exp1^0,f,c
  8526  003AFE                     l4526:
  8527  003AFE  500C               	movf	___fltol@exp1^0,w,c
  8528  003B00  A4D8               	btfss	status,2,c
  8529  003B02  EF85  F01D         	goto	u4671
  8530  003B06  EF87  F01D         	goto	u4670
  8531  003B0A                     u4671:
  8532  003B0A  EF79  F01D         	goto	l4524
  8533  003B0E                     u4670:
  8534  003B0E                     l4528:
  8535  003B0E  500B               	movf	___fltol@sign1^0,w,c
  8536  003B10  B4D8               	btfsc	status,2,c
  8537  003B12  EF8D  F01D         	goto	u4681
  8538  003B16  EF8F  F01D         	goto	u4680
  8539  003B1A                     u4681:
  8540  003B1A  EF97  F01D         	goto	l4532
  8541  003B1E                     u4680:
  8542  003B1E  1E06               	comf	(___fltol@f1+3)^0,f,c
  8543  003B20  1E05               	comf	(___fltol@f1+2)^0,f,c
  8544  003B22  1E04               	comf	(___fltol@f1+1)^0,f,c
  8545  003B24  6C03               	negf	___fltol@f1^0,c
  8546  003B26  0E00               	movlw	0
  8547  003B28  2204               	addwfc	(___fltol@f1+1)^0,f,c
  8548  003B2A  2205               	addwfc	(___fltol@f1+2)^0,f,c
  8549  003B2C  2206               	addwfc	(___fltol@f1+3)^0,f,c
  8550  003B2E                     l4532:
  8551  003B2E  C003  F003         	movff	___fltol@f1,?___fltol
  8552  003B32  C004  F004         	movff	___fltol@f1+1,?___fltol+1
  8553  003B36  C005  F005         	movff	___fltol@f1+2,?___fltol+2
  8554  003B3A  C006  F006         	movff	___fltol@f1+3,?___fltol+3
  8555  003B3E                     l1107:
  8556  003B3E  0012               	return		;funcret
  8557  003B40                     __end_of___fltol:
  8558                           	opt callstack 0
  8559                           
  8560 ;; *************** function ___flsub *****************
  8561 ;; Defined at:
  8562 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  b               4   41[COMRAM] long 
  8565 ;;  a               4   45[COMRAM] long 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  4   41[COMRAM] long 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2, status,0, cstack
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8577 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8580 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8581 ;;Total ram usage:        8 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    4
  8584 ;; This function calls:
  8585 ;;		___fladd
  8586 ;; This function is called by:
  8587 ;;		_efgtoa
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           	psect	text48
  8592  004BCA                     __ptext48:
  8593                           	opt callstack 0
  8594  004BCA                     ___flsub:
  8595                           	opt callstack 20
  8596  004BCA  0E00               	movlw	0
  8597  004BCC  1A2E               	xorwf	___flsub@a^0,f,c
  8598  004BCE  0E00               	movlw	0
  8599  004BD0  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  8600  004BD2  0E00               	movlw	0
  8601  004BD4  1A30               	xorwf	(___flsub@a+2)^0,f,c
  8602  004BD6  0E80               	movlw	128
  8603  004BD8  1A31               	xorwf	(___flsub@a+3)^0,f,c
  8604  004BDA  C02A  F003         	movff	___flsub@b,___fladd@b
  8605  004BDE  C02B  F004         	movff	___flsub@b+1,___fladd@b+1
  8606  004BE2  C02C  F005         	movff	___flsub@b+2,___fladd@b+2
  8607  004BE6  C02D  F006         	movff	___flsub@b+3,___fladd@b+3
  8608  004BEA  C02E  F007         	movff	___flsub@a,___fladd@a
  8609  004BEE  C02F  F008         	movff	___flsub@a+1,___fladd@a+1
  8610  004BF2  C030  F009         	movff	___flsub@a+2,___fladd@a+2
  8611  004BF6  C031  F00A         	movff	___flsub@a+3,___fladd@a+3
  8612  004BFA  EC16  F011         	call	___fladd	;wreg free
  8613  004BFE  C003  F02A         	movff	?___fladd,?___flsub
  8614  004C02  C004  F02B         	movff	?___fladd+1,?___flsub+1
  8615  004C06  C005  F02C         	movff	?___fladd+2,?___flsub+2
  8616  004C0A  C006  F02D         	movff	?___fladd+3,?___flsub+3
  8617  004C0E  0012               	return		;funcret
  8618  004C10                     __end_of___flsub:
  8619                           	opt callstack 0
  8620                           
  8621 ;; *************** function ___fladd *****************
  8622 ;; Defined at:
  8623 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;  b               4    2[COMRAM] long 
  8626 ;;  a               4    6[COMRAM] long 
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;  grs             1   17[COMRAM] unsigned char 
  8629 ;;  bexp            1   16[COMRAM] unsigned char 
  8630 ;;  aexp            1   15[COMRAM] unsigned char 
  8631 ;;  signs           1   14[COMRAM] unsigned char 
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  4    2[COMRAM] unsigned char 
  8634 ;; Registers used:
  8635 ;;		wreg, status,2, status,0
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8641 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8642 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8643 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8644 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8645 ;;Total ram usage:       16 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; Hardware stack levels required when called:    3
  8648 ;; This function calls:
  8649 ;;		Nothing
  8650 ;; This function is called by:
  8651 ;;		_efgtoa
  8652 ;;		___flsub
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           	psect	text49
  8657  00222C                     __ptext49:
  8658                           	opt callstack 0
  8659  00222C                     ___fladd:
  8660                           	opt callstack 20
  8661  00222C  5006               	movf	(___fladd@b+3)^0,w,c
  8662  00222E  0B80               	andlw	128
  8663  002230  6E0F               	movwf	___fladd@signs^0,c
  8664  002232  5006               	movf	(___fladd@b+3)^0,w,c
  8665  002234  2406               	addwf	(___fladd@b+3)^0,w,c
  8666  002236  6E11               	movwf	___fladd@bexp^0,c
  8667  002238  AE05               	btfss	(___fladd@b+2)^0,7,c
  8668  00223A  EF21  F011         	goto	u3281
  8669  00223E  EF23  F011         	goto	u3280
  8670  002242                     u3281:
  8671  002242  EF24  F011         	goto	l3792
  8672  002246                     u3280:
  8673  002246  8011               	bsf	___fladd@bexp^0,0,c
  8674  002248                     l3792:
  8675  002248  5011               	movf	___fladd@bexp^0,w,c
  8676  00224A  B4D8               	btfsc	status,2,c
  8677  00224C  EF2A  F011         	goto	u3291
  8678  002250  EF2C  F011         	goto	u3290
  8679  002254                     u3291:
  8680  002254  EF41  F011         	goto	l3802
  8681  002258                     u3290:
  8682  002258  2811               	incf	___fladd@bexp^0,w,c
  8683  00225A  A4D8               	btfss	status,2,c
  8684  00225C  EF32  F011         	goto	u3301
  8685  002260  EF34  F011         	goto	u3300
  8686  002264                     u3301:
  8687  002264  EF3C  F011         	goto	l3798
  8688  002268                     u3300:
  8689  002268  0E00               	movlw	0
  8690  00226A  6E03               	movwf	___fladd@b^0,c
  8691  00226C  0E00               	movlw	0
  8692  00226E  6E04               	movwf	(___fladd@b+1)^0,c
  8693  002270  0E00               	movlw	0
  8694  002272  6E05               	movwf	(___fladd@b+2)^0,c
  8695  002274  0E00               	movlw	0
  8696  002276  6E06               	movwf	(___fladd@b+3)^0,c
  8697  002278                     l3798:
  8698  002278  8E05               	bsf	(___fladd@b+2)^0,7,c
  8699  00227A  0E00               	movlw	0
  8700  00227C  6E06               	movwf	(___fladd@b+3)^0,c
  8701  00227E  EF49  F011         	goto	l3804
  8702  002282                     l3802:
  8703  002282  0E00               	movlw	0
  8704  002284  6E03               	movwf	___fladd@b^0,c
  8705  002286  0E00               	movlw	0
  8706  002288  6E04               	movwf	(___fladd@b+1)^0,c
  8707  00228A  0E00               	movlw	0
  8708  00228C  6E05               	movwf	(___fladd@b+2)^0,c
  8709  00228E  0E00               	movlw	0
  8710  002290  6E06               	movwf	(___fladd@b+3)^0,c
  8711  002292                     l3804:
  8712  002292  500A               	movf	(___fladd@a+3)^0,w,c
  8713  002294  0B80               	andlw	128
  8714  002296  6E10               	movwf	___fladd@aexp^0,c
  8715  002298  500F               	movf	___fladd@signs^0,w,c
  8716  00229A  1810               	xorwf	___fladd@aexp^0,w,c
  8717  00229C  B4D8               	btfsc	status,2,c
  8718  00229E  EF53  F011         	goto	u3311
  8719  0022A2  EF55  F011         	goto	u3310
  8720  0022A6                     u3311:
  8721  0022A6  EF56  F011         	goto	l3810
  8722  0022AA                     u3310:
  8723  0022AA  8C0F               	bsf	___fladd@signs^0,6,c
  8724  0022AC                     l3810:
  8725  0022AC  500A               	movf	(___fladd@a+3)^0,w,c
  8726  0022AE  240A               	addwf	(___fladd@a+3)^0,w,c
  8727  0022B0  6E10               	movwf	___fladd@aexp^0,c
  8728  0022B2  AE09               	btfss	(___fladd@a+2)^0,7,c
  8729  0022B4  EF5E  F011         	goto	u3321
  8730  0022B8  EF60  F011         	goto	u3320
  8731  0022BC                     u3321:
  8732  0022BC  EF61  F011         	goto	l3816
  8733  0022C0                     u3320:
  8734  0022C0  8010               	bsf	___fladd@aexp^0,0,c
  8735  0022C2                     l3816:
  8736  0022C2  5010               	movf	___fladd@aexp^0,w,c
  8737  0022C4  B4D8               	btfsc	status,2,c
  8738  0022C6  EF67  F011         	goto	u3331
  8739  0022CA  EF69  F011         	goto	u3330
  8740  0022CE                     u3331:
  8741  0022CE  EF7E  F011         	goto	l3826
  8742  0022D2                     u3330:
  8743  0022D2  2810               	incf	___fladd@aexp^0,w,c
  8744  0022D4  A4D8               	btfss	status,2,c
  8745  0022D6  EF6F  F011         	goto	u3341
  8746  0022DA  EF71  F011         	goto	u3340
  8747  0022DE                     u3341:
  8748  0022DE  EF79  F011         	goto	l3822
  8749  0022E2                     u3340:
  8750  0022E2  0E00               	movlw	0
  8751  0022E4  6E07               	movwf	___fladd@a^0,c
  8752  0022E6  0E00               	movlw	0
  8753  0022E8  6E08               	movwf	(___fladd@a+1)^0,c
  8754  0022EA  0E00               	movlw	0
  8755  0022EC  6E09               	movwf	(___fladd@a+2)^0,c
  8756  0022EE  0E00               	movlw	0
  8757  0022F0  6E0A               	movwf	(___fladd@a+3)^0,c
  8758  0022F2                     l3822:
  8759  0022F2  8E09               	bsf	(___fladd@a+2)^0,7,c
  8760  0022F4  0E00               	movlw	0
  8761  0022F6  6E0A               	movwf	(___fladd@a+3)^0,c
  8762  0022F8  EF86  F011         	goto	l3828
  8763  0022FC                     l3826:
  8764  0022FC  0E00               	movlw	0
  8765  0022FE  6E07               	movwf	___fladd@a^0,c
  8766  002300  0E00               	movlw	0
  8767  002302  6E08               	movwf	(___fladd@a+1)^0,c
  8768  002304  0E00               	movlw	0
  8769  002306  6E09               	movwf	(___fladd@a+2)^0,c
  8770  002308  0E00               	movlw	0
  8771  00230A  6E0A               	movwf	(___fladd@a+3)^0,c
  8772  00230C                     l3828:
  8773  00230C  5011               	movf	___fladd@bexp^0,w,c
  8774  00230E  5C10               	subwf	___fladd@aexp^0,w,c
  8775  002310  B0D8               	btfsc	status,0,c
  8776  002312  EF8D  F011         	goto	u3351
  8777  002316  EF8F  F011         	goto	u3350
  8778  00231A                     u3351:
  8779  00231A  EFB6  F011         	goto	l3864
  8780  00231E                     u3350:
  8781  00231E  AC0F               	btfss	___fladd@signs^0,6,c
  8782  002320  EF94  F011         	goto	u3361
  8783  002324  EF96  F011         	goto	u3360
  8784  002328                     u3361:
  8785  002328  EF98  F011         	goto	l3834
  8786  00232C                     u3360:
  8787  00232C  0E80               	movlw	128
  8788  00232E  1A0F               	xorwf	___fladd@signs^0,f,c
  8789  002330                     l3834:
  8790  002330  C011  F012         	movff	___fladd@bexp,___fladd@grs
  8791  002334  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  8792  002338  C012  F010         	movff	___fladd@grs,___fladd@aexp
  8793  00233C  C003  F012         	movff	___fladd@b,___fladd@grs
  8794  002340  C007  F003         	movff	___fladd@a,___fladd@b
  8795  002344  C012  F007         	movff	___fladd@grs,___fladd@a
  8796  002348  C004  F012         	movff	___fladd@b+1,___fladd@grs
  8797  00234C  C008  F004         	movff	___fladd@a+1,___fladd@b+1
  8798  002350  C012  F008         	movff	___fladd@grs,___fladd@a+1
  8799  002354  C005  F012         	movff	___fladd@b+2,___fladd@grs
  8800  002358  C009  F005         	movff	___fladd@a+2,___fladd@b+2
  8801  00235C  C012  F009         	movff	___fladd@grs,___fladd@a+2
  8802  002360  C006  F012         	movff	___fladd@b+3,___fladd@grs
  8803  002364  C00A  F006         	movff	___fladd@a+3,___fladd@b+3
  8804  002368  C012  F00A         	movff	___fladd@grs,___fladd@a+3
  8805  00236C                     l3864:
  8806  00236C  0E00               	movlw	0
  8807  00236E  6E12               	movwf	___fladd@grs^0,c
  8808  002370  5011               	movf	___fladd@bexp^0,w,c
  8809  002372  C010  F00B         	movff	___fladd@aexp,??___fladd
  8810  002376  6A0C               	clrf	(??___fladd+1)^0,c
  8811  002378  5E0B               	subwf	??___fladd^0,f,c
  8812  00237A  0E00               	movlw	0
  8813  00237C  5A0C               	subwfb	(??___fladd+1)^0,f,c
  8814  00237E  BE0C               	btfsc	(??___fladd+1)^0,7,c
  8815  002380  EFCB  F011         	goto	u3371
  8816  002384  500C               	movf	(??___fladd+1)^0,w,c
  8817  002386  E109               	bnz	u3370
  8818  002388  0E1A               	movlw	26
  8819  00238A  5C0B               	subwf	??___fladd^0,w,c
  8820  00238C  A0D8               	btfss	status,0,c
  8821  00238E  EFCB  F011         	goto	u3371
  8822  002392  EFCD  F011         	goto	u3370
  8823  002396                     u3371:
  8824  002396  EF04  F012         	goto	l1339
  8825  00239A                     u3370:
  8826  00239A  5003               	movf	___fladd@b^0,w,c
  8827  00239C  1004               	iorwf	(___fladd@b+1)^0,w,c
  8828  00239E  1005               	iorwf	(___fladd@b+2)^0,w,c
  8829  0023A0  1006               	iorwf	(___fladd@b+3)^0,w,c
  8830  0023A2  A4D8               	btfss	status,2,c
  8831  0023A4  EFD6  F011         	goto	u3381
  8832  0023A8  EFD9  F011         	goto	u3380
  8833  0023AC                     u3381:
  8834  0023AC  0E01               	movlw	1
  8835  0023AE  EFDA  F011         	goto	u3390
  8836  0023B2                     u3380:
  8837  0023B2  0E00               	movlw	0
  8838  0023B4                     u3390:
  8839  0023B4  6E12               	movwf	___fladd@grs^0,c
  8840  0023B6  0E00               	movlw	0
  8841  0023B8  6E03               	movwf	___fladd@b^0,c
  8842  0023BA  0E00               	movlw	0
  8843  0023BC  6E04               	movwf	(___fladd@b+1)^0,c
  8844  0023BE  0E00               	movlw	0
  8845  0023C0  6E05               	movwf	(___fladd@b+2)^0,c
  8846  0023C2  0E00               	movlw	0
  8847  0023C4  6E06               	movwf	(___fladd@b+3)^0,c
  8848  0023C6  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  8849  0023CA  EF0D  F012         	goto	l1338
  8850  0023CE                     l1340:
  8851  0023CE  A012               	btfss	___fladd@grs^0,0,c
  8852  0023D0  EFEC  F011         	goto	u3401
  8853  0023D4  EFEE  F011         	goto	u3400
  8854  0023D8                     u3401:
  8855  0023D8  EFF4  F011         	goto	l3876
  8856  0023DC                     u3400:
  8857  0023DC  90D8               	bcf	status,0,c
  8858  0023DE  3012               	rrcf	___fladd@grs^0,w,c
  8859  0023E0  0901               	iorlw	1
  8860  0023E2  6E12               	movwf	___fladd@grs^0,c
  8861  0023E4  EFF6  F011         	goto	l3878
  8862  0023E8                     l3876:
  8863  0023E8  90D8               	bcf	status,0,c
  8864  0023EA  3212               	rrcf	___fladd@grs^0,f,c
  8865  0023EC                     l3878:
  8866  0023EC  A003               	btfss	___fladd@b^0,0,c
  8867  0023EE  EFFB  F011         	goto	u3411
  8868  0023F2  EFFD  F011         	goto	u3410
  8869  0023F6                     u3411:
  8870  0023F6  EFFE  F011         	goto	l3882
  8871  0023FA                     u3410:
  8872  0023FA  8E12               	bsf	___fladd@grs^0,7,c
  8873  0023FC                     l3882:
  8874  0023FC  3406               	rlcf	(___fladd@b+3)^0,w,c
  8875  0023FE  3206               	rrcf	(___fladd@b+3)^0,f,c
  8876  002400  3205               	rrcf	(___fladd@b+2)^0,f,c
  8877  002402  3204               	rrcf	(___fladd@b+1)^0,f,c
  8878  002404  3203               	rrcf	___fladd@b^0,f,c
  8879  002406  2A11               	incf	___fladd@bexp^0,f,c
  8880  002408                     l1339:
  8881  002408  5010               	movf	___fladd@aexp^0,w,c
  8882  00240A  5C11               	subwf	___fladd@bexp^0,w,c
  8883  00240C  A0D8               	btfss	status,0,c
  8884  00240E  EF0B  F012         	goto	u3421
  8885  002412  EF0D  F012         	goto	u3420
  8886  002416                     u3421:
  8887  002416  EFE7  F011         	goto	l1340
  8888  00241A                     u3420:
  8889  00241A                     l1338:
  8890  00241A  BC0F               	btfsc	___fladd@signs^0,6,c
  8891  00241C  EF12  F012         	goto	u3431
  8892  002420  EF14  F012         	goto	u3430
  8893  002424                     u3431:
  8894  002424  EF54  F012         	goto	l3910
  8895  002428                     u3430:
  8896  002428  5011               	movf	___fladd@bexp^0,w,c
  8897  00242A  A4D8               	btfss	status,2,c
  8898  00242C  EF1A  F012         	goto	u3441
  8899  002430  EF1C  F012         	goto	u3440
  8900  002434                     u3441:
  8901  002434  EF26  F012         	goto	l3892
  8902  002438                     u3440:
  8903  002438  0E00               	movlw	0
  8904  00243A  6E03               	movwf	?___fladd^0,c
  8905  00243C  0E00               	movlw	0
  8906  00243E  6E04               	movwf	(?___fladd+1)^0,c
  8907  002440  0E00               	movlw	0
  8908  002442  6E05               	movwf	(?___fladd+2)^0,c
  8909  002444  0E00               	movlw	0
  8910  002446  6E06               	movwf	(?___fladd+3)^0,c
  8911  002448  EF75  F013         	goto	l1347
  8912  00244C                     l3892:
  8913  00244C  5007               	movf	___fladd@a^0,w,c
  8914  00244E  2603               	addwf	___fladd@b^0,f,c
  8915  002450  5008               	movf	(___fladd@a+1)^0,w,c
  8916  002452  2204               	addwfc	(___fladd@b+1)^0,f,c
  8917  002454  5009               	movf	(___fladd@a+2)^0,w,c
  8918  002456  2205               	addwfc	(___fladd@b+2)^0,f,c
  8919  002458  500A               	movf	(___fladd@a+3)^0,w,c
  8920  00245A  2206               	addwfc	(___fladd@b+3)^0,f,c
  8921  00245C  A006               	btfss	(___fladd@b+3)^0,0,c
  8922  00245E  EF33  F012         	goto	u3451
  8923  002462  EF35  F012         	goto	u3450
  8924  002466                     u3451:
  8925  002466  EFE1  F012         	goto	l3946
  8926  00246A                     u3450:
  8927  00246A  A012               	btfss	___fladd@grs^0,0,c
  8928  00246C  EF3A  F012         	goto	u3461
  8929  002470  EF3C  F012         	goto	u3460
  8930  002474                     u3461:
  8931  002474  EF42  F012         	goto	l3900
  8932  002478                     u3460:
  8933  002478  90D8               	bcf	status,0,c
  8934  00247A  3012               	rrcf	___fladd@grs^0,w,c
  8935  00247C  0901               	iorlw	1
  8936  00247E  6E12               	movwf	___fladd@grs^0,c
  8937  002480  EF44  F012         	goto	l3902
  8938  002484                     l3900:
  8939  002484  90D8               	bcf	status,0,c
  8940  002486  3212               	rrcf	___fladd@grs^0,f,c
  8941  002488                     l3902:
  8942  002488  A003               	btfss	___fladd@b^0,0,c
  8943  00248A  EF49  F012         	goto	u3471
  8944  00248E  EF4B  F012         	goto	u3470
  8945  002492                     u3471:
  8946  002492  EF4C  F012         	goto	l3906
  8947  002496                     u3470:
  8948  002496  8E12               	bsf	___fladd@grs^0,7,c
  8949  002498                     l3906:
  8950  002498  3406               	rlcf	(___fladd@b+3)^0,w,c
  8951  00249A  3206               	rrcf	(___fladd@b+3)^0,f,c
  8952  00249C  3205               	rrcf	(___fladd@b+2)^0,f,c
  8953  00249E  3204               	rrcf	(___fladd@b+1)^0,f,c
  8954  0024A0  3203               	rrcf	___fladd@b^0,f,c
  8955  0024A2  2A11               	incf	___fladd@bexp^0,f,c
  8956  0024A4  EFE1  F012         	goto	l3946
  8957  0024A8                     l3910:
  8958  0024A8  5007               	movf	___fladd@a^0,w,c
  8959  0024AA  5C03               	subwf	___fladd@b^0,w,c
  8960  0024AC  5008               	movf	(___fladd@a+1)^0,w,c
  8961  0024AE  5804               	subwfb	(___fladd@b+1)^0,w,c
  8962  0024B0  5009               	movf	(___fladd@a+2)^0,w,c
  8963  0024B2  5805               	subwfb	(___fladd@b+2)^0,w,c
  8964  0024B4  5006               	movf	(___fladd@b+3)^0,w,c
  8965  0024B6  0A80               	xorlw	128
  8966  0024B8  6E0B               	movwf	??___fladd^0,c
  8967  0024BA  500A               	movf	(___fladd@a+3)^0,w,c
  8968  0024BC  0A80               	xorlw	128
  8969  0024BE  580B               	subwfb	??___fladd^0,w,c
  8970  0024C0  B0D8               	btfsc	status,0,c
  8971  0024C2  EF65  F012         	goto	u3481
  8972  0024C6  EF67  F012         	goto	u3480
  8973  0024CA                     u3481:
  8974  0024CA  EF92  F012         	goto	l3920
  8975  0024CE                     u3480:
  8976  0024CE  5003               	movf	___fladd@b^0,w,c
  8977  0024D0  5C07               	subwf	___fladd@a^0,w,c
  8978  0024D2  6E0B               	movwf	??___fladd^0,c
  8979  0024D4  5004               	movf	(___fladd@b+1)^0,w,c
  8980  0024D6  5808               	subwfb	(___fladd@a+1)^0,w,c
  8981  0024D8  6E0C               	movwf	(??___fladd+1)^0,c
  8982  0024DA  5005               	movf	(___fladd@b+2)^0,w,c
  8983  0024DC  5809               	subwfb	(___fladd@a+2)^0,w,c
  8984  0024DE  6E0D               	movwf	(??___fladd+2)^0,c
  8985  0024E0  5006               	movf	(___fladd@b+3)^0,w,c
  8986  0024E2  580A               	subwfb	(___fladd@a+3)^0,w,c
  8987  0024E4  6E0E               	movwf	(??___fladd+3)^0,c
  8988  0024E6  0EFF               	movlw	255
  8989  0024E8  240B               	addwf	??___fladd^0,w,c
  8990  0024EA  6E03               	movwf	___fladd@b^0,c
  8991  0024EC  0EFF               	movlw	255
  8992  0024EE  200C               	addwfc	(??___fladd+1)^0,w,c
  8993  0024F0  6E04               	movwf	(___fladd@b+1)^0,c
  8994  0024F2  0EFF               	movlw	255
  8995  0024F4  200D               	addwfc	(??___fladd+2)^0,w,c
  8996  0024F6  6E05               	movwf	(___fladd@b+2)^0,c
  8997  0024F8  0EFF               	movlw	255
  8998  0024FA  200E               	addwfc	(??___fladd+3)^0,w,c
  8999  0024FC  6E06               	movwf	(___fladd@b+3)^0,c
  9000  0024FE  0E80               	movlw	128
  9001  002500  1A0F               	xorwf	___fladd@signs^0,f,c
  9002  002502  6C12               	negf	___fladd@grs^0,c
  9003  002504  5012               	movf	___fladd@grs^0,w,c
  9004  002506  A4D8               	btfss	status,2,c
  9005  002508  EF88  F012         	goto	u3491
  9006  00250C  EF8A  F012         	goto	u3490
  9007  002510                     u3491:
  9008  002510  EF9A  F012         	goto	l1355
  9009  002514                     u3490:
  9010  002514  0E01               	movlw	1
  9011  002516  2603               	addwf	___fladd@b^0,f,c
  9012  002518  0E00               	movlw	0
  9013  00251A  2204               	addwfc	(___fladd@b+1)^0,f,c
  9014  00251C  2205               	addwfc	(___fladd@b+2)^0,f,c
  9015  00251E  2206               	addwfc	(___fladd@b+3)^0,f,c
  9016  002520  EF9A  F012         	goto	l1355
  9017  002524                     l3920:
  9018  002524  5007               	movf	___fladd@a^0,w,c
  9019  002526  5E03               	subwf	___fladd@b^0,f,c
  9020  002528  5008               	movf	(___fladd@a+1)^0,w,c
  9021  00252A  5A04               	subwfb	(___fladd@b+1)^0,f,c
  9022  00252C  5009               	movf	(___fladd@a+2)^0,w,c
  9023  00252E  5A05               	subwfb	(___fladd@b+2)^0,f,c
  9024  002530  500A               	movf	(___fladd@a+3)^0,w,c
  9025  002532  5A06               	subwfb	(___fladd@b+3)^0,f,c
  9026  002534                     l1355:
  9027  002534  5003               	movf	___fladd@b^0,w,c
  9028  002536  1004               	iorwf	(___fladd@b+1)^0,w,c
  9029  002538  1005               	iorwf	(___fladd@b+2)^0,w,c
  9030  00253A  1006               	iorwf	(___fladd@b+3)^0,w,c
  9031  00253C  A4D8               	btfss	status,2,c
  9032  00253E  EFA3  F012         	goto	u3501
  9033  002542  EFA5  F012         	goto	u3500
  9034  002546                     u3501:
  9035  002546  EFDA  F012         	goto	l3944
  9036  00254A                     u3500:
  9037  00254A  5012               	movf	___fladd@grs^0,w,c
  9038  00254C  A4D8               	btfss	status,2,c
  9039  00254E  EFAB  F012         	goto	u3511
  9040  002552  EFAD  F012         	goto	u3510
  9041  002556                     u3511:
  9042  002556  EFDA  F012         	goto	l3944
  9043  00255A                     u3510:
  9044  00255A  0E00               	movlw	0
  9045  00255C  6E03               	movwf	?___fladd^0,c
  9046  00255E  0E00               	movlw	0
  9047  002560  6E04               	movwf	(?___fladd+1)^0,c
  9048  002562  0E00               	movlw	0
  9049  002564  6E05               	movwf	(?___fladd+2)^0,c
  9050  002566  0E00               	movlw	0
  9051  002568  6E06               	movwf	(?___fladd+3)^0,c
  9052  00256A  EF75  F013         	goto	l1347
  9053  00256E                     l3928:
  9054  00256E  90D8               	bcf	status,0,c
  9055  002570  3603               	rlcf	___fladd@b^0,f,c
  9056  002572  3604               	rlcf	(___fladd@b+1)^0,f,c
  9057  002574  3605               	rlcf	(___fladd@b+2)^0,f,c
  9058  002576  3606               	rlcf	(___fladd@b+3)^0,f,c
  9059  002578  AE12               	btfss	___fladd@grs^0,7,c
  9060  00257A  EFC1  F012         	goto	u3521
  9061  00257E  EFC3  F012         	goto	u3520
  9062  002582                     u3521:
  9063  002582  EFC4  F012         	goto	l3934
  9064  002586                     u3520:
  9065  002586  8003               	bsf	___fladd@b^0,0,c
  9066  002588                     l3934:
  9067  002588  A012               	btfss	___fladd@grs^0,0,c
  9068  00258A  EFC9  F012         	goto	u3531
  9069  00258E  EFCB  F012         	goto	u3530
  9070  002592                     u3531:
  9071  002592  EFCF  F012         	goto	l3938
  9072  002596                     u3530:
  9073  002596  80D8               	bsf	status,0,c
  9074  002598  3612               	rlcf	___fladd@grs^0,f,c
  9075  00259A  EFD1  F012         	goto	l3940
  9076  00259E                     l3938:
  9077  00259E  90D8               	bcf	status,0,c
  9078  0025A0  3612               	rlcf	___fladd@grs^0,f,c
  9079  0025A2                     l3940:
  9080  0025A2  5011               	movf	___fladd@bexp^0,w,c
  9081  0025A4  B4D8               	btfsc	status,2,c
  9082  0025A6  EFD7  F012         	goto	u3541
  9083  0025AA  EFD9  F012         	goto	u3540
  9084  0025AE                     u3541:
  9085  0025AE  EFDA  F012         	goto	l3944
  9086  0025B2                     u3540:
  9087  0025B2  0611               	decf	___fladd@bexp^0,f,c
  9088  0025B4                     l3944:
  9089  0025B4  AE05               	btfss	(___fladd@b+2)^0,7,c
  9090  0025B6  EFDF  F012         	goto	u3551
  9091  0025BA  EFE1  F012         	goto	u3550
  9092  0025BE                     u3551:
  9093  0025BE  EFB7  F012         	goto	l3928
  9094  0025C2                     u3550:
  9095  0025C2                     l3946:
  9096  0025C2  0E00               	movlw	0
  9097  0025C4  6E10               	movwf	___fladd@aexp^0,c
  9098  0025C6  AE12               	btfss	___fladd@grs^0,7,c
  9099  0025C8  EFE8  F012         	goto	u3561
  9100  0025CC  EFEA  F012         	goto	u3560
  9101  0025D0                     u3561:
  9102  0025D0  EF02  F013         	goto	l1364
  9103  0025D4                     u3560:
  9104  0025D4  C012  F00B         	movff	___fladd@grs,??___fladd
  9105  0025D8  0E7F               	movlw	127
  9106  0025DA  160B               	andwf	??___fladd^0,f,c
  9107  0025DC  B4D8               	btfsc	status,2,c
  9108  0025DE  EFF3  F012         	goto	u3571
  9109  0025E2  EFF5  F012         	goto	u3570
  9110  0025E6                     u3571:
  9111  0025E6  EFF9  F012         	goto	l1365
  9112  0025EA                     u3570:
  9113  0025EA                     l3952:
  9114  0025EA  0E01               	movlw	1
  9115  0025EC  6E10               	movwf	___fladd@aexp^0,c
  9116  0025EE  EF02  F013         	goto	l1364
  9117  0025F2                     l1365:
  9118  0025F2  A003               	btfss	___fladd@b^0,0,c
  9119  0025F4  EFFE  F012         	goto	u3581
  9120  0025F8  EF00  F013         	goto	u3580
  9121  0025FC                     u3581:
  9122  0025FC  EF02  F013         	goto	l1364
  9123  002600                     u3580:
  9124  002600  EFF5  F012         	goto	l3952
  9125  002604                     l1364:
  9126  002604  5010               	movf	___fladd@aexp^0,w,c
  9127  002606  B4D8               	btfsc	status,2,c
  9128  002608  EF08  F013         	goto	u3591
  9129  00260C  EF0A  F013         	goto	u3590
  9130  002610                     u3591:
  9131  002610  EF35  F013         	goto	l3964
  9132  002614                     u3590:
  9133  002614  0E01               	movlw	1
  9134  002616  2603               	addwf	___fladd@b^0,f,c
  9135  002618  0E00               	movlw	0
  9136  00261A  2204               	addwfc	(___fladd@b+1)^0,f,c
  9137  00261C  2205               	addwfc	(___fladd@b+2)^0,f,c
  9138  00261E  2206               	addwfc	(___fladd@b+3)^0,f,c
  9139  002620  A006               	btfss	(___fladd@b+3)^0,0,c
  9140  002622  EF15  F013         	goto	u3601
  9141  002626  EF17  F013         	goto	u3600
  9142  00262A                     u3601:
  9143  00262A  EF35  F013         	goto	l3964
  9144  00262E                     u3600:
  9145  00262E  C003  F00B         	movff	___fladd@b,??___fladd
  9146  002632  C004  F00C         	movff	___fladd@b+1,??___fladd+1
  9147  002636  C005  F00D         	movff	___fladd@b+2,??___fladd+2
  9148  00263A  C006  F00E         	movff	___fladd@b+3,??___fladd+3
  9149  00263E  340E               	rlcf	(??___fladd+3)^0,w,c
  9150  002640  320E               	rrcf	(??___fladd+3)^0,f,c
  9151  002642  320D               	rrcf	(??___fladd+2)^0,f,c
  9152  002644  320C               	rrcf	(??___fladd+1)^0,f,c
  9153  002646  320B               	rrcf	??___fladd^0,f,c
  9154  002648  C00B  F003         	movff	??___fladd,___fladd@b
  9155  00264C  C00C  F004         	movff	??___fladd+1,___fladd@b+1
  9156  002650  C00D  F005         	movff	??___fladd+2,___fladd@b+2
  9157  002654  C00E  F006         	movff	??___fladd+3,___fladd@b+3
  9158  002658  2811               	incf	___fladd@bexp^0,w,c
  9159  00265A  B4D8               	btfsc	status,2,c
  9160  00265C  EF32  F013         	goto	u3611
  9161  002660  EF34  F013         	goto	u3610
  9162  002664                     u3611:
  9163  002664  EF35  F013         	goto	l3964
  9164  002668                     u3610:
  9165  002668  2A11               	incf	___fladd@bexp^0,f,c
  9166  00266A                     l3964:
  9167  00266A  2811               	incf	___fladd@bexp^0,w,c
  9168  00266C  B4D8               	btfsc	status,2,c
  9169  00266E  EF3B  F013         	goto	u3621
  9170  002672  EF3D  F013         	goto	u3620
  9171  002676                     u3621:
  9172  002676  EF45  F013         	goto	l3968
  9173  00267A                     u3620:
  9174  00267A  5011               	movf	___fladd@bexp^0,w,c
  9175  00267C  A4D8               	btfss	status,2,c
  9176  00267E  EF43  F013         	goto	u3631
  9177  002682  EF45  F013         	goto	u3630
  9178  002686                     u3631:
  9179  002686  EF57  F013         	goto	l3972
  9180  00268A                     u3630:
  9181  00268A                     l3968:
  9182  00268A  0E00               	movlw	0
  9183  00268C  6E03               	movwf	___fladd@b^0,c
  9184  00268E  0E00               	movlw	0
  9185  002690  6E04               	movwf	(___fladd@b+1)^0,c
  9186  002692  0E00               	movlw	0
  9187  002694  6E05               	movwf	(___fladd@b+2)^0,c
  9188  002696  0E00               	movlw	0
  9189  002698  6E06               	movwf	(___fladd@b+3)^0,c
  9190  00269A  5011               	movf	___fladd@bexp^0,w,c
  9191  00269C  A4D8               	btfss	status,2,c
  9192  00269E  EF53  F013         	goto	u3641
  9193  0026A2  EF55  F013         	goto	u3640
  9194  0026A6                     u3641:
  9195  0026A6  EF57  F013         	goto	l3972
  9196  0026AA                     u3640:
  9197  0026AA  0E00               	movlw	0
  9198  0026AC  6E0F               	movwf	___fladd@signs^0,c
  9199  0026AE                     l3972:
  9200  0026AE  A011               	btfss	___fladd@bexp^0,0,c
  9201  0026B0  EF5C  F013         	goto	u3651
  9202  0026B4  EF5E  F013         	goto	u3650
  9203  0026B8                     u3651:
  9204  0026B8  EF61  F013         	goto	l3976
  9205  0026BC                     u3650:
  9206  0026BC  8E05               	bsf	(___fladd@b+2)^0,7,c
  9207  0026BE  EF62  F013         	goto	l3978
  9208  0026C2                     l3976:
  9209  0026C2  9E05               	bcf	(___fladd@b+2)^0,7,c
  9210  0026C4                     l3978:
  9211  0026C4  90D8               	bcf	status,0,c
  9212  0026C6  3011               	rrcf	___fladd@bexp^0,w,c
  9213  0026C8  6E06               	movwf	(___fladd@b+3)^0,c
  9214  0026CA  AE0F               	btfss	___fladd@signs^0,7,c
  9215  0026CC  EF6A  F013         	goto	u3661
  9216  0026D0  EF6C  F013         	goto	u3660
  9217  0026D4                     u3661:
  9218  0026D4  EF6D  F013         	goto	l3984
  9219  0026D8                     u3660:
  9220  0026D8  8E06               	bsf	(___fladd@b+3)^0,7,c
  9221  0026DA                     l3984:
  9222  0026DA  C003  F003         	movff	___fladd@b,?___fladd
  9223  0026DE  C004  F004         	movff	___fladd@b+1,?___fladd+1
  9224  0026E2  C005  F005         	movff	___fladd@b+2,?___fladd+2
  9225  0026E6  C006  F006         	movff	___fladd@b+3,?___fladd+3
  9226  0026EA                     l1347:
  9227  0026EA  0012               	return		;funcret
  9228  0026EC                     __end_of___fladd:
  9229                           	opt callstack 0
  9230                           
  9231 ;; *************** function ___flneg *****************
  9232 ;; Defined at:
  9233 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  f1              4    2[COMRAM] unsigned char 
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;		None
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  4    2[COMRAM] unsigned char 
  9240 ;; Registers used:
  9241 ;;		wreg, status,2, status,0
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9250 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9251 ;;Total ram usage:        4 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; Hardware stack levels required when called:    3
  9254 ;; This function calls:
  9255 ;;		Nothing
  9256 ;; This function is called by:
  9257 ;;		_efgtoa
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text50
  9262  004DC2                     __ptext50:
  9263                           	opt callstack 0
  9264  004DC2                     ___flneg:
  9265                           	opt callstack 21
  9266  004DC2  5003               	movf	___flneg@f1^0,w,c
  9267  004DC4  1004               	iorwf	(___flneg@f1+1)^0,w,c
  9268  004DC6  1005               	iorwf	(___flneg@f1+2)^0,w,c
  9269  004DC8  1006               	iorwf	(___flneg@f1+3)^0,w,c
  9270  004DCA  B4D8               	btfsc	status,2,c
  9271  004DCC  EFEA  F026         	goto	u4611
  9272  004DD0  EFEC  F026         	goto	u4610
  9273  004DD4                     u4611:
  9274  004DD4  EFF4  F026         	goto	l4488
  9275  004DD8                     u4610:
  9276  004DD8  0E00               	movlw	0
  9277  004DDA  1A03               	xorwf	___flneg@f1^0,f,c
  9278  004DDC  0E00               	movlw	0
  9279  004DDE  1A04               	xorwf	(___flneg@f1+1)^0,f,c
  9280  004DE0  0E00               	movlw	0
  9281  004DE2  1A05               	xorwf	(___flneg@f1+2)^0,f,c
  9282  004DE4  0E80               	movlw	128
  9283  004DE6  1A06               	xorwf	(___flneg@f1+3)^0,f,c
  9284  004DE8                     l4488:
  9285  004DE8  C003  F003         	movff	___flneg@f1,?___flneg
  9286  004DEC  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  9287  004DF0  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  9288  004DF4  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  9289  004DF8  0012               	return		;funcret
  9290  004DFA                     __end_of___flneg:
  9291                           	opt callstack 0
  9292                           
  9293 ;; *************** function ___flge *****************
  9294 ;; Defined at:
  9295 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;  ff1             4   41[COMRAM] unsigned char 
  9298 ;;  ff2             4   45[COMRAM] unsigned char 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;		None               void
  9303 ;; Registers used:
  9304 ;;		wreg, status,2, status,0
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9310 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9312 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9313 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9314 ;;Total ram usage:       12 bytes
  9315 ;; Hardware stack levels used:    1
  9316 ;; Hardware stack levels required when called:    3
  9317 ;; This function calls:
  9318 ;;		Nothing
  9319 ;; This function is called by:
  9320 ;;		_efgtoa
  9321 ;; This function uses a non-reentrant model
  9322 ;;
  9323                           
  9324                           	psect	text51
  9325  003B40                     __ptext51:
  9326                           	opt callstack 0
  9327  003B40                     ___flge:
  9328                           	opt callstack 21
  9329  003B40  0E00               	movlw	0
  9330  003B42  142A               	andwf	___flge@ff1^0,w,c
  9331  003B44  6E32               	movwf	??___flge^0,c
  9332  003B46  0E00               	movlw	0
  9333  003B48  142B               	andwf	(___flge@ff1+1)^0,w,c
  9334  003B4A  6E33               	movwf	(??___flge+1)^0,c
  9335  003B4C  0E80               	movlw	128
  9336  003B4E  142C               	andwf	(___flge@ff1+2)^0,w,c
  9337  003B50  6E34               	movwf	(??___flge+2)^0,c
  9338  003B52  0E7F               	movlw	127
  9339  003B54  142D               	andwf	(___flge@ff1+3)^0,w,c
  9340  003B56  6E35               	movwf	(??___flge+3)^0,c
  9341  003B58  5032               	movf	??___flge^0,w,c
  9342  003B5A  1033               	iorwf	(??___flge+1)^0,w,c
  9343  003B5C  1034               	iorwf	(??___flge+2)^0,w,c
  9344  003B5E  1035               	iorwf	(??___flge+3)^0,w,c
  9345  003B60  A4D8               	btfss	status,2,c
  9346  003B62  EFB5  F01D         	goto	u4561
  9347  003B66  EFB7  F01D         	goto	u4560
  9348  003B6A                     u4561:
  9349  003B6A  EFBF  F01D         	goto	l4466
  9350  003B6E                     u4560:
  9351  003B6E  0E00               	movlw	0
  9352  003B70  6E2A               	movwf	___flge@ff1^0,c
  9353  003B72  0E00               	movlw	0
  9354  003B74  6E2B               	movwf	(___flge@ff1+1)^0,c
  9355  003B76  0E00               	movlw	0
  9356  003B78  6E2C               	movwf	(___flge@ff1+2)^0,c
  9357  003B7A  0E00               	movlw	0
  9358  003B7C  6E2D               	movwf	(___flge@ff1+3)^0,c
  9359  003B7E                     l4466:
  9360  003B7E  0E00               	movlw	0
  9361  003B80  142E               	andwf	___flge@ff2^0,w,c
  9362  003B82  6E32               	movwf	??___flge^0,c
  9363  003B84  0E00               	movlw	0
  9364  003B86  142F               	andwf	(___flge@ff2+1)^0,w,c
  9365  003B88  6E33               	movwf	(??___flge+1)^0,c
  9366  003B8A  0E80               	movlw	128
  9367  003B8C  1430               	andwf	(___flge@ff2+2)^0,w,c
  9368  003B8E  6E34               	movwf	(??___flge+2)^0,c
  9369  003B90  0E7F               	movlw	127
  9370  003B92  1431               	andwf	(___flge@ff2+3)^0,w,c
  9371  003B94  6E35               	movwf	(??___flge+3)^0,c
  9372  003B96  5032               	movf	??___flge^0,w,c
  9373  003B98  1033               	iorwf	(??___flge+1)^0,w,c
  9374  003B9A  1034               	iorwf	(??___flge+2)^0,w,c
  9375  003B9C  1035               	iorwf	(??___flge+3)^0,w,c
  9376  003B9E  A4D8               	btfss	status,2,c
  9377  003BA0  EFD4  F01D         	goto	u4571
  9378  003BA4  EFD6  F01D         	goto	u4570
  9379  003BA8                     u4571:
  9380  003BA8  EFDE  F01D         	goto	l4470
  9381  003BAC                     u4570:
  9382  003BAC  0E00               	movlw	0
  9383  003BAE  6E2E               	movwf	___flge@ff2^0,c
  9384  003BB0  0E00               	movlw	0
  9385  003BB2  6E2F               	movwf	(___flge@ff2+1)^0,c
  9386  003BB4  0E00               	movlw	0
  9387  003BB6  6E30               	movwf	(___flge@ff2+2)^0,c
  9388  003BB8  0E00               	movlw	0
  9389  003BBA  6E31               	movwf	(___flge@ff2+3)^0,c
  9390  003BBC                     l4470:
  9391  003BBC  AE2D               	btfss	(___flge@ff1+3)^0,7,c
  9392  003BBE  EFE3  F01D         	goto	u4581
  9393  003BC2  EFE5  F01D         	goto	u4580
  9394  003BC6                     u4581:
  9395  003BC6  EFEE  F01D         	goto	l4474
  9396  003BCA                     u4580:
  9397  003BCA  6C2A               	negf	___flge@ff1^0,c
  9398  003BCC  1E2B               	comf	(___flge@ff1+1)^0,f,c
  9399  003BCE  B0D8               	btfsc	status,0,c
  9400  003BD0  2A2B               	incf	(___flge@ff1+1)^0,f,c
  9401  003BD2  1E2C               	comf	(___flge@ff1+2)^0,f,c
  9402  003BD4  B0D8               	btfsc	status,0,c
  9403  003BD6  2A2C               	incf	(___flge@ff1+2)^0,f,c
  9404  003BD8  0E80               	movlw	128
  9405  003BDA  562D               	subfwb	(___flge@ff1+3)^0,f,c
  9406  003BDC                     l4474:
  9407  003BDC  AE31               	btfss	(___flge@ff2+3)^0,7,c
  9408  003BDE  EFF3  F01D         	goto	u4591
  9409  003BE2  EFF5  F01D         	goto	u4590
  9410  003BE6                     u4591:
  9411  003BE6  EFFE  F01D         	goto	l1075
  9412  003BEA                     u4590:
  9413  003BEA  6C2E               	negf	___flge@ff2^0,c
  9414  003BEC  1E2F               	comf	(___flge@ff2+1)^0,f,c
  9415  003BEE  B0D8               	btfsc	status,0,c
  9416  003BF0  2A2F               	incf	(___flge@ff2+1)^0,f,c
  9417  003BF2  1E30               	comf	(___flge@ff2+2)^0,f,c
  9418  003BF4  B0D8               	btfsc	status,0,c
  9419  003BF6  2A30               	incf	(___flge@ff2+2)^0,f,c
  9420  003BF8  0E80               	movlw	128
  9421  003BFA  5631               	subfwb	(___flge@ff2+3)^0,f,c
  9422  003BFC                     l1075:
  9423  003BFC  0E00               	movlw	0
  9424  003BFE  1A2A               	xorwf	___flge@ff1^0,f,c
  9425  003C00  0E00               	movlw	0
  9426  003C02  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
  9427  003C04  0E00               	movlw	0
  9428  003C06  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
  9429  003C08  0E80               	movlw	128
  9430  003C0A  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
  9431  003C0C  0E00               	movlw	0
  9432  003C0E  1A2E               	xorwf	___flge@ff2^0,f,c
  9433  003C10  0E00               	movlw	0
  9434  003C12  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
  9435  003C14  0E00               	movlw	0
  9436  003C16  1A30               	xorwf	(___flge@ff2+2)^0,f,c
  9437  003C18  0E80               	movlw	128
  9438  003C1A  1A31               	xorwf	(___flge@ff2+3)^0,f,c
  9439  003C1C  502E               	movf	___flge@ff2^0,w,c
  9440  003C1E  5C2A               	subwf	___flge@ff1^0,w,c
  9441  003C20  502F               	movf	(___flge@ff2+1)^0,w,c
  9442  003C22  582B               	subwfb	(___flge@ff1+1)^0,w,c
  9443  003C24  5030               	movf	(___flge@ff2+2)^0,w,c
  9444  003C26  582C               	subwfb	(___flge@ff1+2)^0,w,c
  9445  003C28  5031               	movf	(___flge@ff2+3)^0,w,c
  9446  003C2A  582D               	subwfb	(___flge@ff1+3)^0,w,c
  9447  003C2C  B0D8               	btfsc	status,0,c
  9448  003C2E  EF1B  F01E         	goto	u4601
  9449  003C32  EF1D  F01E         	goto	u4600
  9450  003C36                     u4601:
  9451  003C36  EF20  F01E         	goto	l4480
  9452  003C3A                     u4600:
  9453  003C3A  90D8               	bcf	status,0,c
  9454  003C3C  EF21  F01E         	goto	l1080
  9455  003C40                     l4480:
  9456  003C40  80D8               	bsf	status,0,c
  9457  003C42                     l1080:
  9458  003C42  0012               	return		;funcret
  9459  003C44                     __end_of___flge:
  9460                           	opt callstack 0
  9461                           
  9462 ;; *************** function ___fleq *****************
  9463 ;; Defined at:
  9464 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  9465 ;; Parameters:    Size  Location     Type
  9466 ;;  ff1             4    2[COMRAM] unsigned char 
  9467 ;;  ff2             4    6[COMRAM] unsigned char 
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;		None
  9470 ;; Return value:  Size  Location     Type
  9471 ;;		None               void
  9472 ;; Registers used:
  9473 ;;		wreg, status,2, status,0
  9474 ;; Tracked objects:
  9475 ;;		On entry : 0/0
  9476 ;;		On exit  : 0/0
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9479 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9481 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9482 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9483 ;;Total ram usage:       12 bytes
  9484 ;; Hardware stack levels used:    1
  9485 ;; Hardware stack levels required when called:    3
  9486 ;; This function calls:
  9487 ;;		Nothing
  9488 ;; This function is called by:
  9489 ;;		_efgtoa
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493                           	psect	text52
  9494  0044CA                     __ptext52:
  9495                           	opt callstack 0
  9496  0044CA                     ___fleq:
  9497                           	opt callstack 21
  9498  0044CA  0E00               	movlw	0
  9499  0044CC  1403               	andwf	___fleq@ff1^0,w,c
  9500  0044CE  6E0B               	movwf	??___fleq^0,c
  9501  0044D0  0E00               	movlw	0
  9502  0044D2  1404               	andwf	(___fleq@ff1+1)^0,w,c
  9503  0044D4  6E0C               	movwf	(??___fleq+1)^0,c
  9504  0044D6  0E80               	movlw	128
  9505  0044D8  1405               	andwf	(___fleq@ff1+2)^0,w,c
  9506  0044DA  6E0D               	movwf	(??___fleq+2)^0,c
  9507  0044DC  0E7F               	movlw	127
  9508  0044DE  1406               	andwf	(___fleq@ff1+3)^0,w,c
  9509  0044E0  6E0E               	movwf	(??___fleq+3)^0,c
  9510  0044E2  500B               	movf	??___fleq^0,w,c
  9511  0044E4  100C               	iorwf	(??___fleq+1)^0,w,c
  9512  0044E6  100D               	iorwf	(??___fleq+2)^0,w,c
  9513  0044E8  100E               	iorwf	(??___fleq+3)^0,w,c
  9514  0044EA  A4D8               	btfss	status,2,c
  9515  0044EC  EF7A  F022         	goto	u4531
  9516  0044F0  EF7C  F022         	goto	u4530
  9517  0044F4                     u4531:
  9518  0044F4  EF84  F022         	goto	l4450
  9519  0044F8                     u4530:
  9520  0044F8  0E00               	movlw	0
  9521  0044FA  6E03               	movwf	___fleq@ff1^0,c
  9522  0044FC  0E00               	movlw	0
  9523  0044FE  6E04               	movwf	(___fleq@ff1+1)^0,c
  9524  004500  0E00               	movlw	0
  9525  004502  6E05               	movwf	(___fleq@ff1+2)^0,c
  9526  004504  0E00               	movlw	0
  9527  004506  6E06               	movwf	(___fleq@ff1+3)^0,c
  9528  004508                     l4450:
  9529  004508  0E00               	movlw	0
  9530  00450A  1407               	andwf	___fleq@ff2^0,w,c
  9531  00450C  6E0B               	movwf	??___fleq^0,c
  9532  00450E  0E00               	movlw	0
  9533  004510  1408               	andwf	(___fleq@ff2+1)^0,w,c
  9534  004512  6E0C               	movwf	(??___fleq+1)^0,c
  9535  004514  0E80               	movlw	128
  9536  004516  1409               	andwf	(___fleq@ff2+2)^0,w,c
  9537  004518  6E0D               	movwf	(??___fleq+2)^0,c
  9538  00451A  0E7F               	movlw	127
  9539  00451C  140A               	andwf	(___fleq@ff2+3)^0,w,c
  9540  00451E  6E0E               	movwf	(??___fleq+3)^0,c
  9541  004520  500B               	movf	??___fleq^0,w,c
  9542  004522  100C               	iorwf	(??___fleq+1)^0,w,c
  9543  004524  100D               	iorwf	(??___fleq+2)^0,w,c
  9544  004526  100E               	iorwf	(??___fleq+3)^0,w,c
  9545  004528  A4D8               	btfss	status,2,c
  9546  00452A  EF99  F022         	goto	u4541
  9547  00452E  EF9B  F022         	goto	u4540
  9548  004532                     u4541:
  9549  004532  EFA3  F022         	goto	l4454
  9550  004536                     u4540:
  9551  004536  0E00               	movlw	0
  9552  004538  6E07               	movwf	___fleq@ff2^0,c
  9553  00453A  0E00               	movlw	0
  9554  00453C  6E08               	movwf	(___fleq@ff2+1)^0,c
  9555  00453E  0E00               	movlw	0
  9556  004540  6E09               	movwf	(___fleq@ff2+2)^0,c
  9557  004542  0E00               	movlw	0
  9558  004544  6E0A               	movwf	(___fleq@ff2+3)^0,c
  9559  004546                     l4454:
  9560  004546  5007               	movf	___fleq@ff2^0,w,c
  9561  004548  1803               	xorwf	___fleq@ff1^0,w,c
  9562  00454A  E10F               	bnz	u4550
  9563  00454C  5008               	movf	(___fleq@ff2+1)^0,w,c
  9564  00454E  1804               	xorwf	(___fleq@ff1+1)^0,w,c
  9565  004550  E10C               	bnz	u4550
  9566  004552  5009               	movf	(___fleq@ff2+2)^0,w,c
  9567  004554  1805               	xorwf	(___fleq@ff1+2)^0,w,c
  9568  004556  E109               	bnz	u4550
  9569  004558  500A               	movf	(___fleq@ff2+3)^0,w,c
  9570  00455A  1806               	xorwf	(___fleq@ff1+3)^0,w,c
  9571  00455C  B4D8               	btfsc	status,2,c
  9572  00455E  EFB3  F022         	goto	u4551
  9573  004562  EFB5  F022         	goto	u4550
  9574  004566                     u4551:
  9575  004566  EFB8  F022         	goto	l4458
  9576  00456A                     u4550:
  9577  00456A  90D8               	bcf	status,0,c
  9578  00456C  EFB9  F022         	goto	l1069
  9579  004570                     l4458:
  9580  004570  80D8               	bsf	status,0,c
  9581  004572                     l1069:
  9582  004572  0012               	return		;funcret
  9583  004574                     __end_of___fleq:
  9584                           	opt callstack 0
  9585                           
  9586 ;; *************** function ___fldiv *****************
  9587 ;; Defined at:
  9588 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  b               4    2[COMRAM] unsigned char 
  9591 ;;  a               4    6[COMRAM] unsigned char 
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;  grs             4   21[COMRAM] unsigned long 
  9594 ;;  rem             4   14[COMRAM] unsigned long 
  9595 ;;  new_exp         2   19[COMRAM] short 
  9596 ;;  aexp            1   26[COMRAM] unsigned char 
  9597 ;;  bexp            1   25[COMRAM] unsigned char 
  9598 ;;  sign            1   18[COMRAM] unsigned char 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  4    2[COMRAM] unsigned char 
  9601 ;; Registers used:
  9602 ;;		wreg, status,2, status,0
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9608 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9609 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9610 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9611 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9612 ;;Total ram usage:       25 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:    3
  9615 ;; This function calls:
  9616 ;;		Nothing
  9617 ;; This function is called by:
  9618 ;;		_efgtoa
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           	psect	text53
  9623  002B16                     __ptext53:
  9624                           	opt callstack 0
  9625  002B16                     ___fldiv:
  9626                           	opt callstack 21
  9627  002B16  5006               	movf	(___fldiv@b+3)^0,w,c
  9628  002B18  0B80               	andlw	128
  9629  002B1A  6E13               	movwf	___fldiv@sign^0,c
  9630  002B1C  5006               	movf	(___fldiv@b+3)^0,w,c
  9631  002B1E  2406               	addwf	(___fldiv@b+3)^0,w,c
  9632  002B20  6E1A               	movwf	___fldiv@bexp^0,c
  9633  002B22  AE05               	btfss	(___fldiv@b+2)^0,7,c
  9634  002B24  EF96  F015         	goto	u3991
  9635  002B28  EF98  F015         	goto	u3990
  9636  002B2C                     u3991:
  9637  002B2C  EF99  F015         	goto	l4098
  9638  002B30                     u3990:
  9639  002B30  801A               	bsf	___fldiv@bexp^0,0,c
  9640  002B32                     l4098:
  9641  002B32  501A               	movf	___fldiv@bexp^0,w,c
  9642  002B34  B4D8               	btfsc	status,2,c
  9643  002B36  EF9F  F015         	goto	u4001
  9644  002B3A  EFA1  F015         	goto	u4000
  9645  002B3E                     u4001:
  9646  002B3E  EFB6  F015         	goto	l4108
  9647  002B42                     u4000:
  9648  002B42  281A               	incf	___fldiv@bexp^0,w,c
  9649  002B44  A4D8               	btfss	status,2,c
  9650  002B46  EFA7  F015         	goto	u4011
  9651  002B4A  EFA9  F015         	goto	u4010
  9652  002B4E                     u4011:
  9653  002B4E  EFB1  F015         	goto	l4104
  9654  002B52                     u4010:
  9655  002B52  0E00               	movlw	0
  9656  002B54  6E03               	movwf	___fldiv@b^0,c
  9657  002B56  0E00               	movlw	0
  9658  002B58  6E04               	movwf	(___fldiv@b+1)^0,c
  9659  002B5A  0E00               	movlw	0
  9660  002B5C  6E05               	movwf	(___fldiv@b+2)^0,c
  9661  002B5E  0E00               	movlw	0
  9662  002B60  6E06               	movwf	(___fldiv@b+3)^0,c
  9663  002B62                     l4104:
  9664  002B62  8E05               	bsf	(___fldiv@b+2)^0,7,c
  9665  002B64  0E00               	movlw	0
  9666  002B66  6E06               	movwf	(___fldiv@b+3)^0,c
  9667  002B68  EFBE  F015         	goto	l4110
  9668  002B6C                     l4108:
  9669  002B6C  0E00               	movlw	0
  9670  002B6E  6E03               	movwf	___fldiv@b^0,c
  9671  002B70  0E00               	movlw	0
  9672  002B72  6E04               	movwf	(___fldiv@b+1)^0,c
  9673  002B74  0E00               	movlw	0
  9674  002B76  6E05               	movwf	(___fldiv@b+2)^0,c
  9675  002B78  0E00               	movlw	0
  9676  002B7A  6E06               	movwf	(___fldiv@b+3)^0,c
  9677  002B7C                     l4110:
  9678  002B7C  500A               	movf	(___fldiv@a+3)^0,w,c
  9679  002B7E  0B80               	andlw	128
  9680  002B80  1A13               	xorwf	___fldiv@sign^0,f,c
  9681  002B82  500A               	movf	(___fldiv@a+3)^0,w,c
  9682  002B84  240A               	addwf	(___fldiv@a+3)^0,w,c
  9683  002B86  6E1B               	movwf	___fldiv@aexp^0,c
  9684  002B88  AE09               	btfss	(___fldiv@a+2)^0,7,c
  9685  002B8A  EFC9  F015         	goto	u4021
  9686  002B8E  EFCB  F015         	goto	u4020
  9687  002B92                     u4021:
  9688  002B92  EFCC  F015         	goto	l4118
  9689  002B96                     u4020:
  9690  002B96  801B               	bsf	___fldiv@aexp^0,0,c
  9691  002B98                     l4118:
  9692  002B98  501B               	movf	___fldiv@aexp^0,w,c
  9693  002B9A  B4D8               	btfsc	status,2,c
  9694  002B9C  EFD2  F015         	goto	u4031
  9695  002BA0  EFD4  F015         	goto	u4030
  9696  002BA4                     u4031:
  9697  002BA4  EFE9  F015         	goto	l4128
  9698  002BA8                     u4030:
  9699  002BA8  281B               	incf	___fldiv@aexp^0,w,c
  9700  002BAA  A4D8               	btfss	status,2,c
  9701  002BAC  EFDA  F015         	goto	u4041
  9702  002BB0  EFDC  F015         	goto	u4040
  9703  002BB4                     u4041:
  9704  002BB4  EFE4  F015         	goto	l4124
  9705  002BB8                     u4040:
  9706  002BB8  0E00               	movlw	0
  9707  002BBA  6E07               	movwf	___fldiv@a^0,c
  9708  002BBC  0E00               	movlw	0
  9709  002BBE  6E08               	movwf	(___fldiv@a+1)^0,c
  9710  002BC0  0E00               	movlw	0
  9711  002BC2  6E09               	movwf	(___fldiv@a+2)^0,c
  9712  002BC4  0E00               	movlw	0
  9713  002BC6  6E0A               	movwf	(___fldiv@a+3)^0,c
  9714  002BC8                     l4124:
  9715  002BC8  8E09               	bsf	(___fldiv@a+2)^0,7,c
  9716  002BCA  0E00               	movlw	0
  9717  002BCC  6E0A               	movwf	(___fldiv@a+3)^0,c
  9718  002BCE  EFF1  F015         	goto	l4130
  9719  002BD2                     l4128:
  9720  002BD2  0E00               	movlw	0
  9721  002BD4  6E07               	movwf	___fldiv@a^0,c
  9722  002BD6  0E00               	movlw	0
  9723  002BD8  6E08               	movwf	(___fldiv@a+1)^0,c
  9724  002BDA  0E00               	movlw	0
  9725  002BDC  6E09               	movwf	(___fldiv@a+2)^0,c
  9726  002BDE  0E00               	movlw	0
  9727  002BE0  6E0A               	movwf	(___fldiv@a+3)^0,c
  9728  002BE2                     l4130:
  9729  002BE2  5007               	movf	___fldiv@a^0,w,c
  9730  002BE4  1008               	iorwf	(___fldiv@a+1)^0,w,c
  9731  002BE6  1009               	iorwf	(___fldiv@a+2)^0,w,c
  9732  002BE8  100A               	iorwf	(___fldiv@a+3)^0,w,c
  9733  002BEA  A4D8               	btfss	status,2,c
  9734  002BEC  EFFA  F015         	goto	u4051
  9735  002BF0  EFFC  F015         	goto	u4050
  9736  002BF4                     u4051:
  9737  002BF4  EF14  F016         	goto	l4142
  9738  002BF8                     u4050:
  9739  002BF8  0E00               	movlw	0
  9740  002BFA  6E03               	movwf	___fldiv@b^0,c
  9741  002BFC  0E00               	movlw	0
  9742  002BFE  6E04               	movwf	(___fldiv@b+1)^0,c
  9743  002C00  0E00               	movlw	0
  9744  002C02  6E05               	movwf	(___fldiv@b+2)^0,c
  9745  002C04  0E00               	movlw	0
  9746  002C06  6E06               	movwf	(___fldiv@b+3)^0,c
  9747  002C08  0E80               	movlw	128
  9748  002C0A  1205               	iorwf	(___fldiv@b+2)^0,f,c
  9749  002C0C  0E7F               	movlw	127
  9750  002C0E  1206               	iorwf	(___fldiv@b+3)^0,f,c
  9751  002C10                     l4136:
  9752  002C10  5013               	movf	___fldiv@sign^0,w,c
  9753  002C12  1206               	iorwf	(___fldiv@b+3)^0,f,c
  9754  002C14  C003  F003         	movff	___fldiv@b,?___fldiv
  9755  002C18  C004  F004         	movff	___fldiv@b+1,?___fldiv+1
  9756  002C1C  C005  F005         	movff	___fldiv@b+2,?___fldiv+2
  9757  002C20  C006  F006         	movff	___fldiv@b+3,?___fldiv+3
  9758  002C24  EF57  F017         	goto	l1392
  9759  002C28                     l4142:
  9760  002C28  501A               	movf	___fldiv@bexp^0,w,c
  9761  002C2A  A4D8               	btfss	status,2,c
  9762  002C2C  EF1A  F016         	goto	u4061
  9763  002C30  EF1C  F016         	goto	u4060
  9764  002C34                     u4061:
  9765  002C34  EF26  F016         	goto	l4150
  9766  002C38                     u4060:
  9767  002C38  0E00               	movlw	0
  9768  002C3A  6E03               	movwf	?___fldiv^0,c
  9769  002C3C  0E00               	movlw	0
  9770  002C3E  6E04               	movwf	(?___fldiv+1)^0,c
  9771  002C40  0E00               	movlw	0
  9772  002C42  6E05               	movwf	(?___fldiv+2)^0,c
  9773  002C44  0E00               	movlw	0
  9774  002C46  6E06               	movwf	(?___fldiv+3)^0,c
  9775  002C48  EF57  F017         	goto	l1392
  9776  002C4C                     l4150:
  9777  002C4C  501B               	movf	___fldiv@aexp^0,w,c
  9778  002C4E  C01A  F00B         	movff	___fldiv@bexp,??___fldiv
  9779  002C52  6A0C               	clrf	(??___fldiv+1)^0,c
  9780  002C54  5E0B               	subwf	??___fldiv^0,f,c
  9781  002C56  0E00               	movlw	0
  9782  002C58  5A0C               	subwfb	(??___fldiv+1)^0,f,c
  9783  002C5A  0E7F               	movlw	127
  9784  002C5C  240B               	addwf	??___fldiv^0,w,c
  9785  002C5E  6E14               	movwf	___fldiv@new_exp^0,c
  9786  002C60  0E00               	movlw	0
  9787  002C62  200C               	addwfc	(??___fldiv+1)^0,w,c
  9788  002C64  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  9789  002C66  C003  F00F         	movff	___fldiv@b,___fldiv@rem
  9790  002C6A  C004  F010         	movff	___fldiv@b+1,___fldiv@rem+1
  9791  002C6E  C005  F011         	movff	___fldiv@b+2,___fldiv@rem+2
  9792  002C72  C006  F012         	movff	___fldiv@b+3,___fldiv@rem+3
  9793  002C76  0E00               	movlw	0
  9794  002C78  6E03               	movwf	___fldiv@b^0,c
  9795  002C7A  0E00               	movlw	0
  9796  002C7C  6E04               	movwf	(___fldiv@b+1)^0,c
  9797  002C7E  0E00               	movlw	0
  9798  002C80  6E05               	movwf	(___fldiv@b+2)^0,c
  9799  002C82  0E00               	movlw	0
  9800  002C84  6E06               	movwf	(___fldiv@b+3)^0,c
  9801  002C86  0E00               	movlw	0
  9802  002C88  6E16               	movwf	___fldiv@grs^0,c
  9803  002C8A  0E00               	movlw	0
  9804  002C8C  6E17               	movwf	(___fldiv@grs+1)^0,c
  9805  002C8E  0E00               	movlw	0
  9806  002C90  6E18               	movwf	(___fldiv@grs+2)^0,c
  9807  002C92  0E00               	movlw	0
  9808  002C94  6E19               	movwf	(___fldiv@grs+3)^0,c
  9809  002C96  0E00               	movlw	0
  9810  002C98  6E1B               	movwf	___fldiv@aexp^0,c
  9811  002C9A  EF87  F016         	goto	l1394
  9812  002C9E                     l4160:
  9813  002C9E  501B               	movf	___fldiv@aexp^0,w,c
  9814  002CA0  B4D8               	btfsc	status,2,c
  9815  002CA2  EF55  F016         	goto	u4071
  9816  002CA6  EF57  F016         	goto	u4070
  9817  002CAA                     u4071:
  9818  002CAA  EF6E  F016         	goto	l4168
  9819  002CAE                     u4070:
  9820  002CAE  90D8               	bcf	status,0,c
  9821  002CB0  360F               	rlcf	___fldiv@rem^0,f,c
  9822  002CB2  3610               	rlcf	(___fldiv@rem+1)^0,f,c
  9823  002CB4  3611               	rlcf	(___fldiv@rem+2)^0,f,c
  9824  002CB6  3612               	rlcf	(___fldiv@rem+3)^0,f,c
  9825  002CB8  90D8               	bcf	status,0,c
  9826  002CBA  3603               	rlcf	___fldiv@b^0,f,c
  9827  002CBC  3604               	rlcf	(___fldiv@b+1)^0,f,c
  9828  002CBE  3605               	rlcf	(___fldiv@b+2)^0,f,c
  9829  002CC0  3606               	rlcf	(___fldiv@b+3)^0,f,c
  9830  002CC2  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  9831  002CC4  EF66  F016         	goto	u4081
  9832  002CC8  EF68  F016         	goto	u4080
  9833  002CCC                     u4081:
  9834  002CCC  EF69  F016         	goto	l1397
  9835  002CD0                     u4080:
  9836  002CD0  8003               	bsf	___fldiv@b^0,0,c
  9837  002CD2                     l1397:
  9838  002CD2  90D8               	bcf	status,0,c
  9839  002CD4  3616               	rlcf	___fldiv@grs^0,f,c
  9840  002CD6  3617               	rlcf	(___fldiv@grs+1)^0,f,c
  9841  002CD8  3618               	rlcf	(___fldiv@grs+2)^0,f,c
  9842  002CDA  3619               	rlcf	(___fldiv@grs+3)^0,f,c
  9843  002CDC                     l4168:
  9844  002CDC  5007               	movf	___fldiv@a^0,w,c
  9845  002CDE  5C0F               	subwf	___fldiv@rem^0,w,c
  9846  002CE0  5008               	movf	(___fldiv@a+1)^0,w,c
  9847  002CE2  5810               	subwfb	(___fldiv@rem+1)^0,w,c
  9848  002CE4  5009               	movf	(___fldiv@a+2)^0,w,c
  9849  002CE6  5811               	subwfb	(___fldiv@rem+2)^0,w,c
  9850  002CE8  500A               	movf	(___fldiv@a+3)^0,w,c
  9851  002CEA  5812               	subwfb	(___fldiv@rem+3)^0,w,c
  9852  002CEC  A0D8               	btfss	status,0,c
  9853  002CEE  EF7B  F016         	goto	u4091
  9854  002CF2  EF7D  F016         	goto	u4090
  9855  002CF6                     u4091:
  9856  002CF6  EF86  F016         	goto	l4174
  9857  002CFA                     u4090:
  9858  002CFA  8C19               	bsf	(___fldiv@grs+3)^0,6,c
  9859  002CFC  5007               	movf	___fldiv@a^0,w,c
  9860  002CFE  5E0F               	subwf	___fldiv@rem^0,f,c
  9861  002D00  5008               	movf	(___fldiv@a+1)^0,w,c
  9862  002D02  5A10               	subwfb	(___fldiv@rem+1)^0,f,c
  9863  002D04  5009               	movf	(___fldiv@a+2)^0,w,c
  9864  002D06  5A11               	subwfb	(___fldiv@rem+2)^0,f,c
  9865  002D08  500A               	movf	(___fldiv@a+3)^0,w,c
  9866  002D0A  5A12               	subwfb	(___fldiv@rem+3)^0,f,c
  9867  002D0C                     l4174:
  9868  002D0C  2A1B               	incf	___fldiv@aexp^0,f,c
  9869  002D0E                     l1394:
  9870  002D0E  0E19               	movlw	25
  9871  002D10  641B               	cpfsgt	___fldiv@aexp^0,c
  9872  002D12  EF8D  F016         	goto	u4101
  9873  002D16  EF8F  F016         	goto	u4100
  9874  002D1A                     u4101:
  9875  002D1A  EF4F  F016         	goto	l4160
  9876  002D1E                     u4100:
  9877  002D1E  500F               	movf	___fldiv@rem^0,w,c
  9878  002D20  1010               	iorwf	(___fldiv@rem+1)^0,w,c
  9879  002D22  1011               	iorwf	(___fldiv@rem+2)^0,w,c
  9880  002D24  1012               	iorwf	(___fldiv@rem+3)^0,w,c
  9881  002D26  B4D8               	btfsc	status,2,c
  9882  002D28  EF98  F016         	goto	u4111
  9883  002D2C  EF9A  F016         	goto	u4110
  9884  002D30                     u4111:
  9885  002D30  EFB2  F016         	goto	l4186
  9886  002D34                     u4110:
  9887  002D34  8016               	bsf	___fldiv@grs^0,0,c
  9888  002D36  EFB2  F016         	goto	l4186
  9889  002D3A                     l4180:
  9890  002D3A  90D8               	bcf	status,0,c
  9891  002D3C  3603               	rlcf	___fldiv@b^0,f,c
  9892  002D3E  3604               	rlcf	(___fldiv@b+1)^0,f,c
  9893  002D40  3605               	rlcf	(___fldiv@b+2)^0,f,c
  9894  002D42  3606               	rlcf	(___fldiv@b+3)^0,f,c
  9895  002D44  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  9896  002D46  EFA7  F016         	goto	u4121
  9897  002D4A  EFA9  F016         	goto	u4120
  9898  002D4E                     u4121:
  9899  002D4E  EFAA  F016         	goto	l1403
  9900  002D52                     u4120:
  9901  002D52  8003               	bsf	___fldiv@b^0,0,c
  9902  002D54                     l1403:
  9903  002D54  90D8               	bcf	status,0,c
  9904  002D56  3616               	rlcf	___fldiv@grs^0,f,c
  9905  002D58  3617               	rlcf	(___fldiv@grs+1)^0,f,c
  9906  002D5A  3618               	rlcf	(___fldiv@grs+2)^0,f,c
  9907  002D5C  3619               	rlcf	(___fldiv@grs+3)^0,f,c
  9908  002D5E  0614               	decf	___fldiv@new_exp^0,f,c
  9909  002D60  A0D8               	btfss	status,0,c
  9910  002D62  0615               	decf	(___fldiv@new_exp+1)^0,f,c
  9911  002D64                     l4186:
  9912  002D64  AE05               	btfss	(___fldiv@b+2)^0,7,c
  9913  002D66  EFB7  F016         	goto	u4131
  9914  002D6A  EFB9  F016         	goto	u4130
  9915  002D6E                     u4131:
  9916  002D6E  EF9D  F016         	goto	l4180
  9917  002D72                     u4130:
  9918  002D72  0E00               	movlw	0
  9919  002D74  6E1B               	movwf	___fldiv@aexp^0,c
  9920  002D76  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  9921  002D78  EFC0  F016         	goto	u4141
  9922  002D7C  EFC2  F016         	goto	u4140
  9923  002D80                     u4141:
  9924  002D80  EFE6  F016         	goto	l1405
  9925  002D84                     u4140:
  9926  002D84  0EFF               	movlw	255
  9927  002D86  1416               	andwf	___fldiv@grs^0,w,c
  9928  002D88  6E0B               	movwf	??___fldiv^0,c
  9929  002D8A  0EFF               	movlw	255
  9930  002D8C  1417               	andwf	(___fldiv@grs+1)^0,w,c
  9931  002D8E  6E0C               	movwf	(??___fldiv+1)^0,c
  9932  002D90  0EFF               	movlw	255
  9933  002D92  1418               	andwf	(___fldiv@grs+2)^0,w,c
  9934  002D94  6E0D               	movwf	(??___fldiv+2)^0,c
  9935  002D96  0E7F               	movlw	127
  9936  002D98  1419               	andwf	(___fldiv@grs+3)^0,w,c
  9937  002D9A  6E0E               	movwf	(??___fldiv+3)^0,c
  9938  002D9C  500B               	movf	??___fldiv^0,w,c
  9939  002D9E  100C               	iorwf	(??___fldiv+1)^0,w,c
  9940  002DA0  100D               	iorwf	(??___fldiv+2)^0,w,c
  9941  002DA2  100E               	iorwf	(??___fldiv+3)^0,w,c
  9942  002DA4  B4D8               	btfsc	status,2,c
  9943  002DA6  EFD7  F016         	goto	u4151
  9944  002DAA  EFD9  F016         	goto	u4150
  9945  002DAE                     u4151:
  9946  002DAE  EFDD  F016         	goto	l1406
  9947  002DB2                     u4150:
  9948  002DB2                     l4194:
  9949  002DB2  0E01               	movlw	1
  9950  002DB4  6E1B               	movwf	___fldiv@aexp^0,c
  9951  002DB6  EFE6  F016         	goto	l1405
  9952  002DBA                     l1406:
  9953  002DBA  A003               	btfss	___fldiv@b^0,0,c
  9954  002DBC  EFE2  F016         	goto	u4161
  9955  002DC0  EFE4  F016         	goto	u4160
  9956  002DC4                     u4161:
  9957  002DC4  EFE6  F016         	goto	l1405
  9958  002DC8                     u4160:
  9959  002DC8  EFD9  F016         	goto	l4194
  9960  002DCC                     l1405:
  9961  002DCC  501B               	movf	___fldiv@aexp^0,w,c
  9962  002DCE  B4D8               	btfsc	status,2,c
  9963  002DD0  EFEC  F016         	goto	u4171
  9964  002DD4  EFEE  F016         	goto	u4170
  9965  002DD8                     u4171:
  9966  002DD8  EF12  F017         	goto	l4206
  9967  002DDC                     u4170:
  9968  002DDC  0E01               	movlw	1
  9969  002DDE  2603               	addwf	___fldiv@b^0,f,c
  9970  002DE0  0E00               	movlw	0
  9971  002DE2  2204               	addwfc	(___fldiv@b+1)^0,f,c
  9972  002DE4  2205               	addwfc	(___fldiv@b+2)^0,f,c
  9973  002DE6  2206               	addwfc	(___fldiv@b+3)^0,f,c
  9974  002DE8  A006               	btfss	(___fldiv@b+3)^0,0,c
  9975  002DEA  EFF9  F016         	goto	u4181
  9976  002DEE  EFFB  F016         	goto	u4180
  9977  002DF2                     u4181:
  9978  002DF2  EF12  F017         	goto	l4206
  9979  002DF6                     u4180:
  9980  002DF6  C003  F00B         	movff	___fldiv@b,??___fldiv
  9981  002DFA  C004  F00C         	movff	___fldiv@b+1,??___fldiv+1
  9982  002DFE  C005  F00D         	movff	___fldiv@b+2,??___fldiv+2
  9983  002E02  C006  F00E         	movff	___fldiv@b+3,??___fldiv+3
  9984  002E06  340E               	rlcf	(??___fldiv+3)^0,w,c
  9985  002E08  320E               	rrcf	(??___fldiv+3)^0,f,c
  9986  002E0A  320D               	rrcf	(??___fldiv+2)^0,f,c
  9987  002E0C  320C               	rrcf	(??___fldiv+1)^0,f,c
  9988  002E0E  320B               	rrcf	??___fldiv^0,f,c
  9989  002E10  C00B  F003         	movff	??___fldiv,___fldiv@b
  9990  002E14  C00C  F004         	movff	??___fldiv+1,___fldiv@b+1
  9991  002E18  C00D  F005         	movff	??___fldiv+2,___fldiv@b+2
  9992  002E1C  C00E  F006         	movff	??___fldiv+3,___fldiv@b+3
  9993  002E20  4A14               	infsnz	___fldiv@new_exp^0,f,c
  9994  002E22  2A15               	incf	(___fldiv@new_exp+1)^0,f,c
  9995  002E24                     l4206:
  9996  002E24  BE15               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9997  002E26  EF1D  F017         	goto	u4191
  9998  002E2A  5015               	movf	(___fldiv@new_exp+1)^0,w,c
  9999  002E2C  E108               	bnz	u4190
 10000  002E2E  2814               	incf	___fldiv@new_exp^0,w,c
 10001  002E30  A0D8               	btfss	status,0,c
 10002  002E32  EF1D  F017         	goto	u4191
 10003  002E36  EF1F  F017         	goto	u4190
 10004  002E3A                     u4191:
 10005  002E3A  EF2A  F017         	goto	l4210
 10006  002E3E                     u4190:
 10007  002E3E  0E00               	movlw	0
 10008  002E40  6E15               	movwf	(___fldiv@new_exp+1)^0,c
 10009  002E42  6814               	setf	___fldiv@new_exp^0,c
 10010  002E44  0E00               	movlw	0
 10011  002E46  6E03               	movwf	___fldiv@b^0,c
 10012  002E48  0E00               	movlw	0
 10013  002E4A  6E04               	movwf	(___fldiv@b+1)^0,c
 10014  002E4C  0E00               	movlw	0
 10015  002E4E  6E05               	movwf	(___fldiv@b+2)^0,c
 10016  002E50  0E00               	movlw	0
 10017  002E52  6E06               	movwf	(___fldiv@b+3)^0,c
 10018  002E54                     l4210:
 10019  002E54  BE15               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10020  002E56  EF37  F017         	goto	u4200
 10021  002E5A  5015               	movf	(___fldiv@new_exp+1)^0,w,c
 10022  002E5C  E106               	bnz	u4201
 10023  002E5E  0414               	decf	___fldiv@new_exp^0,w,c
 10024  002E60  B0D8               	btfsc	status,0,c
 10025  002E62  EF35  F017         	goto	u4201
 10026  002E66  EF37  F017         	goto	u4200
 10027  002E6A                     u4201:
 10028  002E6A  EF45  F017         	goto	l4214
 10029  002E6E                     u4200:
 10030  002E6E  0E00               	movlw	0
 10031  002E70  6E15               	movwf	(___fldiv@new_exp+1)^0,c
 10032  002E72  0E00               	movlw	0
 10033  002E74  6E14               	movwf	___fldiv@new_exp^0,c
 10034  002E76  0E00               	movlw	0
 10035  002E78  6E03               	movwf	___fldiv@b^0,c
 10036  002E7A  0E00               	movlw	0
 10037  002E7C  6E04               	movwf	(___fldiv@b+1)^0,c
 10038  002E7E  0E00               	movlw	0
 10039  002E80  6E05               	movwf	(___fldiv@b+2)^0,c
 10040  002E82  0E00               	movlw	0
 10041  002E84  6E06               	movwf	(___fldiv@b+3)^0,c
 10042  002E86  0E00               	movlw	0
 10043  002E88  6E13               	movwf	___fldiv@sign^0,c
 10044  002E8A                     l4214:
 10045  002E8A  C014  F01A         	movff	___fldiv@new_exp,___fldiv@bexp
 10046  002E8E  A01A               	btfss	___fldiv@bexp^0,0,c
 10047  002E90  EF4C  F017         	goto	u4211
 10048  002E94  EF4E  F017         	goto	u4210
 10049  002E98                     u4211:
 10050  002E98  EF51  F017         	goto	l4220
 10051  002E9C                     u4210:
 10052  002E9C  8E05               	bsf	(___fldiv@b+2)^0,7,c
 10053  002E9E  EF52  F017         	goto	l4222
 10054  002EA2                     l4220:
 10055  002EA2  9E05               	bcf	(___fldiv@b+2)^0,7,c
 10056  002EA4                     l4222:
 10057  002EA4  90D8               	bcf	status,0,c
 10058  002EA6  301A               	rrcf	___fldiv@bexp^0,w,c
 10059  002EA8  6E06               	movwf	(___fldiv@b+3)^0,c
 10060  002EAA  EF08  F016         	goto	l4136
 10061  002EAE                     l1392:
 10062  002EAE  0012               	return		;funcret
 10063  002EB0                     __end_of___fldiv:
 10064                           	opt callstack 0
 10065                           
 10066 ;; *************** function ___awmod *****************
 10067 ;; Defined at:
 10068 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;  dividend        2    2[COMRAM] int 
 10071 ;;  divisor         2    4[COMRAM] int 
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;  sign            1    7[COMRAM] unsigned char 
 10074 ;;  counter         1    6[COMRAM] unsigned char 
 10075 ;; Return value:  Size  Location     Type
 10076 ;;                  2    2[COMRAM] int 
 10077 ;; Registers used:
 10078 ;;		wreg, status,2, status,0
 10079 ;; Tracked objects:
 10080 ;;		On entry : 0/0
 10081 ;;		On exit  : 0/0
 10082 ;;		Unchanged: 0/0
 10083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10085 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10087 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10088 ;;Total ram usage:        6 bytes
 10089 ;; Hardware stack levels used:    1
 10090 ;; Hardware stack levels required when called:    3
 10091 ;; This function calls:
 10092 ;;		Nothing
 10093 ;; This function is called by:
 10094 ;;		_efgtoa
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098                           	psect	text54
 10099  00441A                     __ptext54:
 10100                           	opt callstack 0
 10101  00441A                     ___awmod:
 10102                           	opt callstack 21
 10103  00441A  0E00               	movlw	0
 10104  00441C  6E08               	movwf	___awmod@sign^0,c
 10105  00441E  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
 10106  004420  EF16  F022         	goto	u4470
 10107  004424  EF14  F022         	goto	u4471
 10108  004428                     u4471:
 10109  004428  EF1C  F022         	goto	l4418
 10110  00442C                     u4470:
 10111  00442C  6C03               	negf	___awmod@dividend^0,c
 10112  00442E  1E04               	comf	(___awmod@dividend+1)^0,f,c
 10113  004430  B0D8               	btfsc	status,0,c
 10114  004432  2A04               	incf	(___awmod@dividend+1)^0,f,c
 10115  004434  0E01               	movlw	1
 10116  004436  6E08               	movwf	___awmod@sign^0,c
 10117  004438                     l4418:
 10118  004438  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
 10119  00443A  EF23  F022         	goto	u4480
 10120  00443E  EF21  F022         	goto	u4481
 10121  004442                     u4481:
 10122  004442  EF27  F022         	goto	l4422
 10123  004446                     u4480:
 10124  004446  6C05               	negf	___awmod@divisor^0,c
 10125  004448  1E06               	comf	(___awmod@divisor+1)^0,f,c
 10126  00444A  B0D8               	btfsc	status,0,c
 10127  00444C  2A06               	incf	(___awmod@divisor+1)^0,f,c
 10128  00444E                     l4422:
 10129  00444E  5005               	movf	___awmod@divisor^0,w,c
 10130  004450  1006               	iorwf	(___awmod@divisor+1)^0,w,c
 10131  004452  B4D8               	btfsc	status,2,c
 10132  004454  EF2E  F022         	goto	u4491
 10133  004458  EF30  F022         	goto	u4490
 10134  00445C                     u4491:
 10135  00445C  EF54  F022         	goto	l4438
 10136  004460                     u4490:
 10137  004460  0E01               	movlw	1
 10138  004462  6E07               	movwf	___awmod@counter^0,c
 10139  004464  EF38  F022         	goto	l4428
 10140  004468                     l4426:
 10141  004468  90D8               	bcf	status,0,c
 10142  00446A  3605               	rlcf	___awmod@divisor^0,f,c
 10143  00446C  3606               	rlcf	(___awmod@divisor+1)^0,f,c
 10144  00446E  2A07               	incf	___awmod@counter^0,f,c
 10145  004470                     l4428:
 10146  004470  AE06               	btfss	(___awmod@divisor+1)^0,7,c
 10147  004472  EF3D  F022         	goto	u4501
 10148  004476  EF3F  F022         	goto	u4500
 10149  00447A                     u4501:
 10150  00447A  EF34  F022         	goto	l4426
 10151  00447E                     u4500:
 10152  00447E                     l4430:
 10153  00447E  5005               	movf	___awmod@divisor^0,w,c
 10154  004480  5C03               	subwf	___awmod@dividend^0,w,c
 10155  004482  5006               	movf	(___awmod@divisor+1)^0,w,c
 10156  004484  5804               	subwfb	(___awmod@dividend+1)^0,w,c
 10157  004486  A0D8               	btfss	status,0,c
 10158  004488  EF48  F022         	goto	u4511
 10159  00448C  EF4A  F022         	goto	u4510
 10160  004490                     u4511:
 10161  004490  EF4E  F022         	goto	l4434
 10162  004494                     u4510:
 10163  004494  5005               	movf	___awmod@divisor^0,w,c
 10164  004496  5E03               	subwf	___awmod@dividend^0,f,c
 10165  004498  5006               	movf	(___awmod@divisor+1)^0,w,c
 10166  00449A  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
 10167  00449C                     l4434:
 10168  00449C  90D8               	bcf	status,0,c
 10169  00449E  3206               	rrcf	(___awmod@divisor+1)^0,f,c
 10170  0044A0  3205               	rrcf	___awmod@divisor^0,f,c
 10171  0044A2  2E07               	decfsz	___awmod@counter^0,f,c
 10172  0044A4  EF3F  F022         	goto	l4430
 10173  0044A8                     l4438:
 10174  0044A8  5008               	movf	___awmod@sign^0,w,c
 10175  0044AA  B4D8               	btfsc	status,2,c
 10176  0044AC  EF5A  F022         	goto	u4521
 10177  0044B0  EF5C  F022         	goto	u4520
 10178  0044B4                     u4521:
 10179  0044B4  EF60  F022         	goto	l4442
 10180  0044B8                     u4520:
 10181  0044B8  6C03               	negf	___awmod@dividend^0,c
 10182  0044BA  1E04               	comf	(___awmod@dividend+1)^0,f,c
 10183  0044BC  B0D8               	btfsc	status,0,c
 10184  0044BE  2A04               	incf	(___awmod@dividend+1)^0,f,c
 10185  0044C0                     l4442:
 10186  0044C0  C003  F003         	movff	___awmod@dividend,?___awmod
 10187  0044C4  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
 10188  0044C8  0012               	return		;funcret
 10189  0044CA                     __end_of___awmod:
 10190                           	opt callstack 0
 10191                           
 10192 ;; *************** function ___awdiv *****************
 10193 ;; Defined at:
 10194 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;  dividend        2    2[COMRAM] int 
 10197 ;;  divisor         2    4[COMRAM] int 
 10198 ;; Auto vars:     Size  Location     Type
 10199 ;;  quotient        2    8[COMRAM] int 
 10200 ;;  sign            1    7[COMRAM] unsigned char 
 10201 ;;  counter         1    6[COMRAM] unsigned char 
 10202 ;; Return value:  Size  Location     Type
 10203 ;;                  2    2[COMRAM] int 
 10204 ;; Registers used:
 10205 ;;		wreg, status,2, status,0
 10206 ;; Tracked objects:
 10207 ;;		On entry : 0/0
 10208 ;;		On exit  : 0/0
 10209 ;;		Unchanged: 0/0
 10210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10212 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10214 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10215 ;;Total ram usage:        8 bytes
 10216 ;; Hardware stack levels used:    1
 10217 ;; Hardware stack levels required when called:    3
 10218 ;; This function calls:
 10219 ;;		Nothing
 10220 ;; This function is called by:
 10221 ;;		_efgtoa
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225                           	psect	text55
 10226  004356                     __ptext55:
 10227                           	opt callstack 0
 10228  004356                     ___awdiv:
 10229                           	opt callstack 21
 10230  004356  0E00               	movlw	0
 10231  004358  6E08               	movwf	___awdiv@sign^0,c
 10232  00435A  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
 10233  00435C  EFB4  F021         	goto	u4410
 10234  004360  EFB2  F021         	goto	u4411
 10235  004364                     u4411:
 10236  004364  EFBA  F021         	goto	l4374
 10237  004368                     u4410:
 10238  004368  6C05               	negf	___awdiv@divisor^0,c
 10239  00436A  1E06               	comf	(___awdiv@divisor+1)^0,f,c
 10240  00436C  B0D8               	btfsc	status,0,c
 10241  00436E  2A06               	incf	(___awdiv@divisor+1)^0,f,c
 10242  004370  0E01               	movlw	1
 10243  004372  6E08               	movwf	___awdiv@sign^0,c
 10244  004374                     l4374:
 10245  004374  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
 10246  004376  EFC1  F021         	goto	u4420
 10247  00437A  EFBF  F021         	goto	u4421
 10248  00437E                     u4421:
 10249  00437E  EFC7  F021         	goto	l4380
 10250  004382                     u4420:
 10251  004382  6C03               	negf	___awdiv@dividend^0,c
 10252  004384  1E04               	comf	(___awdiv@dividend+1)^0,f,c
 10253  004386  B0D8               	btfsc	status,0,c
 10254  004388  2A04               	incf	(___awdiv@dividend+1)^0,f,c
 10255  00438A  0E01               	movlw	1
 10256  00438C  1A08               	xorwf	___awdiv@sign^0,f,c
 10257  00438E                     l4380:
 10258  00438E  0E00               	movlw	0
 10259  004390  6E0A               	movwf	(___awdiv@quotient+1)^0,c
 10260  004392  0E00               	movlw	0
 10261  004394  6E09               	movwf	___awdiv@quotient^0,c
 10262  004396  5005               	movf	___awdiv@divisor^0,w,c
 10263  004398  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
 10264  00439A  B4D8               	btfsc	status,2,c
 10265  00439C  EFD2  F021         	goto	u4431
 10266  0043A0  EFD4  F021         	goto	u4430
 10267  0043A4                     u4431:
 10268  0043A4  EFFC  F021         	goto	l4402
 10269  0043A8                     u4430:
 10270  0043A8  0E01               	movlw	1
 10271  0043AA  6E07               	movwf	___awdiv@counter^0,c
 10272  0043AC  EFDC  F021         	goto	l4388
 10273  0043B0                     l4386:
 10274  0043B0  90D8               	bcf	status,0,c
 10275  0043B2  3605               	rlcf	___awdiv@divisor^0,f,c
 10276  0043B4  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
 10277  0043B6  2A07               	incf	___awdiv@counter^0,f,c
 10278  0043B8                     l4388:
 10279  0043B8  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
 10280  0043BA  EFE1  F021         	goto	u4441
 10281  0043BE  EFE3  F021         	goto	u4440
 10282  0043C2                     u4441:
 10283  0043C2  EFD8  F021         	goto	l4386
 10284  0043C6                     u4440:
 10285  0043C6                     l4390:
 10286  0043C6  90D8               	bcf	status,0,c
 10287  0043C8  3609               	rlcf	___awdiv@quotient^0,f,c
 10288  0043CA  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
 10289  0043CC  5005               	movf	___awdiv@divisor^0,w,c
 10290  0043CE  5C03               	subwf	___awdiv@dividend^0,w,c
 10291  0043D0  5006               	movf	(___awdiv@divisor+1)^0,w,c
 10292  0043D2  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
 10293  0043D4  A0D8               	btfss	status,0,c
 10294  0043D6  EFEF  F021         	goto	u4451
 10295  0043DA  EFF1  F021         	goto	u4450
 10296  0043DE                     u4451:
 10297  0043DE  EFF6  F021         	goto	l4398
 10298  0043E2                     u4450:
 10299  0043E2  5005               	movf	___awdiv@divisor^0,w,c
 10300  0043E4  5E03               	subwf	___awdiv@dividend^0,f,c
 10301  0043E6  5006               	movf	(___awdiv@divisor+1)^0,w,c
 10302  0043E8  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
 10303  0043EA  8009               	bsf	___awdiv@quotient^0,0,c
 10304  0043EC                     l4398:
 10305  0043EC  90D8               	bcf	status,0,c
 10306  0043EE  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
 10307  0043F0  3205               	rrcf	___awdiv@divisor^0,f,c
 10308  0043F2  2E07               	decfsz	___awdiv@counter^0,f,c
 10309  0043F4  EFE3  F021         	goto	l4390
 10310  0043F8                     l4402:
 10311  0043F8  5008               	movf	___awdiv@sign^0,w,c
 10312  0043FA  B4D8               	btfsc	status,2,c
 10313  0043FC  EF02  F022         	goto	u4461
 10314  004400  EF04  F022         	goto	u4460
 10315  004404                     u4461:
 10316  004404  EF08  F022         	goto	l4406
 10317  004408                     u4460:
 10318  004408  6C09               	negf	___awdiv@quotient^0,c
 10319  00440A  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
 10320  00440C  B0D8               	btfsc	status,0,c
 10321  00440E  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
 10322  004410                     l4406:
 10323  004410  C009  F003         	movff	___awdiv@quotient,?___awdiv
 10324  004414  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
 10325  004418  0012               	return		;funcret
 10326  00441A                     __end_of___awdiv:
 10327                           	opt callstack 0
 10328                           
 10329 ;; *************** function _atoi *****************
 10330 ;; Defined at:
 10331 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10334 ;;		 -> STR_10(16), STR_9(16), STR_8(16), STR_7(16), 
 10335 ;;		 -> STR_6(16), STR_5(16), STR_4(13), STR_3(16), 
 10336 ;;		 -> STR_2(13), STR_1(15), 
 10337 ;; Auto vars:     Size  Location     Type
 10338 ;;  n               2   22[COMRAM] int 
 10339 ;;  neg             2   15[COMRAM] int 
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  2    9[COMRAM] int 
 10342 ;; Registers used:
 10343 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10344 ;; Tracked objects:
 10345 ;;		On entry : 0/0
 10346 ;;		On exit  : 0/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10350 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10351 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10352 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10353 ;;Total ram usage:       15 bytes
 10354 ;; Hardware stack levels used:    1
 10355 ;; Hardware stack levels required when called:    4
 10356 ;; This function calls:
 10357 ;;		___wmul
 10358 ;;		_isdigit
 10359 ;;		_isspace
 10360 ;; This function is called by:
 10361 ;;		_vfpfcnvrt
 10362 ;; This function uses a non-reentrant model
 10363 ;;
 10364                           
 10365                           	psect	text56
 10366  0038A0                     __ptext56:
 10367                           	opt callstack 0
 10368  0038A0                     _atoi:
 10369                           	opt callstack 21
 10370  0038A0  0E00               	movlw	0
 10371  0038A2  6E18               	movwf	(atoi@n+1)^0,c
 10372  0038A4  0E00               	movlw	0
 10373  0038A6  6E17               	movwf	atoi@n^0,c
 10374  0038A8  0E00               	movlw	0
 10375  0038AA  6E11               	movwf	(atoi@neg+1)^0,c
 10376  0038AC  0E00               	movlw	0
 10377  0038AE  6E10               	movwf	atoi@neg^0,c
 10378  0038B0  EF5C  F01C         	goto	l4952
 10379  0038B4                     l4950:
 10380  0038B4  4A0A               	infsnz	atoi@s^0,f,c
 10381  0038B6  2A0B               	incf	(atoi@s+1)^0,f,c
 10382  0038B8                     l4952:
 10383  0038B8  0E01               	movlw	1
 10384  0038BA  6E16               	movwf	_atoi$1673^0,c
 10385  0038BC  C00A  FFF6         	movff	atoi@s,tblptrl
 10386  0038C0  C00B  FFF7         	movff	atoi@s+1,tblptrh
 10387  0038C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10388  0038C4  6AF8               	clrf	tblptru,c
 10389  0038C6                     	endif
 10390  0038C6                     	if	0	;tblptru may be non-zero
 10391  0038C6                     	endif
 10392  0038C6  0008               	tblrd		*
 10393  0038C8  50F5               	movf	tablat,w,c
 10394  0038CA  0A20               	xorlw	32
 10395  0038CC  B4D8               	btfsc	status,2,c
 10396  0038CE  EF6B  F01C         	goto	u5371
 10397  0038D2  EF6D  F01C         	goto	u5370
 10398  0038D6                     u5371:
 10399  0038D6  EF8B  F01C         	goto	l4960
 10400  0038DA                     u5370:
 10401  0038DA  0EF7               	movlw	247
 10402  0038DC  6E0C               	movwf	??_atoi^0,c
 10403  0038DE  0EFF               	movlw	255
 10404  0038E0  6E0D               	movwf	(??_atoi+1)^0,c
 10405  0038E2  C00A  FFF6         	movff	atoi@s,tblptrl
 10406  0038E6  C00B  FFF7         	movff	atoi@s+1,tblptrh
 10407  0038EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10408  0038EA  6AF8               	clrf	tblptru,c
 10409  0038EC                     	endif
 10410  0038EC                     	if	0	;tblptru may be non-zero
 10411  0038EC                     	endif
 10412  0038EC  0008               	tblrd		*
 10413  0038EE  50F5               	movf	tablat,w,c
 10414  0038F0  6E0E               	movwf	(??_atoi+2)^0,c
 10415  0038F2  6A0F               	clrf	(??_atoi+3)^0,c
 10416  0038F4  500C               	movf	??_atoi^0,w,c
 10417  0038F6  260E               	addwf	(??_atoi+2)^0,f,c
 10418  0038F8  500D               	movf	(??_atoi+1)^0,w,c
 10419  0038FA  220F               	addwfc	(??_atoi+3)^0,f,c
 10420  0038FC  500F               	movf	(??_atoi+3)^0,w,c
 10421  0038FE  E109               	bnz	u5380
 10422  003900  0E05               	movlw	5
 10423  003902  5C0E               	subwf	(??_atoi+2)^0,w,c
 10424  003904  A0D8               	btfss	status,0,c
 10425  003906  EF87  F01C         	goto	u5381
 10426  00390A  EF89  F01C         	goto	u5380
 10427  00390E                     u5381:
 10428  00390E  EF8B  F01C         	goto	l4960
 10429  003912                     u5380:
 10430  003912  0E00               	movlw	0
 10431  003914  6E16               	movwf	_atoi$1673^0,c
 10432  003916                     l4960:
 10433  003916  C016  F012         	movff	_atoi$1673,_atoi$1672
 10434  00391A  6A13               	clrf	(_atoi$1672+1)^0,c
 10435  00391C  5012               	movf	_atoi$1672^0,w,c
 10436  00391E  1013               	iorwf	(_atoi$1672+1)^0,w,c
 10437  003920  A4D8               	btfss	status,2,c
 10438  003922  EF95  F01C         	goto	u5391
 10439  003926  EF97  F01C         	goto	u5390
 10440  00392A                     u5391:
 10441  00392A  EF5A  F01C         	goto	l4950
 10442  00392E                     u5390:
 10443  00392E  EFA1  F01C         	goto	l4970
 10444  003932                     l4966:
 10445  003932  0E00               	movlw	0
 10446  003934  6E11               	movwf	(atoi@neg+1)^0,c
 10447  003936  0E01               	movlw	1
 10448  003938  6E10               	movwf	atoi@neg^0,c
 10449  00393A                     l4968:
 10450  00393A  4A0A               	infsnz	atoi@s^0,f,c
 10451  00393C  2A0B               	incf	(atoi@s+1)^0,f,c
 10452  00393E  EFD8  F01C         	goto	l4976
 10453  003942                     l4970:
 10454  003942  C00A  FFF6         	movff	atoi@s,tblptrl
 10455  003946  C00B  FFF7         	movff	atoi@s+1,tblptrh
 10456  00394A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10457  00394A  6AF8               	clrf	tblptru,c
 10458  00394C                     	endif
 10459  00394C                     	if	0	;tblptru may be non-zero
 10460  00394C                     	endif
 10461  00394C  0008               	tblrd		*
 10462  00394E  50F5               	movf	tablat,w,c
 10463  003950  6E0C               	movwf	??_atoi^0,c
 10464  003952  6A0D               	clrf	(??_atoi+1)^0,c
 10465                           
 10466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10467                           ; Switch size 1, requested type "simple"
 10468                           ; Number of cases is 1, Range of values is 0 to 0
 10469                           ; switch strategies available:
 10470                           ; Name         Instructions Cycles
 10471                           ; simple_byte            4     3 (average)
 10472                           ;	Chosen strategy is simple_byte
 10473  003954  500D               	movf	(??_atoi+1)^0,w,c
 10474  003956  0A00               	xorlw	0	; case 0
 10475  003958  B4D8               	btfsc	status,2,c
 10476  00395A  EFB1  F01C         	goto	l5860
 10477  00395E  EFD8  F01C         	goto	l4976
 10478  003962                     l5860:
 10479                           
 10480                           ; Switch size 1, requested type "simple"
 10481                           ; Number of cases is 2, Range of values is 43 to 45
 10482                           ; switch strategies available:
 10483                           ; Name         Instructions Cycles
 10484                           ; simple_byte            7     4 (average)
 10485                           ;	Chosen strategy is simple_byte
 10486  003962  500C               	movf	??_atoi^0,w,c
 10487  003964  0A2B               	xorlw	43	; case 43
 10488  003966  B4D8               	btfsc	status,2,c
 10489  003968  EF9D  F01C         	goto	l4968
 10490  00396C  0A06               	xorlw	6	; case 45
 10491  00396E  B4D8               	btfsc	status,2,c
 10492  003970  EF99  F01C         	goto	l4966
 10493  003974  EFD8  F01C         	goto	l4976
 10494  003978                     l4972:
 10495  003978  C017  F003         	movff	atoi@n,___wmul@multiplier
 10496  00397C  C018  F004         	movff	atoi@n+1,___wmul@multiplier+1
 10497  003980  0E00               	movlw	0
 10498  003982  6E06               	movwf	(___wmul@multiplicand+1)^0,c
 10499  003984  0E0A               	movlw	10
 10500  003986  6E05               	movwf	___wmul@multiplicand^0,c
 10501  003988  EC85  F027         	call	___wmul	;wreg free
 10502  00398C  C00A  FFF6         	movff	atoi@s,tblptrl
 10503  003990  C00B  FFF7         	movff	atoi@s+1,tblptrh
 10504  003994                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10505  003994  6AF8               	clrf	tblptru,c
 10506  003996                     	endif
 10507  003996                     	if	0	;tblptru may be non-zero
 10508  003996                     	endif
 10509  003996  0008               	tblrd		*
 10510  003998  50F5               	movf	tablat,w,c
 10511  00399A  5E03               	subwf	?___wmul^0,f,c
 10512  00399C  0E00               	movlw	0
 10513  00399E  5A04               	subwfb	(?___wmul+1)^0,f,c
 10514  0039A0  0E30               	movlw	48
 10515  0039A2  2403               	addwf	?___wmul^0,w,c
 10516  0039A4  6E17               	movwf	atoi@n^0,c
 10517  0039A6  0E00               	movlw	0
 10518  0039A8  2004               	addwfc	(?___wmul+1)^0,w,c
 10519  0039AA  6E18               	movwf	(atoi@n+1)^0,c
 10520  0039AC  EF9D  F01C         	goto	l4968
 10521  0039B0                     l4976:
 10522  0039B0  0ED0               	movlw	208
 10523  0039B2  6E0C               	movwf	??_atoi^0,c
 10524  0039B4  0EFF               	movlw	255
 10525  0039B6  6E0D               	movwf	(??_atoi+1)^0,c
 10526  0039B8  C00A  FFF6         	movff	atoi@s,tblptrl
 10527  0039BC  C00B  FFF7         	movff	atoi@s+1,tblptrh
 10528  0039C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10529  0039C0  6AF8               	clrf	tblptru,c
 10530  0039C2                     	endif
 10531  0039C2                     	if	0	;tblptru may be non-zero
 10532  0039C2                     	endif
 10533  0039C2  0008               	tblrd		*
 10534  0039C4  50F5               	movf	tablat,w,c
 10535  0039C6  6E0E               	movwf	(??_atoi+2)^0,c
 10536  0039C8  6A0F               	clrf	(??_atoi+3)^0,c
 10537  0039CA  500C               	movf	??_atoi^0,w,c
 10538  0039CC  260E               	addwf	(??_atoi+2)^0,f,c
 10539  0039CE  500D               	movf	(??_atoi+1)^0,w,c
 10540  0039D0  220F               	addwfc	(??_atoi+3)^0,f,c
 10541  0039D2  500F               	movf	(??_atoi+3)^0,w,c
 10542  0039D4  E10A               	bnz	u5400
 10543  0039D6  0E0A               	movlw	10
 10544  0039D8  5C0E               	subwf	(??_atoi+2)^0,w,c
 10545  0039DA  A0D8               	btfss	status,0,c
 10546  0039DC  EFF2  F01C         	goto	u5401
 10547  0039E0  EFF5  F01C         	goto	u5400
 10548  0039E4                     u5401:
 10549  0039E4  0E01               	movlw	1
 10550  0039E6  EFF6  F01C         	goto	u5410
 10551  0039EA                     u5400:
 10552  0039EA  0E00               	movlw	0
 10553  0039EC                     u5410:
 10554  0039EC  6E14               	movwf	_atoi$1674^0,c
 10555  0039EE  6A15               	clrf	(_atoi$1674+1)^0,c
 10556  0039F0  5014               	movf	_atoi$1674^0,w,c
 10557  0039F2  1015               	iorwf	(_atoi$1674+1)^0,w,c
 10558  0039F4  A4D8               	btfss	status,2,c
 10559  0039F6  EFFF  F01C         	goto	u5421
 10560  0039FA  EF01  F01D         	goto	u5420
 10561  0039FE                     u5421:
 10562  0039FE  EFBC  F01C         	goto	l4972
 10563  003A02                     u5420:
 10564  003A02  5010               	movf	atoi@neg^0,w,c
 10565  003A04  1011               	iorwf	(atoi@neg+1)^0,w,c
 10566  003A06  A4D8               	btfss	status,2,c
 10567  003A08  EF08  F01D         	goto	u5431
 10568  003A0C  EF0A  F01D         	goto	u5430
 10569  003A10                     u5431:
 10570  003A10  EF18  F01D         	goto	l1520
 10571  003A14                     u5430:
 10572  003A14  C017  F00C         	movff	atoi@n,??_atoi
 10573  003A18  C018  F00D         	movff	atoi@n+1,??_atoi+1
 10574  003A1C  1E0C               	comf	??_atoi^0,f,c
 10575  003A1E  1E0D               	comf	(??_atoi+1)^0,f,c
 10576  003A20  4A0C               	infsnz	??_atoi^0,f,c
 10577  003A22  2A0D               	incf	(??_atoi+1)^0,f,c
 10578  003A24  C00C  F00A         	movff	??_atoi,?_atoi
 10579  003A28  C00D  F00B         	movff	??_atoi+1,?_atoi+1
 10580  003A2C  EF1C  F01D         	goto	l1523
 10581  003A30                     l1520:
 10582  003A30  C017  F00A         	movff	atoi@n,?_atoi
 10583  003A34  C018  F00B         	movff	atoi@n+1,?_atoi+1
 10584  003A38                     l1523:
 10585  003A38  0012               	return		;funcret
 10586  003A3A                     __end_of_atoi:
 10587                           	opt callstack 0
 10588                           
 10589 ;; *************** function _isspace *****************
 10590 ;; Defined at:
 10591 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;  c               2    2[COMRAM] int 
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;		None
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  2    2[COMRAM] int 
 10598 ;; Registers used:
 10599 ;;		wreg, status,2, status,0
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10607 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10608 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10609 ;;Total ram usage:        7 bytes
 10610 ;; Hardware stack levels used:    1
 10611 ;; Hardware stack levels required when called:    3
 10612 ;; This function calls:
 10613 ;;		Nothing
 10614 ;; This function is called by:
 10615 ;;		_atoi
 10616 ;; This function uses a non-reentrant model
 10617 ;;
 10618                           
 10619                           	psect	text57
 10620  004B78                     __ptext57:
 10621                           	opt callstack 0
 10622  004B78                     _isspace:
 10623                           	opt callstack 21
 10624  004B78  0E01               	movlw	1
 10625  004B7A  6E09               	movwf	_isspace$1703^0,c
 10626  004B7C  0E20               	movlw	32
 10627  004B7E  1803               	xorwf	isspace@c^0,w,c
 10628  004B80  1004               	iorwf	(isspace@c+1)^0,w,c
 10629  004B82  B4D8               	btfsc	status,2,c
 10630  004B84  EFC6  F025         	goto	u4761
 10631  004B88  EFC8  F025         	goto	u4760
 10632  004B8C                     u4761:
 10633  004B8C  EFE1  F025         	goto	l4582
 10634  004B90                     u4760:
 10635  004B90  0EF7               	movlw	247
 10636  004B92  6E05               	movwf	??_isspace^0,c
 10637  004B94  0EFF               	movlw	255
 10638  004B96  6E06               	movwf	(??_isspace+1)^0,c
 10639  004B98  C003  F007         	movff	isspace@c,??_isspace+2
 10640  004B9C  C004  F008         	movff	isspace@c+1,??_isspace+3
 10641  004BA0  5005               	movf	??_isspace^0,w,c
 10642  004BA2  2607               	addwf	(??_isspace+2)^0,f,c
 10643  004BA4  5006               	movf	(??_isspace+1)^0,w,c
 10644  004BA6  2208               	addwfc	(??_isspace+3)^0,f,c
 10645  004BA8  5008               	movf	(??_isspace+3)^0,w,c
 10646  004BAA  E109               	bnz	u4770
 10647  004BAC  0E05               	movlw	5
 10648  004BAE  5C07               	subwf	(??_isspace+2)^0,w,c
 10649  004BB0  A0D8               	btfss	status,0,c
 10650  004BB2  EFDD  F025         	goto	u4771
 10651  004BB6  EFDF  F025         	goto	u4770
 10652  004BBA                     u4771:
 10653  004BBA  EFE1  F025         	goto	l4582
 10654  004BBE                     u4770:
 10655  004BBE  0E00               	movlw	0
 10656  004BC0  6E09               	movwf	_isspace$1703^0,c
 10657  004BC2                     l4582:
 10658  004BC2  C009  F003         	movff	_isspace$1703,?_isspace
 10659  004BC6  6A04               	clrf	(?_isspace+1)^0,c
 10660  004BC8  0012               	return		;funcret
 10661  004BCA                     __end_of_isspace:
 10662                           	opt callstack 0
 10663                           
 10664 ;; *************** function _isdigit *****************
 10665 ;; Defined at:
 10666 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;  c               2    2[COMRAM] int 
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;		None
 10671 ;; Return value:  Size  Location     Type
 10672 ;;                  2    2[COMRAM] int 
 10673 ;; Registers used:
 10674 ;;		wreg, status,2, status,0
 10675 ;; Tracked objects:
 10676 ;;		On entry : 0/0
 10677 ;;		On exit  : 0/0
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10683 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10684 ;;Total ram usage:        6 bytes
 10685 ;; Hardware stack levels used:    1
 10686 ;; Hardware stack levels required when called:    3
 10687 ;; This function calls:
 10688 ;;		Nothing
 10689 ;; This function is called by:
 10690 ;;		_vfpfcnvrt
 10691 ;;		_atoi
 10692 ;; This function uses a non-reentrant model
 10693 ;;
 10694                           
 10695                           	psect	text58
 10696  004DFA                     __ptext58:
 10697                           	opt callstack 0
 10698  004DFA                     _isdigit:
 10699                           	opt callstack 22
 10700  004DFA  0ED0               	movlw	208
 10701  004DFC  6E05               	movwf	??_isdigit^0,c
 10702  004DFE  0EFF               	movlw	255
 10703  004E00  6E06               	movwf	(??_isdigit+1)^0,c
 10704  004E02  C003  F007         	movff	isdigit@c,??_isdigit+2
 10705  004E06  C004  F008         	movff	isdigit@c+1,??_isdigit+3
 10706  004E0A  5005               	movf	??_isdigit^0,w,c
 10707  004E0C  2607               	addwf	(??_isdigit+2)^0,f,c
 10708  004E0E  5006               	movf	(??_isdigit+1)^0,w,c
 10709  004E10  2208               	addwfc	(??_isdigit+3)^0,f,c
 10710  004E12  5008               	movf	(??_isdigit+3)^0,w,c
 10711  004E14  E10A               	bnz	u3970
 10712  004E16  0E0A               	movlw	10
 10713  004E18  5C07               	subwf	(??_isdigit+2)^0,w,c
 10714  004E1A  A0D8               	btfss	status,0,c
 10715  004E1C  EF12  F027         	goto	u3971
 10716  004E20  EF15  F027         	goto	u3970
 10717  004E24                     u3971:
 10718  004E24  0E01               	movlw	1
 10719  004E26  EF16  F027         	goto	u3980
 10720  004E2A                     u3970:
 10721  004E2A  0E00               	movlw	0
 10722  004E2C                     u3980:
 10723  004E2C  6E03               	movwf	?_isdigit^0,c
 10724  004E2E  6A04               	clrf	(?_isdigit+1)^0,c
 10725  004E30  0012               	return		;funcret
 10726  004E32                     __end_of_isdigit:
 10727                           	opt callstack 0
 10728                           
 10729 ;; *************** function ___wmul *****************
 10730 ;; Defined at:
 10731 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;  multiplier      2    2[COMRAM] unsigned int 
 10734 ;;  multiplicand    2    4[COMRAM] unsigned int 
 10735 ;; Auto vars:     Size  Location     Type
 10736 ;;  product         2    6[COMRAM] unsigned int 
 10737 ;; Return value:  Size  Location     Type
 10738 ;;                  2    2[COMRAM] unsigned int 
 10739 ;; Registers used:
 10740 ;;		wreg, status,2, status,0, prodl, prodh
 10741 ;; Tracked objects:
 10742 ;;		On entry : 0/0
 10743 ;;		On exit  : 0/0
 10744 ;;		Unchanged: 0/0
 10745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10749 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10750 ;;Total ram usage:        6 bytes
 10751 ;; Hardware stack levels used:    1
 10752 ;; Hardware stack levels required when called:    3
 10753 ;; This function calls:
 10754 ;;		Nothing
 10755 ;; This function is called by:
 10756 ;;		_atoi
 10757 ;; This function uses a non-reentrant model
 10758 ;;
 10759                           
 10760                           	psect	text59
 10761  004F0A                     __ptext59:
 10762                           	opt callstack 0
 10763  004F0A                     ___wmul:
 10764                           	opt callstack 21
 10765  004F0A  5003               	movf	___wmul@multiplier^0,w,c
 10766  004F0C  0205               	mulwf	___wmul@multiplicand^0,c
 10767  004F0E  CFF3 F007          	movff	prodl,___wmul@product
 10768  004F12  CFF4 F008          	movff	prodh,___wmul@product+1
 10769  004F16  5003               	movf	___wmul@multiplier^0,w,c
 10770  004F18  0206               	mulwf	(___wmul@multiplicand+1)^0,c
 10771  004F1A  50F3               	movf	243,w,c
 10772  004F1C  2608               	addwf	(___wmul@product+1)^0,f,c
 10773  004F1E  5004               	movf	(___wmul@multiplier+1)^0,w,c
 10774  004F20  0205               	mulwf	___wmul@multiplicand^0,c
 10775  004F22  50F3               	movf	243,w,c
 10776  004F24  2608               	addwf	(___wmul@product+1)^0,f,c
 10777  004F26  C007  F003         	movff	___wmul@product,?___wmul
 10778  004F2A  C008  F004         	movff	___wmul@product+1,?___wmul+1
 10779  004F2E  0012               	return		;funcret
 10780  004F30                     __end_of___wmul:
 10781                           	opt callstack 0
 10782                           
 10783 ;; *************** function _SRV_Display_Write *****************
 10784 ;; Defined at:
 10785 ;;		line 45 in file "SRV_Display.c"
 10786 ;; Parameters:    Size  Location     Type
 10787 ;;  linha           1    wreg     unsigned char 
 10788 ;;  coluna          1   10[COMRAM] unsigned char 
 10789 ;;  data            2   11[COMRAM] PTR unsigned char 
 10790 ;;		 -> txtLinha2(16), txtLinha1(16), NULL(0), 
 10791 ;; Auto vars:     Size  Location     Type
 10792 ;;  linha           1   13[COMRAM] unsigned char 
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  1    wreg      void 
 10795 ;; Registers used:
 10796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10797 ;; Tracked objects:
 10798 ;;		On entry : 0/0
 10799 ;;		On exit  : 0/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10802 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10805 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10806 ;;Total ram usage:        4 bytes
 10807 ;; Hardware stack levels used:    1
 10808 ;; Hardware stack levels required when called:    6
 10809 ;; This function calls:
 10810 ;;		_DRV_LCD_SetCursor
 10811 ;;		_DRV_LCD_WriteString
 10812 ;; This function is called by:
 10813 ;;		_writeTela
 10814 ;;		_AtualizaDisplay
 10815 ;; This function uses a non-reentrant model
 10816 ;;
 10817                           
 10818                           	psect	text60
 10819  004F8C                     __ptext60:
 10820                           	opt callstack 0
 10821  004F8C                     _SRV_Display_Write:
 10822                           	opt callstack 21
 10823                           
 10824                           ;incstack = 0
 10825                           ;SRV_Display_Write@linha stored from wreg
 10826  004F8C  6E0E               	movwf	SRV_Display_Write@linha^0,c
 10827  004F8E                     
 10828                           ;SRV_Display.c: 45: void SRV_Display_Write(uint8_t linha,uint8_t coluna, uint8_t *data);
      +                          SRV_Display.c: 46: {;SRV_Display.c: 47:     DRV_LCD_SetCursor(linha,coluna);
 10829  004F8E  C00B  F006         	movff	SRV_Display_Write@coluna,DRV_LCD_SetCursor@coluna
 10830  004F92  500E               	movf	SRV_Display_Write@linha^0,w,c
 10831  004F94  EC75  F024         	call	_DRV_LCD_SetCursor
 10832  004F98                     
 10833                           ;SRV_Display.c: 48:     DRV_LCD_WriteString(data);
 10834  004F98  C00C  F007         	movff	SRV_Display_Write@data,DRV_LCD_WriteString@data
 10835  004F9C  C00D  F008         	movff	SRV_Display_Write@data+1,DRV_LCD_WriteString@data+1
 10836  004FA0  EC6C  F026         	call	_DRV_LCD_WriteString	;wreg free
 10837  004FA4  0012               	return		;funcret
 10838  004FA6                     __end_of_SRV_Display_Write:
 10839                           	opt callstack 0
 10840                           
 10841 ;; *************** function _DRV_LCD_WriteString *****************
 10842 ;; Defined at:
 10843 ;;		line 99 in file "Driver_LCD.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;  data            2    6[COMRAM] PTR unsigned char 
 10846 ;;		 -> txtLinha2(16), txtLinha1(16), NULL(0), 
 10847 ;; Auto vars:     Size  Location     Type
 10848 ;;  i               2    8[COMRAM] int 
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  1    wreg      void 
 10851 ;; Registers used:
 10852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10853 ;; Tracked objects:
 10854 ;;		On entry : 0/0
 10855 ;;		On exit  : 0/0
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10861 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10862 ;;Total ram usage:        4 bytes
 10863 ;; Hardware stack levels used:    1
 10864 ;; Hardware stack levels required when called:    5
 10865 ;; This function calls:
 10866 ;;		_DRV_LCD_WriteChar
 10867 ;; This function is called by:
 10868 ;;		_SRV_Display_Write
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           	psect	text61
 10873  004CD8                     __ptext61:
 10874                           	opt callstack 0
 10875  004CD8                     _DRV_LCD_WriteString:
 10876                           	opt callstack 21
 10877  004CD8                     
 10878                           ;Driver_LCD.c: 99: void DRV_LCD_WriteString(uint8_t *data);Driver_LCD.c: 100: {;Driver_L
      +                          CD.c: 101:  int i;;Driver_LCD.c: 102:  for(i=0;data[i]!='\0';i++)
 10879  004CD8  0E00               	movlw	0
 10880  004CDA  6E0A               	movwf	(DRV_LCD_WriteString@i+1)^0,c
 10881  004CDC  0E00               	movlw	0
 10882  004CDE  6E09               	movwf	DRV_LCD_WriteString@i^0,c
 10883  004CE0  EF7D  F026         	goto	l5032
 10884  004CE4                     l5028:
 10885                           
 10886                           ;Driver_LCD.c: 103:     DRV_LCD_WriteChar(data[i]);
 10887  004CE4  5009               	movf	DRV_LCD_WriteString@i^0,w,c
 10888  004CE6  2407               	addwf	DRV_LCD_WriteString@data^0,w,c
 10889  004CE8  6ED9               	movwf	fsr2l,c
 10890  004CEA  500A               	movf	(DRV_LCD_WriteString@i+1)^0,w,c
 10891  004CEC  2008               	addwfc	(DRV_LCD_WriteString@data+1)^0,w,c
 10892  004CEE  6EDA               	movwf	fsr2h,c
 10893  004CF0  50DF               	movf	indf2,w,c
 10894  004CF2  EC19  F027         	call	_DRV_LCD_WriteChar
 10895  004CF6  4A09               	infsnz	DRV_LCD_WriteString@i^0,f,c
 10896  004CF8  2A0A               	incf	(DRV_LCD_WriteString@i+1)^0,f,c
 10897  004CFA                     l5032:
 10898  004CFA  5009               	movf	DRV_LCD_WriteString@i^0,w,c
 10899  004CFC  2407               	addwf	DRV_LCD_WriteString@data^0,w,c
 10900  004CFE  6ED9               	movwf	fsr2l,c
 10901  004D00  500A               	movf	(DRV_LCD_WriteString@i+1)^0,w,c
 10902  004D02  2008               	addwfc	(DRV_LCD_WriteString@data+1)^0,w,c
 10903  004D04  6EDA               	movwf	fsr2h,c
 10904  004D06  50DF               	movf	indf2,w,c
 10905  004D08  A4D8               	btfss	status,2,c
 10906  004D0A  EF89  F026         	goto	u5511
 10907  004D0E  EF8B  F026         	goto	u5510
 10908  004D12                     u5511:
 10909  004D12  EF72  F026         	goto	l5028
 10910  004D16                     u5510:
 10911  004D16  0012               	return		;funcret
 10912  004D18                     __end_of_DRV_LCD_WriteString:
 10913                           	opt callstack 0
 10914                           
 10915 ;; *************** function _DRV_LCD_WriteChar *****************
 10916 ;; Defined at:
 10917 ;;		line 83 in file "Driver_LCD.c"
 10918 ;; Parameters:    Size  Location     Type
 10919 ;;  data            1    wreg     unsigned char 
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;  data            1    5[COMRAM] unsigned char 
 10922 ;;  y               1    4[COMRAM] unsigned char 
 10923 ;;  temp            1    3[COMRAM] unsigned char 
 10924 ;; Return value:  Size  Location     Type
 10925 ;;                  1    wreg      void 
 10926 ;; Registers used:
 10927 ;;		wreg, status,2, status,0, cstack
 10928 ;; Tracked objects:
 10929 ;;		On entry : 0/0
 10930 ;;		On exit  : 0/0
 10931 ;;		Unchanged: 0/0
 10932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10934 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10936 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10937 ;;Total ram usage:        3 bytes
 10938 ;; Hardware stack levels used:    1
 10939 ;; Hardware stack levels required when called:    4
 10940 ;; This function calls:
 10941 ;;		_DRV_LCD_Data
 10942 ;; This function is called by:
 10943 ;;		_DRV_LCD_WriteString
 10944 ;;		_SRV_Display_WriteChar
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948                           	psect	text62
 10949  004E32                     __ptext62:
 10950                           	opt callstack 0
 10951  004E32                     _DRV_LCD_WriteChar:
 10952                           	opt callstack 21
 10953                           
 10954                           ;incstack = 0
 10955                           ;DRV_LCD_WriteChar@data stored from wreg
 10956  004E32  6E06               	movwf	DRV_LCD_WriteChar@data^0,c
 10957  004E34                     
 10958                           ;Driver_LCD.c: 83: void DRV_LCD_WriteChar(uint8_t data);Driver_LCD.c: 84: {;Driver_LCD.c
      +                          : 85:    char temp,y;;Driver_LCD.c: 86:    temp = data&0x0F;
 10959  004E34  5006               	movf	DRV_LCD_WriteChar@data^0,w,c
 10960  004E36  0B0F               	andlw	15
 10961  004E38  6E04               	movwf	DRV_LCD_WriteChar@temp^0,c
 10962                           
 10963                           ;Driver_LCD.c: 87:    y = data&0xF0;
 10964  004E3A  5006               	movf	DRV_LCD_WriteChar@data^0,w,c
 10965  004E3C  0BF0               	andlw	240
 10966  004E3E  6E05               	movwf	DRV_LCD_WriteChar@y^0,c
 10967  004E40  828C               	bsf	140,1,c	;volatile
 10968  004E42                     
 10969                           ;Driver_LCD.c: 89:    DRV_LCD_Data(y>>4);
 10970  004E42  3805               	swapf	DRV_LCD_WriteChar@y^0,w,c
 10971  004E44  0B0F               	andlw	15
 10972  004E46  EC39  F025         	call	_DRV_LCD_Data
 10973  004E4A  868C               	bsf	140,3,c	;volatile
 10974  004E4C                     
 10975                           ;Driver_LCD.c: 91:    _delay((unsigned long)((40)*(8000000/4000000.0)));
 10976  004E4C  0E1A               	movlw	26
 10977  004E4E                     u6397:
 10978  004E4E  2EE8               	decfsz	wreg,f,c
 10979  004E50  D7FE               	bra	u6397
 10980  004E52  D000               	nop2	
 10981  004E54  968C               	bcf	140,3,c	;volatile
 10982  004E56                     
 10983                           ;Driver_LCD.c: 93:    DRV_LCD_Data(temp);
 10984  004E56  5004               	movf	DRV_LCD_WriteChar@temp^0,w,c
 10985  004E58  EC39  F025         	call	_DRV_LCD_Data
 10986  004E5C  868C               	bsf	140,3,c	;volatile
 10987  004E5E                     
 10988                           ;Driver_LCD.c: 95:    _delay((unsigned long)((40)*(8000000/4000000.0)));
 10989  004E5E  0E1A               	movlw	26
 10990  004E60                     u6407:
 10991  004E60  2EE8               	decfsz	wreg,f,c
 10992  004E62  D7FE               	bra	u6407
 10993  004E64  D000               	nop2	
 10994  004E66  968C               	bcf	140,3,c	;volatile
 10995  004E68  0012               	return		;funcret
 10996  004E6A                     __end_of_DRV_LCD_WriteChar:
 10997                           	opt callstack 0
 10998                           
 10999 ;; *************** function _DRV_LCD_SetCursor *****************
 11000 ;; Defined at:
 11001 ;;		line 43 in file "Driver_LCD.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;  linha           1    wreg     unsigned char 
 11004 ;;  coluna          1    5[COMRAM] unsigned char 
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;  linha           1    6[COMRAM] unsigned char 
 11007 ;;  temp            1    9[COMRAM] unsigned char 
 11008 ;;  y               1    8[COMRAM] unsigned char 
 11009 ;;  z               1    7[COMRAM] unsigned char 
 11010 ;; Return value:  Size  Location     Type
 11011 ;;                  1    wreg      void 
 11012 ;; Registers used:
 11013 ;;		wreg, status,2, status,0, cstack
 11014 ;; Tracked objects:
 11015 ;;		On entry : 0/0
 11016 ;;		On exit  : 0/0
 11017 ;;		Unchanged: 0/0
 11018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11019 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11020 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11022 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11023 ;;Total ram usage:        5 bytes
 11024 ;; Hardware stack levels used:    1
 11025 ;; Hardware stack levels required when called:    5
 11026 ;; This function calls:
 11027 ;;		_DRV_LCD_Cmd
 11028 ;; This function is called by:
 11029 ;;		_SRV_Display_Write
 11030 ;;		_SRV_Display_SetCursor
 11031 ;;		_SRV_Display_WriteChar
 11032 ;; This function uses a non-reentrant model
 11033 ;;
 11034                           
 11035                           	psect	text63
 11036  0048EA                     __ptext63:
 11037                           	opt callstack 0
 11038  0048EA                     _DRV_LCD_SetCursor:
 11039                           	opt callstack 22
 11040                           
 11041                           ;incstack = 0
 11042                           ;DRV_LCD_SetCursor@linha stored from wreg
 11043  0048EA  6E07               	movwf	DRV_LCD_SetCursor@linha^0,c
 11044  0048EC                     
 11045                           ;Driver_LCD.c: 43: void DRV_LCD_SetCursor(uint8_t linha, uint8_t coluna);Driver_LCD.c: 4
      +                          4: {;Driver_LCD.c: 45:  char temp,z,y;;Driver_LCD.c: 46:  if(linha == 1)
 11046  0048EC  0407               	decf	DRV_LCD_SetCursor@linha^0,w,c
 11047  0048EE  A4D8               	btfss	status,2,c
 11048  0048F0  EF7C  F024         	goto	u5491
 11049  0048F4  EF7E  F024         	goto	u5490
 11050  0048F8                     u5491:
 11051  0048F8  EF8F  F024         	goto	l5018
 11052  0048FC                     u5490:
 11053  0048FC                     
 11054                           ;Driver_LCD.c: 47:  {;Driver_LCD.c: 48:    temp = 0x80 + coluna - 1;
 11055  0048FC  5006               	movf	DRV_LCD_SetCursor@coluna^0,w,c
 11056  0048FE  0F7F               	addlw	127
 11057  004900  6E0A               	movwf	DRV_LCD_SetCursor@temp^0,c
 11058                           
 11059                           ;Driver_LCD.c: 49:   z = temp>>4;
 11060  004902  380A               	swapf	DRV_LCD_SetCursor@temp^0,w,c
 11061  004904  0B0F               	andlw	15
 11062  004906  6E08               	movwf	DRV_LCD_SetCursor@z^0,c
 11063                           
 11064                           ;Driver_LCD.c: 50:   y = temp & 0x0F;
 11065  004908  500A               	movf	DRV_LCD_SetCursor@temp^0,w,c
 11066  00490A  0B0F               	andlw	15
 11067  00490C  6E09               	movwf	DRV_LCD_SetCursor@y^0,c
 11068  00490E                     
 11069                           ;Driver_LCD.c: 51:   DRV_LCD_Cmd(z);
 11070  00490E  5008               	movf	DRV_LCD_SetCursor@z^0,w,c
 11071  004910  ECA9  F027         	call	_DRV_LCD_Cmd
 11072  004914                     
 11073                           ;Driver_LCD.c: 52:   DRV_LCD_Cmd(y);
 11074  004914  5009               	movf	DRV_LCD_SetCursor@y^0,w,c
 11075  004916  ECA9  F027         	call	_DRV_LCD_Cmd
 11076                           
 11077                           ;Driver_LCD.c: 53:  }
 11078  00491A  EFA7  F024         	goto	l224
 11079  00491E                     l5018:
 11080  00491E  0E02               	movlw	2
 11081  004920  1807               	xorwf	DRV_LCD_SetCursor@linha^0,w,c
 11082  004922  A4D8               	btfss	status,2,c
 11083  004924  EF96  F024         	goto	u5501
 11084  004928  EF98  F024         	goto	u5500
 11085  00492C                     u5501:
 11086  00492C  EFA7  F024         	goto	l224
 11087  004930                     u5500:
 11088  004930                     
 11089                           ;Driver_LCD.c: 55:  {;Driver_LCD.c: 56:   temp = 0xC0 + coluna - 1;
 11090  004930  5006               	movf	DRV_LCD_SetCursor@coluna^0,w,c
 11091  004932  0FBF               	addlw	191
 11092  004934  6E0A               	movwf	DRV_LCD_SetCursor@temp^0,c
 11093                           
 11094                           ;Driver_LCD.c: 57:   z = temp>>4;
 11095  004936  380A               	swapf	DRV_LCD_SetCursor@temp^0,w,c
 11096  004938  0B0F               	andlw	15
 11097  00493A  6E08               	movwf	DRV_LCD_SetCursor@z^0,c
 11098                           
 11099                           ;Driver_LCD.c: 58:   y = temp & 0x0F;
 11100  00493C  500A               	movf	DRV_LCD_SetCursor@temp^0,w,c
 11101  00493E  0B0F               	andlw	15
 11102  004940  6E09               	movwf	DRV_LCD_SetCursor@y^0,c
 11103  004942                     
 11104                           ;Driver_LCD.c: 59:   DRV_LCD_Cmd(z);
 11105  004942  5008               	movf	DRV_LCD_SetCursor@z^0,w,c
 11106  004944  ECA9  F027         	call	_DRV_LCD_Cmd
 11107  004948                     
 11108                           ;Driver_LCD.c: 60:   DRV_LCD_Cmd(y);
 11109  004948  5009               	movf	DRV_LCD_SetCursor@y^0,w,c
 11110  00494A  ECA9  F027         	call	_DRV_LCD_Cmd
 11111  00494E                     l224:
 11112  00494E  0012               	return		;funcret
 11113  004950                     __end_of_DRV_LCD_SetCursor:
 11114                           	opt callstack 0
 11115                           
 11116 ;; *************** function _DRV_LCD_Cmd *****************
 11117 ;; Defined at:
 11118 ;;		line 28 in file "Driver_LCD.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;  cmd             1    wreg     unsigned char 
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;  cmd             1    4[COMRAM] unsigned char 
 11123 ;; Return value:  Size  Location     Type
 11124 ;;                  1    wreg      void 
 11125 ;; Registers used:
 11126 ;;		wreg, status,2, cstack
 11127 ;; Tracked objects:
 11128 ;;		On entry : 0/0
 11129 ;;		On exit  : 0/0
 11130 ;;		Unchanged: 0/0
 11131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11136 ;;Total ram usage:        2 bytes
 11137 ;; Hardware stack levels used:    1
 11138 ;; Hardware stack levels required when called:    4
 11139 ;; This function calls:
 11140 ;;		_DRV_LCD_Data
 11141 ;; This function is called by:
 11142 ;;		_DRV_LCD_Clear
 11143 ;;		_DRV_LCD_SetCursor
 11144 ;;		_DRV_LCD_Init
 11145 ;;		_DRV_LCD_ShiftRight
 11146 ;;		_DRV_LCD_ShiftLeft
 11147 ;; This function uses a non-reentrant model
 11148 ;;
 11149                           
 11150                           	psect	text64
 11151  004F52                     __ptext64:
 11152                           	opt callstack 0
 11153  004F52                     _DRV_LCD_Cmd:
 11154                           	opt callstack 22
 11155                           
 11156                           ;incstack = 0
 11157                           ;DRV_LCD_Cmd@cmd stored from wreg
 11158  004F52  6E05               	movwf	DRV_LCD_Cmd@cmd^0,c
 11159  004F54  928C               	bcf	140,1,c	;volatile
 11160  004F56                     
 11161                           ;Driver_LCD.c: 31:  DRV_LCD_Data(cmd);
 11162  004F56  5005               	movf	DRV_LCD_Cmd@cmd^0,w,c
 11163  004F58  EC39  F025         	call	_DRV_LCD_Data
 11164  004F5C  868C               	bsf	140,3,c	;volatile
 11165  004F5E                     
 11166                           ;Driver_LCD.c: 33:         _delay((unsigned long)((4)*(8000000/4000.0)));
 11167  004F5E  0E0B               	movlw	11
 11168  004F60  6E04               	movwf	??_DRV_LCD_Cmd^0,c
 11169  004F62  0E62               	movlw	98
 11170  004F64                     u6417:
 11171  004F64  2EE8               	decfsz	wreg,f,c
 11172  004F66  D7FE               	bra	u6417
 11173  004F68  2E04               	decfsz	??_DRV_LCD_Cmd^0,f,c
 11174  004F6A  D7FC               	bra	u6417
 11175  004F6C  D000               	nop2	
 11176  004F6E  968C               	bcf	140,3,c	;volatile
 11177  004F70  0012               	return		;funcret
 11178  004F72                     __end_of_DRV_LCD_Cmd:
 11179                           	opt callstack 0
 11180                           
 11181 ;; *************** function _DRV_LCD_Data *****************
 11182 ;; Defined at:
 11183 ;;		line 8 in file "Driver_LCD.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;  data            1    wreg     unsigned char 
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;  data            1    2[COMRAM] unsigned char 
 11188 ;; Return value:  Size  Location     Type
 11189 ;;                  1    wreg      void 
 11190 ;; Registers used:
 11191 ;;		wreg
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11201 ;;Total ram usage:        1 bytes
 11202 ;; Hardware stack levels used:    1
 11203 ;; Hardware stack levels required when called:    3
 11204 ;; This function calls:
 11205 ;;		Nothing
 11206 ;; This function is called by:
 11207 ;;		_DRV_LCD_Cmd
 11208 ;;		_DRV_LCD_Init
 11209 ;;		_DRV_LCD_WriteChar
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           	psect	text65
 11214  004A72                     __ptext65:
 11215                           	opt callstack 0
 11216  004A72                     _DRV_LCD_Data:
 11217                           	opt callstack 22
 11218                           
 11219                           ;incstack = 0
 11220                           ;DRV_LCD_Data@data stored from wreg
 11221  004A72  6E03               	movwf	DRV_LCD_Data@data^0,c
 11222  004A74                     
 11223                           ;Driver_LCD.c: 8: void DRV_LCD_Data(uint8_t data);Driver_LCD.c: 9: {;Driver_LCD.c: 10:  
      +                          if(data & 1)
 11224  004A74  A003               	btfss	DRV_LCD_Data@data^0,0,c
 11225  004A76  EF3F  F025         	goto	u3671
 11226  004A7A  EF41  F025         	goto	u3670
 11227  004A7E                     u3671:
 11228  004A7E  EF44  F025         	goto	l186
 11229  004A82                     u3670:
 11230  004A82  888C               	bsf	140,4,c	;volatile
 11231  004A84  EF45  F025         	goto	l3990
 11232  004A88                     l186:
 11233  004A88  988C               	bcf	140,4,c	;volatile
 11234  004A8A                     l3990:
 11235                           
 11236                           ;Driver_LCD.c: 14:  if(data & 2)
 11237  004A8A  A203               	btfss	DRV_LCD_Data@data^0,1,c
 11238  004A8C  EF4A  F025         	goto	u3681
 11239  004A90  EF4C  F025         	goto	u3680
 11240  004A94                     u3681:
 11241  004A94  EF4F  F025         	goto	l192
 11242  004A98                     u3680:
 11243  004A98  8A8C               	bsf	140,5,c	;volatile
 11244  004A9A  EF50  F025         	goto	l3992
 11245  004A9E                     l192:
 11246  004A9E  9A8C               	bcf	140,5,c	;volatile
 11247  004AA0                     l3992:
 11248                           
 11249                           ;Driver_LCD.c: 18:  if(data & 4)
 11250  004AA0  A403               	btfss	DRV_LCD_Data@data^0,2,c
 11251  004AA2  EF55  F025         	goto	u3691
 11252  004AA6  EF57  F025         	goto	u3690
 11253  004AAA                     u3691:
 11254  004AAA  EF5A  F025         	goto	l198
 11255  004AAE                     u3690:
 11256  004AAE  8C8C               	bsf	140,6,c	;volatile
 11257  004AB0  EF5B  F025         	goto	l3994
 11258  004AB4                     l198:
 11259  004AB4  9C8C               	bcf	140,6,c	;volatile
 11260  004AB6                     l3994:
 11261                           
 11262                           ;Driver_LCD.c: 23:  if(data & 8)
 11263  004AB6  A603               	btfss	DRV_LCD_Data@data^0,3,c
 11264  004AB8  EF60  F025         	goto	u3701
 11265  004ABC  EF62  F025         	goto	u3700
 11266  004AC0                     u3701:
 11267  004AC0  EF65  F025         	goto	l204
 11268  004AC4                     u3700:
 11269  004AC4  8E8C               	bsf	140,7,c	;volatile
 11270  004AC6  EF66  F025         	goto	l206
 11271  004ACA                     l204:
 11272  004ACA  9E8C               	bcf	140,7,c	;volatile
 11273  004ACC                     l206:
 11274  004ACC  0012               	return		;funcret
 11275  004ACE                     __end_of_DRV_LCD_Data:
 11276                           	opt callstack 0
 11277                           
 11278 ;; *************** function _AppTesteLM4040_Controller *****************
 11279 ;; Defined at:
 11280 ;;		line 116 in file "AppTesteLM4040.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;		None
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;		None
 11285 ;; Return value:  Size  Location     Type
 11286 ;;                  1    wreg      void 
 11287 ;; Registers used:
 11288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11289 ;; Tracked objects:
 11290 ;;		On entry : 0/0
 11291 ;;		On exit  : 0/0
 11292 ;;		Unchanged: 0/0
 11293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11298 ;;Total ram usage:        2 bytes
 11299 ;; Hardware stack levels used:    1
 11300 ;; Hardware stack levels required when called:    5
 11301 ;; This function calls:
 11302 ;;		_AppTesteLM4040_Calibrando
 11303 ;;		_AppTesteLM4040_IdentificaMudanca
 11304 ;;		_AppTesteLM4040_Testando
 11305 ;;		_DATAEE_WriteByte
 11306 ;; This function is called by:
 11307 ;;		_AppTesteLM4040_Run
 11308 ;; This function uses a non-reentrant model
 11309 ;;
 11310                           
 11311                           	psect	text66
 11312  004574                     __ptext66:
 11313                           	opt callstack 0
 11314  004574                     _AppTesteLM4040_Controller:
 11315                           	opt callstack 24
 11316  004574                     
 11317                           ;AppTesteLM4040.c: 119:     if(state.calibrando == 1)
 11318  004574  0100               	movlb	0	; () banked
 11319  004576  05C4               	decf	_state& (0+255),w,b
 11320  004578  A4D8               	btfss	status,2,c
 11321  00457A  EFC1  F022         	goto	u6171
 11322  00457E  EFC3  F022         	goto	u6170
 11323  004582                     u6171:
 11324  004582  EFCD  F022         	goto	l5580
 11325  004586                     u6170:
 11326  004586                     
 11327                           ; BSR set to: 0
 11328                           ;AppTesteLM4040.c: 120:     {;AppTesteLM4040.c: 121:         state.aprovado = 0;
 11329  004586  0E00               	movlw	0
 11330  004588  6FC7               	movwf	(_state+3)& (0+255),b
 11331                           
 11332                           ;AppTesteLM4040.c: 122:         state.reprovado = 0;
 11333  00458A  0E00               	movlw	0
 11334  00458C  6FC8               	movwf	(_state+4)& (0+255),b
 11335                           
 11336                           ;AppTesteLM4040.c: 123:         state.identifica_mudanca = 0;
 11337  00458E  0E00               	movlw	0
 11338  004590  6FC5               	movwf	(_state+1)& (0+255),b
 11339                           
 11340                           ;AppTesteLM4040.c: 124:         state.testando = 0;
 11341  004592  0E00               	movlw	0
 11342  004594  6FC6               	movwf	(_state+2)& (0+255),b
 11343  004596                     
 11344                           ; BSR set to: 0
 11345                           ;AppTesteLM4040.c: 125:         AppTesteLM4040_Calibrando();
 11346  004596  ECB2  F023         	call	_AppTesteLM4040_Calibrando	;wreg free
 11347  00459A                     l5580:
 11348                           
 11349                           ;AppTesteLM4040.c: 127:     if(state.identifica_mudanca == 1)
 11350  00459A  0100               	movlb	0	; () banked
 11351  00459C  05C5               	decf	(_state+1)& (0+255),w,b
 11352  00459E  A4D8               	btfss	status,2,c
 11353  0045A0  EFD4  F022         	goto	u6181
 11354  0045A4  EFD6  F022         	goto	u6180
 11355  0045A8                     u6181:
 11356  0045A8  EFE0  F022         	goto	l5586
 11357  0045AC                     u6180:
 11358  0045AC                     
 11359                           ; BSR set to: 0
 11360                           ;AppTesteLM4040.c: 128:     {;AppTesteLM4040.c: 129:         state.calibrando = 0;
 11361  0045AC  0E00               	movlw	0
 11362  0045AE  6FC4               	movwf	_state& (0+255),b
 11363                           
 11364                           ;AppTesteLM4040.c: 130:         state.aprovado = 0;
 11365  0045B0  0E00               	movlw	0
 11366  0045B2  6FC7               	movwf	(_state+3)& (0+255),b
 11367                           
 11368                           ;AppTesteLM4040.c: 131:         state.reprovado = 0;
 11369  0045B4  0E00               	movlw	0
 11370  0045B6  6FC8               	movwf	(_state+4)& (0+255),b
 11371                           
 11372                           ;AppTesteLM4040.c: 132:         state.testando = 0;
 11373  0045B8  0E00               	movlw	0
 11374  0045BA  6FC6               	movwf	(_state+2)& (0+255),b
 11375  0045BC                     
 11376                           ; BSR set to: 0
 11377                           ;AppTesteLM4040.c: 133:         AppTesteLM4040_IdentificaMudanca();
 11378  0045BC  EC1C  F01F         	call	_AppTesteLM4040_IdentificaMudanca	;wreg free
 11379  0045C0                     l5586:
 11380                           
 11381                           ;AppTesteLM4040.c: 135:     if(state.testando == 1)
 11382  0045C0  0100               	movlb	0	; () banked
 11383  0045C2  05C6               	decf	(_state+2)& (0+255),w,b
 11384  0045C4  A4D8               	btfss	status,2,c
 11385  0045C6  EFE7  F022         	goto	u6191
 11386  0045CA  EFE9  F022         	goto	u6190
 11387  0045CE                     u6191:
 11388  0045CE  EFF3  F022         	goto	l5592
 11389  0045D2                     u6190:
 11390  0045D2                     
 11391                           ; BSR set to: 0
 11392                           ;AppTesteLM4040.c: 136:     {;AppTesteLM4040.c: 137:         state.calibrando = 0;
 11393  0045D2  0E00               	movlw	0
 11394  0045D4  6FC4               	movwf	_state& (0+255),b
 11395                           
 11396                           ;AppTesteLM4040.c: 138:         state.aprovado = 0;
 11397  0045D6  0E00               	movlw	0
 11398  0045D8  6FC7               	movwf	(_state+3)& (0+255),b
 11399                           
 11400                           ;AppTesteLM4040.c: 139:         state.reprovado = 0;
 11401  0045DA  0E00               	movlw	0
 11402  0045DC  6FC8               	movwf	(_state+4)& (0+255),b
 11403                           
 11404                           ;AppTesteLM4040.c: 140:         state.identifica_mudanca = 0;
 11405  0045DE  0E00               	movlw	0
 11406  0045E0  6FC5               	movwf	(_state+1)& (0+255),b
 11407  0045E2                     
 11408                           ; BSR set to: 0
 11409                           ;AppTesteLM4040.c: 141:         AppTesteLM4040_Testando();
 11410  0045E2  EC7E  F01B         	call	_AppTesteLM4040_Testando	;wreg free
 11411  0045E6                     l5592:
 11412                           
 11413                           ;AppTesteLM4040.c: 144:     if(PORTEbits.RE0 == 0)
 11414  0045E6  B084               	btfsc	132,0,c	;volatile
 11415  0045E8  EFF8  F022         	goto	u6201
 11416  0045EC  EFFA  F022         	goto	u6200
 11417  0045F0                     u6201:
 11418  0045F0  EF0D  F023         	goto	l454
 11419  0045F4                     u6200:
 11420  0045F4                     
 11421                           ;AppTesteLM4040.c: 145:         {;AppTesteLM4040.c: 146:             DATAEE_WriteByte(0x
      +                          10, 0x00);
 11422  0045F4  0E00               	movlw	0
 11423  0045F6  6E04               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 11424  0045F8  0E10               	movlw	16
 11425  0045FA  6E03               	movwf	DATAEE_WriteByte@bAdd^0,c
 11426  0045FC  0E00               	movlw	0
 11427  0045FE  6E05               	movwf	DATAEE_WriteByte@bData^0,c
 11428  004600  EC2A  F026         	call	_DATAEE_WriteByte	;wreg free
 11429  004604                     
 11430                           ;AppTesteLM4040.c: 147:             _delay((unsigned long)((100)*(10000000/4000.0)));
 11431  004604  0E02               	movlw	2
 11432  004606  6E2F               	movwf	(??_AppTesteLM4040_Controller+1)^0,c
 11433  004608  0E45               	movlw	69
 11434  00460A  6E2E               	movwf	??_AppTesteLM4040_Controller^0,c
 11435  00460C  0EAA               	movlw	170
 11436  00460E                     u6427:
 11437  00460E  2EE8               	decfsz	wreg,f,c
 11438  004610  D7FE               	bra	u6427
 11439  004612  2E2E               	decfsz	??_AppTesteLM4040_Controller^0,f,c
 11440  004614  D7FC               	bra	u6427
 11441  004616  2E2F               	decfsz	(??_AppTesteLM4040_Controller+1)^0,f,c
 11442  004618  D7FA               	bra	u6427
 11443  00461A                     l454:
 11444  00461A  0012               	return		;funcret
 11445  00461C                     __end_of_AppTesteLM4040_Controller:
 11446                           	opt callstack 0
 11447                           
 11448 ;; *************** function _AppTesteLM4040_Testando *****************
 11449 ;; Defined at:
 11450 ;;		line 244 in file "AppTesteLM4040.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;		None
 11453 ;; Auto vars:     Size  Location     Type
 11454 ;;		None
 11455 ;; Return value:  Size  Location     Type
 11456 ;;                  1    wreg      void 
 11457 ;; Registers used:
 11458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11459 ;; Tracked objects:
 11460 ;;		On entry : 0/0
 11461 ;;		On exit  : 0/0
 11462 ;;		Unchanged: 0/0
 11463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11466 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11467 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11468 ;;Total ram usage:        4 bytes
 11469 ;; Hardware stack levels used:    1
 11470 ;; Hardware stack levels required when called:    4
 11471 ;; This function calls:
 11472 ;;		_DATAEE_WriteByte
 11473 ;;		_SRV_TIMER_GetTick
 11474 ;;		___flmul
 11475 ;;		___xxtofl
 11476 ;; This function is called by:
 11477 ;;		_AppTesteLM4040_Controller
 11478 ;; This function uses a non-reentrant model
 11479 ;;
 11480                           
 11481                           	psect	text67
 11482  0036FC                     __ptext67:
 11483                           	opt callstack 0
 11484  0036FC                     _AppTesteLM4040_Testando:
 11485                           	opt callstack 24
 11486  0036FC                     
 11487                           ;AppTesteLM4040.c: 249:     difan = LeituraAD.AN3 - LeituraAD.AN2;
 11488  0036FC  0100               	movlb	0	; () banked
 11489  0036FE  51DD               	movf	_LeituraAD& (0+255),w,b
 11490  003700  5DDF               	subwf	(_LeituraAD+2)& (0+255),w,b
 11491  003702  6E56               	movwf	_difan^0,c
 11492  003704  51DE               	movf	(_LeituraAD+1)& (0+255),w,b
 11493  003706  59E0               	subwfb	(_LeituraAD+3)& (0+255),w,b
 11494  003708  6E57               	movwf	(_difan+1)^0,c
 11495                           
 11496                           ;AppTesteLM4040.c: 251:     if(tensaoreferencia >= difan)
 11497  00370A  5056               	movf	_difan^0,w,c
 11498  00370C  5C58               	subwf	_tensaoreferencia^0,w,c
 11499  00370E  5057               	movf	(_difan+1)^0,w,c
 11500  003710  5859               	subwfb	(_tensaoreferencia+1)^0,w,c
 11501  003712  A0D8               	btfss	status,0,c
 11502  003714  EF8E  F01B         	goto	u6001
 11503  003718  EF90  F01B         	goto	u6000
 11504  00371C                     u6001:
 11505  00371C  EF96  F01B         	goto	l482
 11506  003720                     u6000:
 11507  003720                     
 11508                           ; BSR set to: 0
 11509                           ;AppTesteLM4040.c: 252:         erromedido = tensaoreferencia - difan;
 11510  003720  5056               	movf	_difan^0,w,c
 11511  003722  5C58               	subwf	_tensaoreferencia^0,w,c
 11512  003724  6FED               	movwf	_erromedido& (0+255),b
 11513  003726  5057               	movf	(_difan+1)^0,w,c
 11514  003728  5859               	subwfb	(_tensaoreferencia+1)^0,w,c
 11515  00372A  6FEE               	movwf	(_erromedido+1)& (0+255),b
 11516  00372C                     l482:
 11517                           
 11518                           ; BSR set to: 0
 11519                           ;AppTesteLM4040.c: 253:     if(difan >= tensaoreferencia)
 11520  00372C  5058               	movf	_tensaoreferencia^0,w,c
 11521  00372E  5C56               	subwf	_difan^0,w,c
 11522  003730  5059               	movf	(_tensaoreferencia+1)^0,w,c
 11523  003732  5857               	subwfb	(_difan+1)^0,w,c
 11524  003734  A0D8               	btfss	status,0,c
 11525  003736  EF9F  F01B         	goto	u6011
 11526  00373A  EFA1  F01B         	goto	u6010
 11527  00373E                     u6011:
 11528  00373E  EFA7  F01B         	goto	l5392
 11529  003742                     u6010:
 11530  003742                     
 11531                           ; BSR set to: 0
 11532                           ;AppTesteLM4040.c: 254:         erromedido = difan - tensaoreferencia;
 11533  003742  5058               	movf	_tensaoreferencia^0,w,c
 11534  003744  5C56               	subwf	_difan^0,w,c
 11535  003746  6FED               	movwf	_erromedido& (0+255),b
 11536  003748  5059               	movf	(_tensaoreferencia+1)^0,w,c
 11537  00374A  5857               	subwfb	(_difan+1)^0,w,c
 11538  00374C  6FEE               	movwf	(_erromedido+1)& (0+255),b
 11539  00374E                     l5392:
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;AppTesteLM4040.c: 256:     tensaoexibe = (float)(erromedido) * 1.21;
 11543  00374E  C0ED  F003         	movff	_erromedido,___xxtofl@val
 11544  003752  C0EE  F004         	movff	_erromedido+1,___xxtofl@val+1
 11545  003756  6A05               	clrf	(___xxtofl@val+2)^0,c
 11546  003758  6A06               	clrf	(___xxtofl@val+3)^0,c
 11547  00375A  0E00               	movlw	0
 11548  00375C  ECA4  F01A         	call	___xxtofl
 11549  003760  C003  F011         	movff	?___xxtofl,___flmul@b
 11550  003764  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
 11551  003768  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
 11552  00376C  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
 11553  003770  0E48               	movlw	72
 11554  003772  6E15               	movwf	___flmul@a^0,c
 11555  003774  0EE1               	movlw	225
 11556  003776  6E16               	movwf	(___flmul@a+1)^0,c
 11557  003778  0E9A               	movlw	154
 11558  00377A  6E17               	movwf	(___flmul@a+2)^0,c
 11559  00377C  0E3F               	movlw	63
 11560  00377E  6E18               	movwf	(___flmul@a+3)^0,c
 11561  003780  EC76  F013         	call	___flmul	;wreg free
 11562  003784  C011  F154         	movff	?___flmul,_tensaoexibe
 11563  003788  C012  F155         	movff	?___flmul+1,_tensaoexibe+1
 11564  00378C  C013  F156         	movff	?___flmul+2,_tensaoexibe+2
 11565  003790  C014  F157         	movff	?___flmul+3,_tensaoexibe+3
 11566  003794                     
 11567                           ;AppTesteLM4040.c: 259:     if(erromedido > vMax)
 11568  003794  0100               	movlb	0	; () banked
 11569  003796  51ED               	movf	_erromedido& (0+255),w,b
 11570  003798  5DEF               	subwf	_vMax& (0+255),w,b
 11571  00379A  51EE               	movf	(_erromedido+1)& (0+255),w,b
 11572  00379C  59F0               	subwfb	(_vMax+1)& (0+255),w,b
 11573  00379E  B0D8               	btfsc	status,0,c
 11574  0037A0  EFD4  F01B         	goto	u6021
 11575  0037A4  EFD6  F01B         	goto	u6020
 11576  0037A8                     u6021:
 11577  0037A8  EFDA  F01B         	goto	l5398
 11578  0037AC                     u6020:
 11579  0037AC                     
 11580                           ; BSR set to: 0
 11581                           ;AppTesteLM4040.c: 260:     {;AppTesteLM4040.c: 261:        vMax = erromedido;
 11582  0037AC  C0ED  F0EF         	movff	_erromedido,_vMax
 11583  0037B0  C0EE  F0F0         	movff	_erromedido+1,_vMax+1
 11584  0037B4                     l5398:
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;AppTesteLM4040.c: 265:     static uint32_t tick = 0;;AppTesteLM4040.c: 266:     static 
      +                          uint32_t tickLast = 0;;AppTesteLM4040.c: 270:     tick = SRV_TIMER_GetTick();
 11588  0037B4  ECD3  F027         	call	_SRV_TIMER_GetTick	;wreg free
 11589  0037B8  C003  F0D1         	movff	?_SRV_TIMER_GetTick,AppTesteLM4040_Testando@tick
 11590  0037BC  C004  F0D2         	movff	?_SRV_TIMER_GetTick+1,AppTesteLM4040_Testando@tick+1
 11591  0037C0  C005  F0D3         	movff	?_SRV_TIMER_GetTick+2,AppTesteLM4040_Testando@tick+2
 11592  0037C4  C006  F0D4         	movff	?_SRV_TIMER_GetTick+3,AppTesteLM4040_Testando@tick+3
 11593  0037C8                     
 11594                           ;AppTesteLM4040.c: 272:  if(tick >= (uint32_t)(tickLast + 1))
 11595  0037C8  0E01               	movlw	1
 11596  0037CA  0101               	movlb	1	; () banked
 11597  0037CC  2548               	addwf	AppTesteLM4040_Testando@tickLast& (0+255),w,b
 11598  0037CE  6E2A               	movwf	??_AppTesteLM4040_Testando^0,c
 11599  0037D0  0E00               	movlw	0
 11600  0037D2  2149               	addwfc	(AppTesteLM4040_Testando@tickLast+1)& (0+255),w,b
 11601  0037D4  6E2B               	movwf	(??_AppTesteLM4040_Testando+1)^0,c
 11602  0037D6  0E00               	movlw	0
 11603  0037D8  214A               	addwfc	(AppTesteLM4040_Testando@tickLast+2)& (0+255),w,b
 11604  0037DA  6E2C               	movwf	(??_AppTesteLM4040_Testando+2)^0,c
 11605  0037DC  0E00               	movlw	0
 11606  0037DE  214B               	addwfc	(AppTesteLM4040_Testando@tickLast+3)& (0+255),w,b
 11607  0037E0  6E2D               	movwf	(??_AppTesteLM4040_Testando+3)^0,c
 11608  0037E2  502A               	movf	??_AppTesteLM4040_Testando^0,w,c
 11609  0037E4  0100               	movlb	0	; () banked
 11610  0037E6  5DD1               	subwf	AppTesteLM4040_Testando@tick& (0+255),w,b
 11611  0037E8  502B               	movf	(??_AppTesteLM4040_Testando+1)^0,w,c
 11612  0037EA  59D2               	subwfb	(AppTesteLM4040_Testando@tick+1)& (0+255),w,b
 11613  0037EC  502C               	movf	(??_AppTesteLM4040_Testando+2)^0,w,c
 11614  0037EE  59D3               	subwfb	(AppTesteLM4040_Testando@tick+2)& (0+255),w,b
 11615  0037F0  502D               	movf	(??_AppTesteLM4040_Testando+3)^0,w,c
 11616  0037F2  59D4               	subwfb	(AppTesteLM4040_Testando@tick+3)& (0+255),w,b
 11617  0037F4  A0D8               	btfss	status,0,c
 11618  0037F6  EFFF  F01B         	goto	u6031
 11619  0037FA  EF01  F01C         	goto	u6030
 11620  0037FE                     u6031:
 11621  0037FE  EF4F  F01C         	goto	l494
 11622  003802                     u6030:
 11623  003802                     
 11624                           ; BSR set to: 0
 11625                           ;AppTesteLM4040.c: 273:  {;AppTesteLM4040.c: 274:   tickLast = tick;
 11626  003802  C0D1  F148         	movff	AppTesteLM4040_Testando@tick,AppTesteLM4040_Testando@tickLast
 11627  003806  C0D2  F149         	movff	AppTesteLM4040_Testando@tick+1,AppTesteLM4040_Testando@tickLast+1
 11628  00380A  C0D3  F14A         	movff	AppTesteLM4040_Testando@tick+2,AppTesteLM4040_Testando@tickLast+2
 11629  00380E  C0D4  F14B         	movff	AppTesteLM4040_Testando@tick+3,AppTesteLM4040_Testando@tickLast+3
 11630  003812                     
 11631                           ; BSR set to: 0
 11632                           ;AppTesteLM4040.c: 275:         cont_tempo++;
 11633  003812  4BEB               	infsnz	_cont_tempo& (0+255),f,b
 11634  003814  2BEC               	incf	(_cont_tempo+1)& (0+255),f,b
 11635  003816                     
 11636                           ; BSR set to: 0
 11637                           ;AppTesteLM4040.c: 276:         if(cont_tempo >= 40000)
 11638  003816  0E40               	movlw	64
 11639  003818  5DEB               	subwf	_cont_tempo& (0+255),w,b
 11640  00381A  0E9C               	movlw	156
 11641  00381C  59EC               	subwfb	(_cont_tempo+1)& (0+255),w,b
 11642  00381E  A0D8               	btfss	status,0,c
 11643  003820  EF14  F01C         	goto	u6041
 11644  003824  EF16  F01C         	goto	u6040
 11645  003828                     u6041:
 11646  003828  EF4F  F01C         	goto	l494
 11647  00382C                     u6040:
 11648  00382C                     
 11649                           ; BSR set to: 0
 11650                           ;AppTesteLM4040.c: 277:         {;AppTesteLM4040.c: 278:             if(vMax > 10)
 11651  00382C  51F0               	movf	(_vMax+1)& (0+255),w,b
 11652  00382E  E109               	bnz	u6050
 11653  003830  0E0B               	movlw	11
 11654  003832  5DEF               	subwf	_vMax& (0+255),w,b
 11655  003834  A0D8               	btfss	status,0,c
 11656  003836  EF1F  F01C         	goto	u6051
 11657  00383A  EF21  F01C         	goto	u6050
 11658  00383E                     u6051:
 11659  00383E  EF38  F01C         	goto	l5416
 11660  003842                     u6050:
 11661  003842                     
 11662                           ; BSR set to: 0
 11663                           ;AppTesteLM4040.c: 279:             {;AppTesteLM4040.c: 280:                state.reprov
      +                          ado = 1;
 11664  003842  0E01               	movlw	1
 11665  003844  6FC8               	movwf	(_state+4)& (0+255),b
 11666  003846                     
 11667                           ; BSR set to: 0
 11668                           ;AppTesteLM4040.c: 281:                DATAEE_WriteByte(0x10, 0x52);
 11669  003846  0E00               	movlw	0
 11670  003848  6E04               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 11671  00384A  0E10               	movlw	16
 11672  00384C  6E03               	movwf	DATAEE_WriteByte@bAdd^0,c
 11673  00384E  0E52               	movlw	82
 11674  003850  6E05               	movwf	DATAEE_WriteByte@bData^0,c
 11675  003852  EC2A  F026         	call	_DATAEE_WriteByte	;wreg free
 11676  003856                     l5414:
 11677                           
 11678                           ;AppTesteLM4040.c: 282:                _delay((unsigned long)((300)*(10000000/4000.0)));
 11679  003856  0E04               	movlw	4
 11680  003858  6E2B               	movwf	(??_AppTesteLM4040_Testando+1)^0,c
 11681  00385A  0ECF               	movlw	207
 11682  00385C  6E2A               	movwf	??_AppTesteLM4040_Testando^0,c
 11683  00385E  0E02               	movlw	2
 11684  003860                     u6437:
 11685  003860  2EE8               	decfsz	wreg,f,c
 11686  003862  D7FE               	bra	u6437
 11687  003864  2E2A               	decfsz	??_AppTesteLM4040_Testando^0,f,c
 11688  003866  D7FC               	bra	u6437
 11689  003868  2E2B               	decfsz	(??_AppTesteLM4040_Testando+1)^0,f,c
 11690  00386A  D7FA               	bra	u6437
 11691                           
 11692                           ;AppTesteLM4040.c: 283:             }
 11693  00386C  EF4F  F01C         	goto	l494
 11694  003870                     l5416:
 11695                           
 11696                           ; BSR set to: 0
 11697  003870  51F0               	movf	(_vMax+1)& (0+255),w,b
 11698  003872  E107               	bnz	u6061
 11699  003874  0E0B               	movlw	11
 11700  003876  5DEF               	subwf	_vMax& (0+255),w,b
 11701  003878  B0D8               	btfsc	status,0,c
 11702  00387A  EF41  F01C         	goto	u6061
 11703  00387E  EF43  F01C         	goto	u6060
 11704  003882                     u6061:
 11705  003882  EF4F  F01C         	goto	l490
 11706  003886                     u6060:
 11707  003886                     
 11708                           ; BSR set to: 0
 11709                           ;AppTesteLM4040.c: 285:             {;AppTesteLM4040.c: 286:                state.aprova
      +                          do = 1;
 11710  003886  0E01               	movlw	1
 11711  003888  6FC7               	movwf	(_state+3)& (0+255),b
 11712  00388A                     
 11713                           ; BSR set to: 0
 11714                           ;AppTesteLM4040.c: 287:                DATAEE_WriteByte(0x10, 0x41);
 11715  00388A  0E00               	movlw	0
 11716  00388C  6E04               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 11717  00388E  0E10               	movlw	16
 11718  003890  6E03               	movwf	DATAEE_WriteByte@bAdd^0,c
 11719  003892  0E41               	movlw	65
 11720  003894  6E05               	movwf	DATAEE_WriteByte@bData^0,c
 11721  003896  EC2A  F026         	call	_DATAEE_WriteByte	;wreg free
 11722  00389A  EF2B  F01C         	goto	l5414
 11723  00389E                     l490:
 11724  00389E                     l494:
 11725  00389E  0012               	return		;funcret
 11726  0038A0                     __end_of_AppTesteLM4040_Testando:
 11727                           	opt callstack 0
 11728                           
 11729 ;; *************** function ___xxtofl *****************
 11730 ;; Defined at:
 11731 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 11732 ;; Parameters:    Size  Location     Type
 11733 ;;  sign            1    wreg     unsigned char 
 11734 ;;  val             4    2[COMRAM] long 
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;  sign            1   10[COMRAM] unsigned char 
 11737 ;;  arg             4   12[COMRAM] unsigned long 
 11738 ;;  exp             1   11[COMRAM] unsigned char 
 11739 ;; Return value:  Size  Location     Type
 11740 ;;                  4    2[COMRAM] unsigned char 
 11741 ;; Registers used:
 11742 ;;		wreg, status,2, status,0
 11743 ;; Tracked objects:
 11744 ;;		On entry : 0/0
 11745 ;;		On exit  : 0/0
 11746 ;;		Unchanged: 0/0
 11747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11749 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11751 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11752 ;;Total ram usage:       14 bytes
 11753 ;; Hardware stack levels used:    1
 11754 ;; Hardware stack levels required when called:    3
 11755 ;; This function calls:
 11756 ;;		Nothing
 11757 ;; This function is called by:
 11758 ;;		_AppTesteLM4040_Testando
 11759 ;; This function uses a non-reentrant model
 11760 ;;
 11761                           
 11762                           	psect	text68
 11763  003548                     __ptext68:
 11764                           	opt callstack 0
 11765  003548                     ___xxtofl:
 11766                           	opt callstack 24
 11767                           
 11768                           ;incstack = 0
 11769                           ;___xxtofl@sign stored from wreg
 11770  003548  6E0B               	movwf	___xxtofl@sign^0,c
 11771  00354A  500B               	movf	___xxtofl@sign^0,w,c
 11772  00354C  B4D8               	btfsc	status,2,c
 11773  00354E  EFAB  F01A         	goto	u5821
 11774  003552  EFAD  F01A         	goto	u5820
 11775  003556                     u5821:
 11776  003556  EFCF  F01A         	goto	l1465
 11777  00355A                     u5820:
 11778  00355A  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 11779  00355C  EFB4  F01A         	goto	u5830
 11780  003560  EFB2  F01A         	goto	u5831
 11781  003564                     u5831:
 11782  003564  EFCF  F01A         	goto	l1465
 11783  003568                     u5830:
 11784  003568  C003  F007         	movff	___xxtofl@val,??___xxtofl
 11785  00356C  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
 11786  003570  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
 11787  003574  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
 11788  003578  1E07               	comf	??___xxtofl^0,f,c
 11789  00357A  1E08               	comf	(??___xxtofl+1)^0,f,c
 11790  00357C  1E09               	comf	(??___xxtofl+2)^0,f,c
 11791  00357E  1E0A               	comf	(??___xxtofl+3)^0,f,c
 11792  003580  2A07               	incf	??___xxtofl^0,f,c
 11793  003582  0E00               	movlw	0
 11794  003584  2208               	addwfc	(??___xxtofl+1)^0,f,c
 11795  003586  2209               	addwfc	(??___xxtofl+2)^0,f,c
 11796  003588  220A               	addwfc	(??___xxtofl+3)^0,f,c
 11797  00358A  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
 11798  00358E  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
 11799  003592  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
 11800  003596  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
 11801  00359A  EFD7  F01A         	goto	l5270
 11802  00359E                     l1465:
 11803  00359E  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
 11804  0035A2  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11805  0035A6  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11806  0035AA  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11807  0035AE                     l5270:
 11808  0035AE  5003               	movf	___xxtofl@val^0,w,c
 11809  0035B0  1004               	iorwf	(___xxtofl@val+1)^0,w,c
 11810  0035B2  1005               	iorwf	(___xxtofl@val+2)^0,w,c
 11811  0035B4  1006               	iorwf	(___xxtofl@val+3)^0,w,c
 11812  0035B6  A4D8               	btfss	status,2,c
 11813  0035B8  EFE0  F01A         	goto	u5841
 11814  0035BC  EFE2  F01A         	goto	u5840
 11815  0035C0                     u5841:
 11816  0035C0  EFEC  F01A         	goto	l5276
 11817  0035C4                     u5840:
 11818  0035C4  0E00               	movlw	0
 11819  0035C6  6E03               	movwf	?___xxtofl^0,c
 11820  0035C8  0E00               	movlw	0
 11821  0035CA  6E04               	movwf	(?___xxtofl+1)^0,c
 11822  0035CC  0E00               	movlw	0
 11823  0035CE  6E05               	movwf	(?___xxtofl+2)^0,c
 11824  0035D0  0E00               	movlw	0
 11825  0035D2  6E06               	movwf	(?___xxtofl+3)^0,c
 11826  0035D4  EF7D  F01B         	goto	l1468
 11827  0035D8                     l5276:
 11828  0035D8  0E96               	movlw	150
 11829  0035DA  6E0C               	movwf	___xxtofl@exp^0,c
 11830  0035DC  EFF6  F01A         	goto	l5280
 11831  0035E0                     l5278:
 11832  0035E0  2A0C               	incf	___xxtofl@exp^0,f,c
 11833  0035E2  90D8               	bcf	status,0,c
 11834  0035E4  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 11835  0035E6  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 11836  0035E8  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 11837  0035EA  320D               	rrcf	___xxtofl@arg^0,f,c
 11838  0035EC                     l5280:
 11839  0035EC  0E00               	movlw	0
 11840  0035EE  140D               	andwf	___xxtofl@arg^0,w,c
 11841  0035F0  6E07               	movwf	??___xxtofl^0,c
 11842  0035F2  0E00               	movlw	0
 11843  0035F4  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 11844  0035F6  6E08               	movwf	(??___xxtofl+1)^0,c
 11845  0035F8  0E00               	movlw	0
 11846  0035FA  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 11847  0035FC  6E09               	movwf	(??___xxtofl+2)^0,c
 11848  0035FE  0EFE               	movlw	254
 11849  003600  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 11850  003602  6E0A               	movwf	(??___xxtofl+3)^0,c
 11851  003604  5007               	movf	??___xxtofl^0,w,c
 11852  003606  1008               	iorwf	(??___xxtofl+1)^0,w,c
 11853  003608  1009               	iorwf	(??___xxtofl+2)^0,w,c
 11854  00360A  100A               	iorwf	(??___xxtofl+3)^0,w,c
 11855  00360C  A4D8               	btfss	status,2,c
 11856  00360E  EF0B  F01B         	goto	u5851
 11857  003612  EF0D  F01B         	goto	u5850
 11858  003616                     u5851:
 11859  003616  EFF0  F01A         	goto	l5278
 11860  00361A                     u5850:
 11861  00361A  EF1B  F01B         	goto	l1472
 11862  00361E                     l5282:
 11863  00361E  2A0C               	incf	___xxtofl@exp^0,f,c
 11864  003620  0E01               	movlw	1
 11865  003622  260D               	addwf	___xxtofl@arg^0,f,c
 11866  003624  0E00               	movlw	0
 11867  003626  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
 11868  003628  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
 11869  00362A  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
 11870  00362C  90D8               	bcf	status,0,c
 11871  00362E  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 11872  003630  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 11873  003632  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 11874  003634  320D               	rrcf	___xxtofl@arg^0,f,c
 11875  003636                     l1472:
 11876  003636  0E00               	movlw	0
 11877  003638  140D               	andwf	___xxtofl@arg^0,w,c
 11878  00363A  6E07               	movwf	??___xxtofl^0,c
 11879  00363C  0E00               	movlw	0
 11880  00363E  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 11881  003640  6E08               	movwf	(??___xxtofl+1)^0,c
 11882  003642  0E00               	movlw	0
 11883  003644  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 11884  003646  6E09               	movwf	(??___xxtofl+2)^0,c
 11885  003648  0EFF               	movlw	255
 11886  00364A  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 11887  00364C  6E0A               	movwf	(??___xxtofl+3)^0,c
 11888  00364E  5007               	movf	??___xxtofl^0,w,c
 11889  003650  1008               	iorwf	(??___xxtofl+1)^0,w,c
 11890  003652  1009               	iorwf	(??___xxtofl+2)^0,w,c
 11891  003654  100A               	iorwf	(??___xxtofl+3)^0,w,c
 11892  003656  A4D8               	btfss	status,2,c
 11893  003658  EF30  F01B         	goto	u5861
 11894  00365C  EF32  F01B         	goto	u5860
 11895  003660                     u5861:
 11896  003660  EF0F  F01B         	goto	l5282
 11897  003664                     u5860:
 11898  003664  EF3A  F01B         	goto	l5290
 11899  003668                     l5288:
 11900  003668  060C               	decf	___xxtofl@exp^0,f,c
 11901  00366A  90D8               	bcf	status,0,c
 11902  00366C  360D               	rlcf	___xxtofl@arg^0,f,c
 11903  00366E  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
 11904  003670  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
 11905  003672  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
 11906  003674                     l5290:
 11907  003674  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
 11908  003676  EF3F  F01B         	goto	u5871
 11909  00367A  EF41  F01B         	goto	u5870
 11910  00367E                     u5871:
 11911  00367E  EF49  F01B         	goto	l1479
 11912  003682                     u5870:
 11913  003682  0E02               	movlw	2
 11914  003684  600C               	cpfslt	___xxtofl@exp^0,c
 11915  003686  EF47  F01B         	goto	u5881
 11916  00368A  EF49  F01B         	goto	u5880
 11917  00368E                     u5881:
 11918  00368E  EF34  F01B         	goto	l5288
 11919  003692                     u5880:
 11920  003692                     l1479:
 11921  003692  B00C               	btfsc	___xxtofl@exp^0,0,c
 11922  003694  EF4E  F01B         	goto	u5891
 11923  003698  EF50  F01B         	goto	u5890
 11924  00369C                     u5891:
 11925  00369C  EF51  F01B         	goto	l5296
 11926  0036A0                     u5890:
 11927  0036A0  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
 11928  0036A2                     l5296:
 11929  0036A2  90D8               	bcf	status,0,c
 11930  0036A4  320C               	rrcf	___xxtofl@exp^0,f,c
 11931  0036A6  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
 11932  0036AA  6A08               	clrf	(??___xxtofl+1)^0,c
 11933  0036AC  6A09               	clrf	(??___xxtofl+2)^0,c
 11934  0036AE  6A0A               	clrf	(??___xxtofl+3)^0,c
 11935  0036B0  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
 11936  0036B4  6A09               	clrf	(??___xxtofl+2)^0,c
 11937  0036B6  6A08               	clrf	(??___xxtofl+1)^0,c
 11938  0036B8  6A07               	clrf	??___xxtofl^0,c
 11939  0036BA  5007               	movf	??___xxtofl^0,w,c
 11940  0036BC  120D               	iorwf	___xxtofl@arg^0,f,c
 11941  0036BE  5008               	movf	(??___xxtofl+1)^0,w,c
 11942  0036C0  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
 11943  0036C2  5009               	movf	(??___xxtofl+2)^0,w,c
 11944  0036C4  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
 11945  0036C6  500A               	movf	(??___xxtofl+3)^0,w,c
 11946  0036C8  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
 11947  0036CA  500B               	movf	___xxtofl@sign^0,w,c
 11948  0036CC  B4D8               	btfsc	status,2,c
 11949  0036CE  EF6B  F01B         	goto	u5901
 11950  0036D2  EF6D  F01B         	goto	u5900
 11951  0036D6                     u5901:
 11952  0036D6  EF75  F01B         	goto	l5306
 11953  0036DA                     u5900:
 11954  0036DA  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 11955  0036DC  EF74  F01B         	goto	u5910
 11956  0036E0  EF72  F01B         	goto	u5911
 11957  0036E4                     u5911:
 11958  0036E4  EF75  F01B         	goto	l5306
 11959  0036E8                     u5910:
 11960  0036E8  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
 11961  0036EA                     l5306:
 11962  0036EA  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
 11963  0036EE  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
 11964  0036F2  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
 11965  0036F6  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
 11966  0036FA                     l1468:
 11967  0036FA  0012               	return		;funcret
 11968  0036FC                     __end_of___xxtofl:
 11969                           	opt callstack 0
 11970                           
 11971 ;; *************** function ___flmul *****************
 11972 ;; Defined at:
 11973 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;  b               4   16[COMRAM] unsigned char 
 11976 ;;  a               4   20[COMRAM] unsigned char 
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;  prod            4   35[COMRAM] struct .
 11979 ;;  grs             4   29[COMRAM] unsigned long 
 11980 ;;  temp            2   39[COMRAM] struct .
 11981 ;;  bexp            1   34[COMRAM] unsigned char 
 11982 ;;  aexp            1   33[COMRAM] unsigned char 
 11983 ;;  sign            1   28[COMRAM] unsigned char 
 11984 ;; Return value:  Size  Location     Type
 11985 ;;                  4   16[COMRAM] unsigned char 
 11986 ;; Registers used:
 11987 ;;		wreg, status,2, status,0, prodl, prodh
 11988 ;; Tracked objects:
 11989 ;;		On entry : 0/0
 11990 ;;		On exit  : 0/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11993 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11994 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11995 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11996 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11997 ;;Total ram usage:       25 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; Hardware stack levels required when called:    3
 12000 ;; This function calls:
 12001 ;;		Nothing
 12002 ;; This function is called by:
 12003 ;;		_AppTesteLM4040_Testando
 12004 ;;		_efgtoa
 12005 ;;		_Convert_ftochar
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           
 12009                           	psect	text69
 12010  0026EC                     __ptext69:
 12011                           	opt callstack 0
 12012  0026EC                     ___flmul:
 12013                           	opt callstack 21
 12014  0026EC  5014               	movf	(___flmul@b+3)^0,w,c
 12015  0026EE  0B80               	andlw	128
 12016  0026F0  6E1D               	movwf	___flmul@sign^0,c
 12017  0026F2  5014               	movf	(___flmul@b+3)^0,w,c
 12018  0026F4  2414               	addwf	(___flmul@b+3)^0,w,c
 12019  0026F6  6E23               	movwf	___flmul@bexp^0,c
 12020  0026F8  AE13               	btfss	(___flmul@b+2)^0,7,c
 12021  0026FA  EF81  F013         	goto	u4221
 12022  0026FE  EF83  F013         	goto	u4220
 12023  002702                     u4221:
 12024  002702  EF84  F013         	goto	l4236
 12025  002706                     u4220:
 12026  002706  8023               	bsf	___flmul@bexp^0,0,c
 12027  002708                     l4236:
 12028  002708  5023               	movf	___flmul@bexp^0,w,c
 12029  00270A  B4D8               	btfsc	status,2,c
 12030  00270C  EF8A  F013         	goto	u4231
 12031  002710  EF8C  F013         	goto	u4230
 12032  002714                     u4231:
 12033  002714  EF9F  F013         	goto	l4244
 12034  002718                     u4230:
 12035  002718  2823               	incf	___flmul@bexp^0,w,c
 12036  00271A  A4D8               	btfss	status,2,c
 12037  00271C  EF92  F013         	goto	u4241
 12038  002720  EF94  F013         	goto	u4240
 12039  002724                     u4241:
 12040  002724  EF9C  F013         	goto	l4242
 12041  002728                     u4240:
 12042  002728  0E00               	movlw	0
 12043  00272A  6E11               	movwf	___flmul@b^0,c
 12044  00272C  0E00               	movlw	0
 12045  00272E  6E12               	movwf	(___flmul@b+1)^0,c
 12046  002730  0E00               	movlw	0
 12047  002732  6E13               	movwf	(___flmul@b+2)^0,c
 12048  002734  0E00               	movlw	0
 12049  002736  6E14               	movwf	(___flmul@b+3)^0,c
 12050  002738                     l4242:
 12051  002738  8E13               	bsf	(___flmul@b+2)^0,7,c
 12052  00273A  EFA7  F013         	goto	l4246
 12053  00273E                     l4244:
 12054  00273E  0E00               	movlw	0
 12055  002740  6E11               	movwf	___flmul@b^0,c
 12056  002742  0E00               	movlw	0
 12057  002744  6E12               	movwf	(___flmul@b+1)^0,c
 12058  002746  0E00               	movlw	0
 12059  002748  6E13               	movwf	(___flmul@b+2)^0,c
 12060  00274A  0E00               	movlw	0
 12061  00274C  6E14               	movwf	(___flmul@b+3)^0,c
 12062  00274E                     l4246:
 12063  00274E  5018               	movf	(___flmul@a+3)^0,w,c
 12064  002750  0B80               	andlw	128
 12065  002752  1A1D               	xorwf	___flmul@sign^0,f,c
 12066  002754  5018               	movf	(___flmul@a+3)^0,w,c
 12067  002756  2418               	addwf	(___flmul@a+3)^0,w,c
 12068  002758  6E22               	movwf	___flmul@aexp^0,c
 12069  00275A  AE17               	btfss	(___flmul@a+2)^0,7,c
 12070  00275C  EFB2  F013         	goto	u4251
 12071  002760  EFB4  F013         	goto	u4250
 12072  002764                     u4251:
 12073  002764  EFB5  F013         	goto	l4254
 12074  002768                     u4250:
 12075  002768  8022               	bsf	___flmul@aexp^0,0,c
 12076  00276A                     l4254:
 12077  00276A  5022               	movf	___flmul@aexp^0,w,c
 12078  00276C  B4D8               	btfsc	status,2,c
 12079  00276E  EFBB  F013         	goto	u4261
 12080  002772  EFBD  F013         	goto	u4260
 12081  002776                     u4261:
 12082  002776  EFD0  F013         	goto	l4262
 12083  00277A                     u4260:
 12084  00277A  2822               	incf	___flmul@aexp^0,w,c
 12085  00277C  A4D8               	btfss	status,2,c
 12086  00277E  EFC3  F013         	goto	u4271
 12087  002782  EFC5  F013         	goto	u4270
 12088  002786                     u4271:
 12089  002786  EFCD  F013         	goto	l4260
 12090  00278A                     u4270:
 12091  00278A  0E00               	movlw	0
 12092  00278C  6E15               	movwf	___flmul@a^0,c
 12093  00278E  0E00               	movlw	0
 12094  002790  6E16               	movwf	(___flmul@a+1)^0,c
 12095  002792  0E00               	movlw	0
 12096  002794  6E17               	movwf	(___flmul@a+2)^0,c
 12097  002796  0E00               	movlw	0
 12098  002798  6E18               	movwf	(___flmul@a+3)^0,c
 12099  00279A                     l4260:
 12100  00279A  8E17               	bsf	(___flmul@a+2)^0,7,c
 12101  00279C  EFD8  F013         	goto	l1424
 12102  0027A0                     l4262:
 12103  0027A0  0E00               	movlw	0
 12104  0027A2  6E15               	movwf	___flmul@a^0,c
 12105  0027A4  0E00               	movlw	0
 12106  0027A6  6E16               	movwf	(___flmul@a+1)^0,c
 12107  0027A8  0E00               	movlw	0
 12108  0027AA  6E17               	movwf	(___flmul@a+2)^0,c
 12109  0027AC  0E00               	movlw	0
 12110  0027AE  6E18               	movwf	(___flmul@a+3)^0,c
 12111  0027B0                     l1424:
 12112  0027B0  5022               	movf	___flmul@aexp^0,w,c
 12113  0027B2  B4D8               	btfsc	status,2,c
 12114  0027B4  EFDE  F013         	goto	u4281
 12115  0027B8  EFE0  F013         	goto	u4280
 12116  0027BC                     u4281:
 12117  0027BC  EFE8  F013         	goto	l4266
 12118  0027C0                     u4280:
 12119  0027C0  5023               	movf	___flmul@bexp^0,w,c
 12120  0027C2  A4D8               	btfss	status,2,c
 12121  0027C4  EFE6  F013         	goto	u4291
 12122  0027C8  EFE8  F013         	goto	u4290
 12123  0027CC                     u4291:
 12124  0027CC  EFF2  F013         	goto	l4270
 12125  0027D0                     u4290:
 12126  0027D0                     l4266:
 12127  0027D0  0E00               	movlw	0
 12128  0027D2  6E11               	movwf	?___flmul^0,c
 12129  0027D4  0E00               	movlw	0
 12130  0027D6  6E12               	movwf	(?___flmul+1)^0,c
 12131  0027D8  0E00               	movlw	0
 12132  0027DA  6E13               	movwf	(?___flmul+2)^0,c
 12133  0027DC  0E00               	movlw	0
 12134  0027DE  6E14               	movwf	(?___flmul+3)^0,c
 12135  0027E0  EF8A  F015         	goto	l1428
 12136  0027E4                     l4270:
 12137  0027E4  5017               	movf	(___flmul@a+2)^0,w,c
 12138  0027E6  0211               	mulwf	___flmul@b^0,c
 12139  0027E8  CFF3 F028          	movff	prodl,___flmul@temp
 12140  0027EC  CFF4 F029          	movff	prodh,___flmul@temp+1
 12141  0027F0  5028               	movf	___flmul@temp^0,w,c
 12142  0027F2  6E1E               	movwf	___flmul@grs^0,c
 12143  0027F4  6A1F               	clrf	(___flmul@grs+1)^0,c
 12144  0027F6  6A20               	clrf	(___flmul@grs+2)^0,c
 12145  0027F8  6A21               	clrf	(___flmul@grs+3)^0,c
 12146  0027FA  5029               	movf	(___flmul@temp+1)^0,w,c
 12147  0027FC  6E24               	movwf	___flmul@prod^0,c
 12148  0027FE  6A25               	clrf	(___flmul@prod+1)^0,c
 12149  002800  6A26               	clrf	(___flmul@prod+2)^0,c
 12150  002802  6A27               	clrf	(___flmul@prod+3)^0,c
 12151  002804  5016               	movf	(___flmul@a+1)^0,w,c
 12152  002806  0212               	mulwf	(___flmul@b+1)^0,c
 12153  002808  CFF3 F028          	movff	prodl,___flmul@temp
 12154  00280C  CFF4 F029          	movff	prodh,___flmul@temp+1
 12155  002810  5028               	movf	___flmul@temp^0,w,c
 12156  002812  261E               	addwf	___flmul@grs^0,f,c
 12157  002814  0E00               	movlw	0
 12158  002816  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12159  002818  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12160  00281A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12161  00281C  5029               	movf	(___flmul@temp+1)^0,w,c
 12162  00281E  2624               	addwf	___flmul@prod^0,f,c
 12163  002820  0E00               	movlw	0
 12164  002822  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12165  002824  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12166  002826  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12167  002828  5015               	movf	___flmul@a^0,w,c
 12168  00282A  0213               	mulwf	(___flmul@b+2)^0,c
 12169  00282C  CFF3 F028          	movff	prodl,___flmul@temp
 12170  002830  CFF4 F029          	movff	prodh,___flmul@temp+1
 12171  002834  5028               	movf	___flmul@temp^0,w,c
 12172  002836  261E               	addwf	___flmul@grs^0,f,c
 12173  002838  0E00               	movlw	0
 12174  00283A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12175  00283C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12176  00283E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12177  002840  5029               	movf	(___flmul@temp+1)^0,w,c
 12178  002842  2624               	addwf	___flmul@prod^0,f,c
 12179  002844  0E00               	movlw	0
 12180  002846  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12181  002848  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12182  00284A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12183  00284C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 12184  002850  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 12185  002854  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 12186  002858  6A1E               	clrf	___flmul@grs^0,c
 12187  00285A  5015               	movf	___flmul@a^0,w,c
 12188  00285C  0212               	mulwf	(___flmul@b+1)^0,c
 12189  00285E  CFF3 F028          	movff	prodl,___flmul@temp
 12190  002862  CFF4 F029          	movff	prodh,___flmul@temp+1
 12191  002866  5028               	movf	___flmul@temp^0,w,c
 12192  002868  261E               	addwf	___flmul@grs^0,f,c
 12193  00286A  5029               	movf	(___flmul@temp+1)^0,w,c
 12194  00286C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12195  00286E  0E00               	movlw	0
 12196  002870  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12197  002872  0E00               	movlw	0
 12198  002874  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12199  002876  5016               	movf	(___flmul@a+1)^0,w,c
 12200  002878  0211               	mulwf	___flmul@b^0,c
 12201  00287A  CFF3 F028          	movff	prodl,___flmul@temp
 12202  00287E  CFF4 F029          	movff	prodh,___flmul@temp+1
 12203  002882  5028               	movf	___flmul@temp^0,w,c
 12204  002884  261E               	addwf	___flmul@grs^0,f,c
 12205  002886  5029               	movf	(___flmul@temp+1)^0,w,c
 12206  002888  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12207  00288A  0E00               	movlw	0
 12208  00288C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12209  00288E  0E00               	movlw	0
 12210  002890  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12211  002892  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 12212  002896  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 12213  00289A  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 12214  00289E  6A1E               	clrf	___flmul@grs^0,c
 12215  0028A0  5015               	movf	___flmul@a^0,w,c
 12216  0028A2  0211               	mulwf	___flmul@b^0,c
 12217  0028A4  CFF3 F028          	movff	prodl,___flmul@temp
 12218  0028A8  CFF4 F029          	movff	prodh,___flmul@temp+1
 12219  0028AC  5028               	movf	___flmul@temp^0,w,c
 12220  0028AE  261E               	addwf	___flmul@grs^0,f,c
 12221  0028B0  5029               	movf	(___flmul@temp+1)^0,w,c
 12222  0028B2  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12223  0028B4  0E00               	movlw	0
 12224  0028B6  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12225  0028B8  0E00               	movlw	0
 12226  0028BA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12227  0028BC  5017               	movf	(___flmul@a+2)^0,w,c
 12228  0028BE  0212               	mulwf	(___flmul@b+1)^0,c
 12229  0028C0  CFF3 F028          	movff	prodl,___flmul@temp
 12230  0028C4  CFF4 F029          	movff	prodh,___flmul@temp+1
 12231  0028C8  5028               	movf	___flmul@temp^0,w,c
 12232  0028CA  2624               	addwf	___flmul@prod^0,f,c
 12233  0028CC  5029               	movf	(___flmul@temp+1)^0,w,c
 12234  0028CE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12235  0028D0  0E00               	movlw	0
 12236  0028D2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12237  0028D4  0E00               	movlw	0
 12238  0028D6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12239  0028D8  5016               	movf	(___flmul@a+1)^0,w,c
 12240  0028DA  0213               	mulwf	(___flmul@b+2)^0,c
 12241  0028DC  CFF3 F028          	movff	prodl,___flmul@temp
 12242  0028E0  CFF4 F029          	movff	prodh,___flmul@temp+1
 12243  0028E4  5028               	movf	___flmul@temp^0,w,c
 12244  0028E6  2624               	addwf	___flmul@prod^0,f,c
 12245  0028E8  5029               	movf	(___flmul@temp+1)^0,w,c
 12246  0028EA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12247  0028EC  0E00               	movlw	0
 12248  0028EE  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12249  0028F0  0E00               	movlw	0
 12250  0028F2  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12251  0028F4  5017               	movf	(___flmul@a+2)^0,w,c
 12252  0028F6  0213               	mulwf	(___flmul@b+2)^0,c
 12253  0028F8  CFF3 F028          	movff	prodl,___flmul@temp
 12254  0028FC  CFF4 F029          	movff	prodh,___flmul@temp+1
 12255  002900  5028               	movf	___flmul@temp^0,w,c
 12256  002902  6E19               	movwf	??___flmul^0,c
 12257  002904  5029               	movf	(___flmul@temp+1)^0,w,c
 12258  002906  6E1A               	movwf	(??___flmul+1)^0,c
 12259  002908  6A1B               	clrf	(??___flmul+2)^0,c
 12260  00290A  6A1C               	clrf	(??___flmul+3)^0,c
 12261  00290C  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 12262  002910  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 12263  002914  C019  F01A         	movff	??___flmul,??___flmul+1
 12264  002918  6A19               	clrf	??___flmul^0,c
 12265  00291A  5019               	movf	??___flmul^0,w,c
 12266  00291C  2624               	addwf	___flmul@prod^0,f,c
 12267  00291E  501A               	movf	(??___flmul+1)^0,w,c
 12268  002920  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12269  002922  501B               	movf	(??___flmul+2)^0,w,c
 12270  002924  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12271  002926  501C               	movf	(??___flmul+3)^0,w,c
 12272  002928  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12273  00292A  C01E  F019         	movff	___flmul@grs,??___flmul
 12274  00292E  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 12275  002932  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 12276  002936  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 12277  00293A  0E19               	movlw	25
 12278  00293C  EFA5  F014         	goto	u4300
 12279  002940                     u4305:
 12280  002940  90D8               	bcf	status,0,c
 12281  002942  321C               	rrcf	(??___flmul+3)^0,f,c
 12282  002944  321B               	rrcf	(??___flmul+2)^0,f,c
 12283  002946  321A               	rrcf	(??___flmul+1)^0,f,c
 12284  002948  3219               	rrcf	??___flmul^0,f,c
 12285  00294A                     u4300:
 12286  00294A  2EE8               	decfsz	wreg,f,c
 12287  00294C  EFA0  F014         	goto	u4305
 12288  002950  5019               	movf	??___flmul^0,w,c
 12289  002952  2624               	addwf	___flmul@prod^0,f,c
 12290  002954  501A               	movf	(??___flmul+1)^0,w,c
 12291  002956  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12292  002958  501B               	movf	(??___flmul+2)^0,w,c
 12293  00295A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12294  00295C  501C               	movf	(??___flmul+3)^0,w,c
 12295  00295E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12296  002960  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 12297  002964  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 12298  002968  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 12299  00296C  6A1E               	clrf	___flmul@grs^0,c
 12300  00296E  5022               	movf	___flmul@aexp^0,w,c
 12301  002970  C023  F019         	movff	___flmul@bexp,??___flmul
 12302  002974  6A1A               	clrf	(??___flmul+1)^0,c
 12303  002976  2619               	addwf	??___flmul^0,f,c
 12304  002978  0E00               	movlw	0
 12305  00297A  221A               	addwfc	(??___flmul+1)^0,f,c
 12306  00297C  0E82               	movlw	130
 12307  00297E  2419               	addwf	??___flmul^0,w,c
 12308  002980  6E28               	movwf	___flmul@temp^0,c
 12309  002982  0EFF               	movlw	255
 12310  002984  201A               	addwfc	(??___flmul+1)^0,w,c
 12311  002986  6E29               	movwf	(___flmul@temp+1)^0,c
 12312  002988  EFDB  F014         	goto	l4318
 12313  00298C                     l4312:
 12314  00298C  90D8               	bcf	status,0,c
 12315  00298E  3624               	rlcf	___flmul@prod^0,f,c
 12316  002990  3625               	rlcf	(___flmul@prod+1)^0,f,c
 12317  002992  3626               	rlcf	(___flmul@prod+2)^0,f,c
 12318  002994  3627               	rlcf	(___flmul@prod+3)^0,f,c
 12319  002996  AE21               	btfss	(___flmul@grs+3)^0,7,c
 12320  002998  EFD0  F014         	goto	u4311
 12321  00299C  EFD2  F014         	goto	u4310
 12322  0029A0                     u4311:
 12323  0029A0  EFD3  F014         	goto	l1431
 12324  0029A4                     u4310:
 12325  0029A4  8024               	bsf	___flmul@prod^0,0,c
 12326  0029A6                     l1431:
 12327  0029A6  90D8               	bcf	status,0,c
 12328  0029A8  361E               	rlcf	___flmul@grs^0,f,c
 12329  0029AA  361F               	rlcf	(___flmul@grs+1)^0,f,c
 12330  0029AC  3620               	rlcf	(___flmul@grs+2)^0,f,c
 12331  0029AE  3621               	rlcf	(___flmul@grs+3)^0,f,c
 12332  0029B0  0628               	decf	___flmul@temp^0,f,c
 12333  0029B2  A0D8               	btfss	status,0,c
 12334  0029B4  0629               	decf	(___flmul@temp+1)^0,f,c
 12335  0029B6                     l4318:
 12336  0029B6  AE26               	btfss	(___flmul@prod+2)^0,7,c
 12337  0029B8  EFE0  F014         	goto	u4321
 12338  0029BC  EFE2  F014         	goto	u4320
 12339  0029C0                     u4321:
 12340  0029C0  EFC6  F014         	goto	l4312
 12341  0029C4                     u4320:
 12342  0029C4  0E00               	movlw	0
 12343  0029C6  6E22               	movwf	___flmul@aexp^0,c
 12344  0029C8  AE21               	btfss	(___flmul@grs+3)^0,7,c
 12345  0029CA  EFE9  F014         	goto	u4331
 12346  0029CE  EFEB  F014         	goto	u4330
 12347  0029D2                     u4331:
 12348  0029D2  EF0F  F015         	goto	l1433
 12349  0029D6                     u4330:
 12350  0029D6  0EFF               	movlw	255
 12351  0029D8  141E               	andwf	___flmul@grs^0,w,c
 12352  0029DA  6E19               	movwf	??___flmul^0,c
 12353  0029DC  0EFF               	movlw	255
 12354  0029DE  141F               	andwf	(___flmul@grs+1)^0,w,c
 12355  0029E0  6E1A               	movwf	(??___flmul+1)^0,c
 12356  0029E2  0EFF               	movlw	255
 12357  0029E4  1420               	andwf	(___flmul@grs+2)^0,w,c
 12358  0029E6  6E1B               	movwf	(??___flmul+2)^0,c
 12359  0029E8  0E7F               	movlw	127
 12360  0029EA  1421               	andwf	(___flmul@grs+3)^0,w,c
 12361  0029EC  6E1C               	movwf	(??___flmul+3)^0,c
 12362  0029EE  5019               	movf	??___flmul^0,w,c
 12363  0029F0  101A               	iorwf	(??___flmul+1)^0,w,c
 12364  0029F2  101B               	iorwf	(??___flmul+2)^0,w,c
 12365  0029F4  101C               	iorwf	(??___flmul+3)^0,w,c
 12366  0029F6  B4D8               	btfsc	status,2,c
 12367  0029F8  EF00  F015         	goto	u4341
 12368  0029FC  EF02  F015         	goto	u4340
 12369  002A00                     u4341:
 12370  002A00  EF06  F015         	goto	l1434
 12371  002A04                     u4340:
 12372  002A04                     l4326:
 12373  002A04  0E01               	movlw	1
 12374  002A06  6E22               	movwf	___flmul@aexp^0,c
 12375  002A08  EF0F  F015         	goto	l1433
 12376  002A0C                     l1434:
 12377  002A0C  A024               	btfss	___flmul@prod^0,0,c
 12378  002A0E  EF0B  F015         	goto	u4351
 12379  002A12  EF0D  F015         	goto	u4350
 12380  002A16                     u4351:
 12381  002A16  EF0F  F015         	goto	l1433
 12382  002A1A                     u4350:
 12383  002A1A  EF02  F015         	goto	l4326
 12384  002A1E                     l1433:
 12385  002A1E  5022               	movf	___flmul@aexp^0,w,c
 12386  002A20  B4D8               	btfsc	status,2,c
 12387  002A22  EF15  F015         	goto	u4361
 12388  002A26  EF17  F015         	goto	u4360
 12389  002A2A                     u4361:
 12390  002A2A  EF3B  F015         	goto	l4338
 12391  002A2E                     u4360:
 12392  002A2E  0E01               	movlw	1
 12393  002A30  2624               	addwf	___flmul@prod^0,f,c
 12394  002A32  0E00               	movlw	0
 12395  002A34  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12396  002A36  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12397  002A38  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12398  002A3A  A027               	btfss	(___flmul@prod+3)^0,0,c
 12399  002A3C  EF22  F015         	goto	u4371
 12400  002A40  EF24  F015         	goto	u4370
 12401  002A44                     u4371:
 12402  002A44  EF3B  F015         	goto	l4338
 12403  002A48                     u4370:
 12404  002A48  C024  F019         	movff	___flmul@prod,??___flmul
 12405  002A4C  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 12406  002A50  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 12407  002A54  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 12408  002A58  341C               	rlcf	(??___flmul+3)^0,w,c
 12409  002A5A  321C               	rrcf	(??___flmul+3)^0,f,c
 12410  002A5C  321B               	rrcf	(??___flmul+2)^0,f,c
 12411  002A5E  321A               	rrcf	(??___flmul+1)^0,f,c
 12412  002A60  3219               	rrcf	??___flmul^0,f,c
 12413  002A62  C019  F024         	movff	??___flmul,___flmul@prod
 12414  002A66  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 12415  002A6A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 12416  002A6E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 12417  002A72  4A28               	infsnz	___flmul@temp^0,f,c
 12418  002A74  2A29               	incf	(___flmul@temp+1)^0,f,c
 12419  002A76                     l4338:
 12420  002A76  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 12421  002A78  EF46  F015         	goto	u4381
 12422  002A7C  5029               	movf	(___flmul@temp+1)^0,w,c
 12423  002A7E  E108               	bnz	u4380
 12424  002A80  2828               	incf	___flmul@temp^0,w,c
 12425  002A82  A0D8               	btfss	status,0,c
 12426  002A84  EF46  F015         	goto	u4381
 12427  002A88  EF48  F015         	goto	u4380
 12428  002A8C                     u4381:
 12429  002A8C  EF52  F015         	goto	l4342
 12430  002A90                     u4380:
 12431  002A90  0E00               	movlw	0
 12432  002A92  6E24               	movwf	___flmul@prod^0,c
 12433  002A94  0E00               	movlw	0
 12434  002A96  6E25               	movwf	(___flmul@prod+1)^0,c
 12435  002A98  0E80               	movlw	128
 12436  002A9A  6E26               	movwf	(___flmul@prod+2)^0,c
 12437  002A9C  0E7F               	movlw	127
 12438  002A9E  6E27               	movwf	(___flmul@prod+3)^0,c
 12439  002AA0  EF80  F015         	goto	l4354
 12440  002AA4                     l4342:
 12441  002AA4  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 12442  002AA6  EF5F  F015         	goto	u4390
 12443  002AAA  5029               	movf	(___flmul@temp+1)^0,w,c
 12444  002AAC  E106               	bnz	u4391
 12445  002AAE  0428               	decf	___flmul@temp^0,w,c
 12446  002AB0  B0D8               	btfsc	status,0,c
 12447  002AB2  EF5D  F015         	goto	u4391
 12448  002AB6  EF5F  F015         	goto	u4390
 12449  002ABA                     u4391:
 12450  002ABA  EF6B  F015         	goto	l1441
 12451  002ABE                     u4390:
 12452  002ABE  0E00               	movlw	0
 12453  002AC0  6E24               	movwf	___flmul@prod^0,c
 12454  002AC2  0E00               	movlw	0
 12455  002AC4  6E25               	movwf	(___flmul@prod+1)^0,c
 12456  002AC6  0E00               	movlw	0
 12457  002AC8  6E26               	movwf	(___flmul@prod+2)^0,c
 12458  002ACA  0E00               	movlw	0
 12459  002ACC  6E27               	movwf	(___flmul@prod+3)^0,c
 12460  002ACE  0E00               	movlw	0
 12461  002AD0  6E1D               	movwf	___flmul@sign^0,c
 12462  002AD2  EF80  F015         	goto	l4354
 12463  002AD6                     l1441:
 12464  002AD6  C028  F023         	movff	___flmul@temp,___flmul@bexp
 12465  002ADA  0EFF               	movlw	255
 12466  002ADC  1624               	andwf	___flmul@prod^0,f,c
 12467  002ADE  0EFF               	movlw	255
 12468  002AE0  1625               	andwf	(___flmul@prod+1)^0,f,c
 12469  002AE2  0E7F               	movlw	127
 12470  002AE4  1626               	andwf	(___flmul@prod+2)^0,f,c
 12471  002AE6  0E00               	movlw	0
 12472  002AE8  1627               	andwf	(___flmul@prod+3)^0,f,c
 12473  002AEA  A023               	btfss	___flmul@bexp^0,0,c
 12474  002AEC  EF7A  F015         	goto	u4401
 12475  002AF0  EF7C  F015         	goto	u4400
 12476  002AF4                     u4401:
 12477  002AF4  EF7D  F015         	goto	l4352
 12478  002AF8                     u4400:
 12479  002AF8  8E26               	bsf	(___flmul@prod+2)^0,7,c
 12480  002AFA                     l4352:
 12481  002AFA  90D8               	bcf	status,0,c
 12482  002AFC  3023               	rrcf	___flmul@bexp^0,w,c
 12483  002AFE  6E27               	movwf	(___flmul@prod+3)^0,c
 12484  002B00                     l4354:
 12485  002B00  501D               	movf	___flmul@sign^0,w,c
 12486  002B02  1227               	iorwf	(___flmul@prod+3)^0,f,c
 12487  002B04  C024  F011         	movff	___flmul@prod,?___flmul
 12488  002B08  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 12489  002B0C  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 12490  002B10  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 12491  002B14                     l1428:
 12492  002B14  0012               	return		;funcret
 12493  002B16                     __end_of___flmul:
 12494                           	opt callstack 0
 12495                           
 12496 ;; *************** function _DATAEE_WriteByte *****************
 12497 ;; Defined at:
 12498 ;;		line 173 in file "mcc_generated_files/memory.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;  bAdd            2    2[COMRAM] unsigned short 
 12501 ;;  bData           1    4[COMRAM] unsigned char 
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;  GIEBitValue     1    5[COMRAM] unsigned char 
 12504 ;; Return value:  Size  Location     Type
 12505 ;;                  1    wreg      void 
 12506 ;; Registers used:
 12507 ;;		wreg, status,2, status,0
 12508 ;; Tracked objects:
 12509 ;;		On entry : 0/0
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12513 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12516 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12517 ;;Total ram usage:        4 bytes
 12518 ;; Hardware stack levels used:    1
 12519 ;; Hardware stack levels required when called:    3
 12520 ;; This function calls:
 12521 ;;		Nothing
 12522 ;; This function is called by:
 12523 ;;		_AppTesteLM4040_Controller
 12524 ;;		_AppTesteLM4040_Testando
 12525 ;; This function uses a non-reentrant model
 12526 ;;
 12527                           
 12528                           	psect	text70
 12529  004C54                     __ptext70:
 12530                           	opt callstack 0
 12531  004C54                     _DATAEE_WriteByte:
 12532                           	opt callstack 25
 12533  004C54                     
 12534                           ;mcc_generated_files/memory.c: 173: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 174: {;mcc_generated_files/memory.c: 175:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 12535  004C54  0E00               	movlw	0
 12536  004C56  BEF2               	btfsc	242,7,c	;volatile
 12537  004C58  0E01               	movlw	1
 12538  004C5A  6E06               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 12539  004C5C                     
 12540                           ;mcc_generated_files/memory.c: 177:     EEADRH = ((bAdd >> 8) & 0x03);
 12541  004C5C  5004               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
 12542  004C5E  0B03               	andlw	3
 12543  004C60  6E75               	movwf	117,c	;volatile
 12544  004C62                     
 12545                           ;mcc_generated_files/memory.c: 178:     EEADR = (bAdd & 0xFF);
 12546  004C62  C003  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 12547  004C66                     
 12548                           ;mcc_generated_files/memory.c: 179:     EEDATA = bData;
 12549  004C66  C005  FF73         	movff	DATAEE_WriteByte@bData,3955	;volatile
 12550  004C6A                     
 12551                           ;mcc_generated_files/memory.c: 180:     EECON1bits.EEPGD = 0;
 12552  004C6A  9E7F               	bcf	127,7,c	;volsfr
 12553  004C6C                     
 12554                           ;mcc_generated_files/memory.c: 181:     EECON1bits.CFGS = 0;
 12555  004C6C  9C7F               	bcf	127,6,c	;volsfr
 12556  004C6E                     
 12557                           ;mcc_generated_files/memory.c: 182:     EECON1bits.WREN = 1;
 12558  004C6E  847F               	bsf	127,2,c	;volsfr
 12559  004C70                     
 12560                           ;mcc_generated_files/memory.c: 183:     INTCONbits.GIE = 0;
 12561  004C70  9EF2               	bcf	242,7,c	;volatile
 12562  004C72                     
 12563                           ;mcc_generated_files/memory.c: 184:     EECON2 = 0x55;
 12564  004C72  0E55               	movlw	85
 12565  004C74  6E7E               	movwf	126,c	;volsfr
 12566  004C76                     
 12567                           ;mcc_generated_files/memory.c: 185:     EECON2 = 0xAA;
 12568  004C76  0EAA               	movlw	170
 12569  004C78  6E7E               	movwf	126,c	;volsfr
 12570  004C7A                     
 12571                           ;mcc_generated_files/memory.c: 186:     EECON1bits.WR = 1;
 12572  004C7A  827F               	bsf	127,1,c	;volsfr
 12573  004C7C                     l592:
 12574                           
 12575                           ;mcc_generated_files/memory.c: 188:     while (EECON1bits.WR)
 12576  004C7C  B27F               	btfsc	127,1,c	;volsfr
 12577  004C7E  EF43  F026         	goto	u5761
 12578  004C82  EF45  F026         	goto	u5760
 12579  004C86                     u5761:
 12580  004C86  EF3E  F026         	goto	l592
 12581  004C8A                     u5760:
 12582  004C8A                     
 12583                           ;mcc_generated_files/memory.c: 192:     EECON1bits.WREN = 0;
 12584  004C8A  947F               	bcf	127,2,c	;volsfr
 12585                           
 12586                           ;mcc_generated_files/memory.c: 193:     INTCONbits.GIE = GIEBitValue;
 12587  004C8C  B006               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 12588  004C8E  D002               	bra	u5775
 12589  004C90  9EF2               	bcf	242,7,c	;volatile
 12590  004C92  D001               	bra	u5776
 12591  004C94                     u5775:
 12592  004C94  8EF2               	bsf	242,7,c	;volatile
 12593  004C96                     u5776:
 12594  004C96  0012               	return		;funcret
 12595  004C98                     __end_of_DATAEE_WriteByte:
 12596                           	opt callstack 0
 12597                           
 12598 ;; *************** function _AppTesteLM4040_IdentificaMudanca *****************
 12599 ;; Defined at:
 12600 ;;		line 209 in file "AppTesteLM4040.c"
 12601 ;; Parameters:    Size  Location     Type
 12602 ;;		None
 12603 ;; Auto vars:     Size  Location     Type
 12604 ;;		None
 12605 ;; Return value:  Size  Location     Type
 12606 ;;                  1    wreg      void 
 12607 ;; Registers used:
 12608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12609 ;; Tracked objects:
 12610 ;;		On entry : 0/0
 12611 ;;		On exit  : 0/0
 12612 ;;		Unchanged: 0/0
 12613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12616 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12617 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12618 ;;Total ram usage:        4 bytes
 12619 ;; Hardware stack levels used:    1
 12620 ;; Hardware stack levels required when called:    4
 12621 ;; This function calls:
 12622 ;;		_SRV_TIMER_GetTick
 12623 ;; This function is called by:
 12624 ;;		_AppTesteLM4040_Controller
 12625 ;; This function uses a non-reentrant model
 12626 ;;
 12627                           
 12628                           	psect	text71
 12629  003E38                     __ptext71:
 12630                           	opt callstack 0
 12631  003E38                     _AppTesteLM4040_IdentificaMudanca:
 12632                           	opt callstack 24
 12633  003E38                     
 12634                           ;AppTesteLM4040.c: 212:     difan = LeituraAD.AN3 - LeituraAD.AN2;
 12635  003E38  0100               	movlb	0	; () banked
 12636  003E3A  51DD               	movf	_LeituraAD& (0+255),w,b
 12637  003E3C  5DDF               	subwf	(_LeituraAD+2)& (0+255),w,b
 12638  003E3E  6E56               	movwf	_difan^0,c
 12639  003E40  51DE               	movf	(_LeituraAD+1)& (0+255),w,b
 12640  003E42  59E0               	subwfb	(_LeituraAD+3)& (0+255),w,b
 12641  003E44  6E57               	movwf	(_difan+1)^0,c
 12642                           
 12643                           ;AppTesteLM4040.c: 214:     if(tensaoreferencia >= difan)
 12644  003E46  5056               	movf	_difan^0,w,c
 12645  003E48  5C58               	subwf	_tensaoreferencia^0,w,c
 12646  003E4A  5057               	movf	(_difan+1)^0,w,c
 12647  003E4C  5859               	subwfb	(_tensaoreferencia+1)^0,w,c
 12648  003E4E  A0D8               	btfss	status,0,c
 12649  003E50  EF2C  F01F         	goto	u5951
 12650  003E54  EF2E  F01F         	goto	u5950
 12651  003E58                     u5951:
 12652  003E58  EF34  F01F         	goto	l468
 12653  003E5C                     u5950:
 12654  003E5C                     
 12655                           ; BSR set to: 0
 12656                           ;AppTesteLM4040.c: 215:         erromedido = tensaoreferencia - difan;
 12657  003E5C  5056               	movf	_difan^0,w,c
 12658  003E5E  5C58               	subwf	_tensaoreferencia^0,w,c
 12659  003E60  6FED               	movwf	_erromedido& (0+255),b
 12660  003E62  5057               	movf	(_difan+1)^0,w,c
 12661  003E64  5859               	subwfb	(_tensaoreferencia+1)^0,w,c
 12662  003E66  6FEE               	movwf	(_erromedido+1)& (0+255),b
 12663  003E68                     l468:
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;AppTesteLM4040.c: 216:     if(difan >= tensaoreferencia)
 12667  003E68  5058               	movf	_tensaoreferencia^0,w,c
 12668  003E6A  5C56               	subwf	_difan^0,w,c
 12669  003E6C  5059               	movf	(_tensaoreferencia+1)^0,w,c
 12670  003E6E  5857               	subwfb	(_difan+1)^0,w,c
 12671  003E70  A0D8               	btfss	status,0,c
 12672  003E72  EF3D  F01F         	goto	u5961
 12673  003E76  EF3F  F01F         	goto	u5960
 12674  003E7A                     u5961:
 12675  003E7A  EF45  F01F         	goto	l469
 12676  003E7E                     u5960:
 12677  003E7E                     
 12678                           ; BSR set to: 0
 12679                           ;AppTesteLM4040.c: 217:         erromedido = difan - tensaoreferencia;
 12680  003E7E  5058               	movf	_tensaoreferencia^0,w,c
 12681  003E80  5C56               	subwf	_difan^0,w,c
 12682  003E82  6FED               	movwf	_erromedido& (0+255),b
 12683  003E84  5059               	movf	(_tensaoreferencia+1)^0,w,c
 12684  003E86  5857               	subwfb	(_difan+1)^0,w,c
 12685  003E88  6FEE               	movwf	(_erromedido+1)& (0+255),b
 12686  003E8A                     l469:
 12687                           
 12688                           ; BSR set to: 0
 12689                           ;AppTesteLM4040.c: 219:     if(erromedido > 2){
 12690  003E8A  51EE               	movf	(_erromedido+1)& (0+255),w,b
 12691  003E8C  E109               	bnz	u5970
 12692  003E8E  0E03               	movlw	3
 12693  003E90  5DED               	subwf	_erromedido& (0+255),w,b
 12694  003E92  A0D8               	btfss	status,0,c
 12695  003E94  EF4E  F01F         	goto	u5971
 12696  003E98  EF50  F01F         	goto	u5970
 12697  003E9C                     u5971:
 12698  003E9C  EF52  F01F         	goto	l5374
 12699  003EA0                     u5970:
 12700  003EA0                     
 12701                           ; BSR set to: 0
 12702                           ;AppTesteLM4040.c: 220:       state.testando = 1;
 12703  003EA0  0E01               	movlw	1
 12704  003EA2  6FC6               	movwf	(_state+2)& (0+255),b
 12705  003EA4                     l5374:
 12706                           
 12707                           ; BSR set to: 0
 12708                           ;AppTesteLM4040.c: 223:     static uint32_t tick = 0;;AppTesteLM4040.c: 224:     static 
      +                          uint32_t tickLast = 0;;AppTesteLM4040.c: 226:     static uint16_t cont_tempo = 0;;AppTes
      +                          teLM4040.c: 228:     tick = SRV_TIMER_GetTick();
 12709  003EA4  ECD3  F027         	call	_SRV_TIMER_GetTick	;wreg free
 12710  003EA8  C003  F0D5         	movff	?_SRV_TIMER_GetTick,AppTesteLM4040_IdentificaMudanca@tick
 12711  003EAC  C004  F0D6         	movff	?_SRV_TIMER_GetTick+1,AppTesteLM4040_IdentificaMudanca@tick+1
 12712  003EB0  C005  F0D7         	movff	?_SRV_TIMER_GetTick+2,AppTesteLM4040_IdentificaMudanca@tick+2
 12713  003EB4  C006  F0D8         	movff	?_SRV_TIMER_GetTick+3,AppTesteLM4040_IdentificaMudanca@tick+3
 12714  003EB8                     
 12715                           ;AppTesteLM4040.c: 230:  if(tick >= (uint32_t)(tickLast + 1))
 12716  003EB8  0E01               	movlw	1
 12717  003EBA  0101               	movlb	1	; () banked
 12718  003EBC  254C               	addwf	AppTesteLM4040_IdentificaMudanca@tickLast& (0+255),w,b
 12719  003EBE  6E07               	movwf	??_AppTesteLM4040_IdentificaMudanca^0,c
 12720  003EC0  0E00               	movlw	0
 12721  003EC2  214D               	addwfc	(AppTesteLM4040_IdentificaMudanca@tickLast+1)& (0+255),w,b
 12722  003EC4  6E08               	movwf	(??_AppTesteLM4040_IdentificaMudanca+1)^0,c
 12723  003EC6  0E00               	movlw	0
 12724  003EC8  214E               	addwfc	(AppTesteLM4040_IdentificaMudanca@tickLast+2)& (0+255),w,b
 12725  003ECA  6E09               	movwf	(??_AppTesteLM4040_IdentificaMudanca+2)^0,c
 12726  003ECC  0E00               	movlw	0
 12727  003ECE  214F               	addwfc	(AppTesteLM4040_IdentificaMudanca@tickLast+3)& (0+255),w,b
 12728  003ED0  6E0A               	movwf	(??_AppTesteLM4040_IdentificaMudanca+3)^0,c
 12729  003ED2  5007               	movf	??_AppTesteLM4040_IdentificaMudanca^0,w,c
 12730  003ED4  0100               	movlb	0	; () banked
 12731  003ED6  5DD5               	subwf	AppTesteLM4040_IdentificaMudanca@tick& (0+255),w,b
 12732  003ED8  5008               	movf	(??_AppTesteLM4040_IdentificaMudanca+1)^0,w,c
 12733  003EDA  59D6               	subwfb	(AppTesteLM4040_IdentificaMudanca@tick+1)& (0+255),w,b
 12734  003EDC  5009               	movf	(??_AppTesteLM4040_IdentificaMudanca+2)^0,w,c
 12735  003EDE  59D7               	subwfb	(AppTesteLM4040_IdentificaMudanca@tick+2)& (0+255),w,b
 12736  003EE0  500A               	movf	(??_AppTesteLM4040_IdentificaMudanca+3)^0,w,c
 12737  003EE2  59D8               	subwfb	(AppTesteLM4040_IdentificaMudanca@tick+3)& (0+255),w,b
 12738  003EE4  A0D8               	btfss	status,0,c
 12739  003EE6  EF77  F01F         	goto	u5981
 12740  003EEA  EF79  F01F         	goto	u5980
 12741  003EEE                     u5981:
 12742  003EEE  EF94  F01F         	goto	l479
 12743  003EF2                     u5980:
 12744  003EF2                     
 12745                           ; BSR set to: 0
 12746                           ;AppTesteLM4040.c: 231:  {;AppTesteLM4040.c: 232:   tickLast = tick;
 12747  003EF2  C0D5  F14C         	movff	AppTesteLM4040_IdentificaMudanca@tick,AppTesteLM4040_IdentificaMudanca@tickLast
 12748  003EF6  C0D6  F14D         	movff	AppTesteLM4040_IdentificaMudanca@tick+1,AppTesteLM4040_IdentificaMudanca@tickLast
      +                          +1
 12749  003EFA  C0D7  F14E         	movff	AppTesteLM4040_IdentificaMudanca@tick+2,AppTesteLM4040_IdentificaMudanca@tickLast
      +                          +2
 12750  003EFE  C0D8  F14F         	movff	AppTesteLM4040_IdentificaMudanca@tick+3,AppTesteLM4040_IdentificaMudanca@tickLast
      +                          +3
 12751  003F02                     
 12752                           ; BSR set to: 0
 12753                           ;AppTesteLM4040.c: 233:         cont_tempo++;
 12754  003F02  4BE7               	infsnz	AppTesteLM4040_IdentificaMudanca@cont_tempo& (0+255),f,b
 12755  003F04  2BE8               	incf	(AppTesteLM4040_IdentificaMudanca@cont_tempo+1)& (0+255),f,b
 12756  003F06                     
 12757                           ; BSR set to: 0
 12758                           ;AppTesteLM4040.c: 234:         if(cont_tempo >= 10000)
 12759  003F06  0E10               	movlw	16
 12760  003F08  5DE7               	subwf	AppTesteLM4040_IdentificaMudanca@cont_tempo& (0+255),w,b
 12761  003F0A  0E27               	movlw	39
 12762  003F0C  59E8               	subwfb	(AppTesteLM4040_IdentificaMudanca@cont_tempo+1)& (0+255),w,b
 12763  003F0E  A0D8               	btfss	status,0,c
 12764  003F10  EF8C  F01F         	goto	u5991
 12765  003F14  EF8E  F01F         	goto	u5990
 12766  003F18                     u5991:
 12767  003F18  EF94  F01F         	goto	l479
 12768  003F1C                     u5990:
 12769  003F1C                     
 12770                           ; BSR set to: 0
 12771                           ;AppTesteLM4040.c: 235:         {;AppTesteLM4040.c: 236:            state.testando = 1;
 12772  003F1C  0E01               	movlw	1
 12773  003F1E  6FC6               	movwf	(_state+2)& (0+255),b
 12774                           
 12775                           ;AppTesteLM4040.c: 237:            vMax = 0;
 12776  003F20  0E00               	movlw	0
 12777  003F22  6FF0               	movwf	(_vMax+1)& (0+255),b
 12778  003F24  0E00               	movlw	0
 12779  003F26  6FEF               	movwf	_vMax& (0+255),b
 12780  003F28                     l479:
 12781                           
 12782                           ; BSR set to: 0
 12783  003F28  0012               	return		;funcret
 12784  003F2A                     __end_of_AppTesteLM4040_IdentificaMudanca:
 12785                           	opt callstack 0
 12786                           
 12787 ;; *************** function _AppTesteLM4040_Calibrando *****************
 12788 ;; Defined at:
 12789 ;;		line 182 in file "AppTesteLM4040.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;		None
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;		None
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  1    wreg      void 
 12796 ;; Registers used:
 12797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12805 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12806 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12807 ;;Total ram usage:        4 bytes
 12808 ;; Hardware stack levels used:    1
 12809 ;; Hardware stack levels required when called:    4
 12810 ;; This function calls:
 12811 ;;		_SRV_TIMER_GetTick
 12812 ;; This function is called by:
 12813 ;;		_AppTesteLM4040_Controller
 12814 ;; This function uses a non-reentrant model
 12815 ;;
 12816                           
 12817                           	psect	text72
 12818  004764                     __ptext72:
 12819                           	opt callstack 0
 12820  004764                     _AppTesteLM4040_Calibrando:
 12821                           	opt callstack 24
 12822  004764                     
 12823                           ;AppTesteLM4040.c: 185:     static uint32_t tick = 0;;AppTesteLM4040.c: 186:     static 
      +                          uint32_t tickLast = 0;;AppTesteLM4040.c: 188:     static uint16_t cont_tempo = 0;;AppTes
      +                          teLM4040.c: 190:      difan = LeituraAD.AN3 - LeituraAD.AN2;
 12824  004764  0100               	movlb	0	; () banked
 12825  004766  51DD               	movf	_LeituraAD& (0+255),w,b
 12826  004768  5DDF               	subwf	(_LeituraAD+2)& (0+255),w,b
 12827  00476A  6E56               	movwf	_difan^0,c
 12828  00476C  51DE               	movf	(_LeituraAD+1)& (0+255),w,b
 12829  00476E  59E0               	subwfb	(_LeituraAD+3)& (0+255),w,b
 12830  004770  6E57               	movwf	(_difan+1)^0,c
 12831  004772                     
 12832                           ; BSR set to: 0
 12833                           ;AppTesteLM4040.c: 192:  tick = SRV_TIMER_GetTick();
 12834  004772  ECD3  F027         	call	_SRV_TIMER_GetTick	;wreg free
 12835  004776  C003  F0D9         	movff	?_SRV_TIMER_GetTick,AppTesteLM4040_Calibrando@tick
 12836  00477A  C004  F0DA         	movff	?_SRV_TIMER_GetTick+1,AppTesteLM4040_Calibrando@tick+1
 12837  00477E  C005  F0DB         	movff	?_SRV_TIMER_GetTick+2,AppTesteLM4040_Calibrando@tick+2
 12838  004782  C006  F0DC         	movff	?_SRV_TIMER_GetTick+3,AppTesteLM4040_Calibrando@tick+3
 12839  004786                     
 12840                           ;AppTesteLM4040.c: 194:  if(tick >= (uint32_t)(tickLast + 1))
 12841  004786  0E01               	movlw	1
 12842  004788  0101               	movlb	1	; () banked
 12843  00478A  2550               	addwf	AppTesteLM4040_Calibrando@tickLast& (0+255),w,b
 12844  00478C  6E07               	movwf	??_AppTesteLM4040_Calibrando^0,c
 12845  00478E  0E00               	movlw	0
 12846  004790  2151               	addwfc	(AppTesteLM4040_Calibrando@tickLast+1)& (0+255),w,b
 12847  004792  6E08               	movwf	(??_AppTesteLM4040_Calibrando+1)^0,c
 12848  004794  0E00               	movlw	0
 12849  004796  2152               	addwfc	(AppTesteLM4040_Calibrando@tickLast+2)& (0+255),w,b
 12850  004798  6E09               	movwf	(??_AppTesteLM4040_Calibrando+2)^0,c
 12851  00479A  0E00               	movlw	0
 12852  00479C  2153               	addwfc	(AppTesteLM4040_Calibrando@tickLast+3)& (0+255),w,b
 12853  00479E  6E0A               	movwf	(??_AppTesteLM4040_Calibrando+3)^0,c
 12854  0047A0  5007               	movf	??_AppTesteLM4040_Calibrando^0,w,c
 12855  0047A2  0100               	movlb	0	; () banked
 12856  0047A4  5DD9               	subwf	AppTesteLM4040_Calibrando@tick& (0+255),w,b
 12857  0047A6  5008               	movf	(??_AppTesteLM4040_Calibrando+1)^0,w,c
 12858  0047A8  59DA               	subwfb	(AppTesteLM4040_Calibrando@tick+1)& (0+255),w,b
 12859  0047AA  5009               	movf	(??_AppTesteLM4040_Calibrando+2)^0,w,c
 12860  0047AC  59DB               	subwfb	(AppTesteLM4040_Calibrando@tick+2)& (0+255),w,b
 12861  0047AE  500A               	movf	(??_AppTesteLM4040_Calibrando+3)^0,w,c
 12862  0047B0  59DC               	subwfb	(AppTesteLM4040_Calibrando@tick+3)& (0+255),w,b
 12863  0047B2  A0D8               	btfss	status,0,c
 12864  0047B4  EFDE  F023         	goto	u5931
 12865  0047B8  EFE0  F023         	goto	u5930
 12866  0047BC                     u5931:
 12867  0047BC  EFFB  F023         	goto	l465
 12868  0047C0                     u5930:
 12869  0047C0                     
 12870                           ; BSR set to: 0
 12871                           ;AppTesteLM4040.c: 195:  {;AppTesteLM4040.c: 196:   tickLast = tick;
 12872  0047C0  C0D9  F150         	movff	AppTesteLM4040_Calibrando@tick,AppTesteLM4040_Calibrando@tickLast
 12873  0047C4  C0DA  F151         	movff	AppTesteLM4040_Calibrando@tick+1,AppTesteLM4040_Calibrando@tickLast+1
 12874  0047C8  C0DB  F152         	movff	AppTesteLM4040_Calibrando@tick+2,AppTesteLM4040_Calibrando@tickLast+2
 12875  0047CC  C0DC  F153         	movff	AppTesteLM4040_Calibrando@tick+3,AppTesteLM4040_Calibrando@tickLast+3
 12876  0047D0                     
 12877                           ; BSR set to: 0
 12878                           ;AppTesteLM4040.c: 198:         cont_tempo++;
 12879  0047D0  4BE9               	infsnz	AppTesteLM4040_Calibrando@cont_tempo& (0+255),f,b
 12880  0047D2  2BEA               	incf	(AppTesteLM4040_Calibrando@cont_tempo+1)& (0+255),f,b
 12881  0047D4                     
 12882                           ; BSR set to: 0
 12883                           ;AppTesteLM4040.c: 199:         if(cont_tempo >= 10000)
 12884  0047D4  0E10               	movlw	16
 12885  0047D6  5DE9               	subwf	AppTesteLM4040_Calibrando@cont_tempo& (0+255),w,b
 12886  0047D8  0E27               	movlw	39
 12887  0047DA  59EA               	subwfb	(AppTesteLM4040_Calibrando@cont_tempo+1)& (0+255),w,b
 12888  0047DC  A0D8               	btfss	status,0,c
 12889  0047DE  EFF3  F023         	goto	u5941
 12890  0047E2  EFF5  F023         	goto	u5940
 12891  0047E6                     u5941:
 12892  0047E6  EFFB  F023         	goto	l465
 12893  0047EA                     u5940:
 12894  0047EA                     
 12895                           ; BSR set to: 0
 12896                           ;AppTesteLM4040.c: 200:         {;AppTesteLM4040.c: 201:             tensaoreferencia = 
      +                          difan;
 12897  0047EA  C056  F058         	movff	_difan,_tensaoreferencia
 12898  0047EE  C057  F059         	movff	_difan+1,_tensaoreferencia+1
 12899  0047F2                     
 12900                           ; BSR set to: 0
 12901                           ;AppTesteLM4040.c: 202:             state.identifica_mudanca = 1;
 12902  0047F2  0E01               	movlw	1
 12903  0047F4  6FC5               	movwf	(_state+1)& (0+255),b
 12904  0047F6                     l465:
 12905                           
 12906                           ; BSR set to: 0
 12907  0047F6  0012               	return		;funcret
 12908  0047F8                     __end_of_AppTesteLM4040_Calibrando:
 12909                           	opt callstack 0
 12910                           
 12911 ;; *************** function _SRV_TIMER_GetTick *****************
 12912 ;; Defined at:
 12913 ;;		line 30 in file "ServiceTimer.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;		None
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;		None
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  4    2[COMRAM] unsigned long 
 12920 ;; Registers used:
 12921 ;;		fsr2l, fsr2h
 12922 ;; Tracked objects:
 12923 ;;		On entry : 0/0
 12924 ;;		On exit  : 0/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12927 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12930 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12931 ;;Total ram usage:        4 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:    3
 12934 ;; This function calls:
 12935 ;;		Nothing
 12936 ;; This function is called by:
 12937 ;;		_AppTesteLM4040_Calibrando
 12938 ;;		_AppTesteLM4040_IdentificaMudanca
 12939 ;;		_AppTesteLM4040_Testando
 12940 ;;		_AtualizaDisplay
 12941 ;;		_exibetensao
 12942 ;; This function uses a non-reentrant model
 12943 ;;
 12944                           
 12945                           	psect	text73
 12946  004FA6                     __ptext73:
 12947                           	opt callstack 0
 12948  004FA6                     _SRV_TIMER_GetTick:
 12949                           	opt callstack 25
 12950  004FA6                     
 12951                           ;ServiceTimer.c: 33:     return *count_aux;
 12952  004FA6  C1D8  FFD9         	movff	_count_aux,fsr2l
 12953  004FAA  C1D9  FFDA         	movff	_count_aux+1,fsr2h
 12954  004FAE  CFDE F003          	movff	postinc2,?_SRV_TIMER_GetTick
 12955  004FB2  CFDE F004          	movff	postinc2,?_SRV_TIMER_GetTick+1
 12956  004FB6  CFDE F005          	movff	postinc2,?_SRV_TIMER_GetTick+2
 12957  004FBA  CFDE F006          	movff	postinc2,?_SRV_TIMER_GetTick+3
 12958  004FBE  0012               	return		;funcret
 12959  004FC0                     __end_of_SRV_TIMER_GetTick:
 12960                           	opt callstack 0
 12961                           
 12962 ;; *************** function _INTERRUPT_InterruptManager *****************
 12963 ;; Defined at:
 12964 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 12965 ;; Parameters:    Size  Location     Type
 12966 ;;		None
 12967 ;; Auto vars:     Size  Location     Type
 12968 ;;		None
 12969 ;; Return value:  Size  Location     Type
 12970 ;;                  1    wreg      void 
 12971 ;; Registers used:
 12972 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12973 ;; Tracked objects:
 12974 ;;		On entry : 0/0
 12975 ;;		On exit  : 0/0
 12976 ;;		Unchanged: 0/0
 12977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12980 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12982 ;;Total ram usage:        2 bytes
 12983 ;; Hardware stack levels used:    1
 12984 ;; Hardware stack levels required when called:    2
 12985 ;; This function calls:
 12986 ;;		_TMR0_ISR
 12987 ;; This function is called by:
 12988 ;;		Interrupt level 2
 12989 ;; This function uses a non-reentrant model
 12990 ;;
 12991                           
 12992                           	psect	intcode
 12993  000008                     __pintcode:
 12994                           	opt callstack 0
 12995  000008                     _INTERRUPT_InterruptManager:
 12996                           	opt callstack 18
 12997                           
 12998                           ;incstack = 0
 12999  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13000  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 13001  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13002  000012                     
 13003                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 13004  000012  AAF2               	btfss	242,5,c	;volatile
 13005  000014  EF0E  F000         	goto	i2u627_41
 13006  000018  EF10  F000         	goto	i2u627_40
 13007  00001C                     i2u627_41:
 13008  00001C  EF19  F000         	goto	i2l113
 13009  000020                     i2u627_40:
 13010  000020  A4F2               	btfss	242,2,c	;volatile
 13011  000022  EF15  F000         	goto	i2u628_41
 13012  000026  EF17  F000         	goto	i2u628_40
 13013  00002A                     i2u628_41:
 13014  00002A  EF19  F000         	goto	i2l113
 13015  00002E                     i2u628_40:
 13016  00002E                     
 13017                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 13018  00002E  EC8C  F026         	call	_TMR0_ISR	;wreg free
 13019  000032                     i2l113:
 13020  000032  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13021  000036  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13022  00003A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13023  00003C  0011               	retfie		f
 13024  00003E                     __end_of_INTERRUPT_InterruptManager:
 13025                           	opt callstack 0
 13026                           
 13027 ;; *************** function _TMR0_ISR *****************
 13028 ;; Defined at:
 13029 ;;		line 137 in file "mcc_generated_files/tmr0.c"
 13030 ;; Parameters:    Size  Location     Type
 13031 ;;		None
 13032 ;; Auto vars:     Size  Location     Type
 13033 ;;		None
 13034 ;; Return value:  Size  Location     Type
 13035 ;;                  1    wreg      void 
 13036 ;; Registers used:
 13037 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13038 ;; Tracked objects:
 13039 ;;		On entry : 0/0
 13040 ;;		On exit  : 0/0
 13041 ;;		Unchanged: 0/0
 13042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13047 ;;Total ram usage:        0 bytes
 13048 ;; Hardware stack levels used:    1
 13049 ;; Hardware stack levels required when called:    1
 13050 ;; This function calls:
 13051 ;;		Absolute function
 13052 ;;		_SRV_TIMER_TickInterrupt
 13053 ;;		_TMR0_DefaultInterruptHandler
 13054 ;; This function is called by:
 13055 ;;		_INTERRUPT_InterruptManager
 13056 ;; This function uses a non-reentrant model
 13057 ;;
 13058                           
 13059                           	psect	text75
 13060  004D18                     __ptext75:
 13061                           	opt callstack 0
 13062  004D18                     _TMR0_ISR:
 13063                           	opt callstack 18
 13064  004D18                     
 13065                           ;mcc_generated_files/tmr0.c: 141:     INTCONbits.TMR0IF = 0;
 13066  004D18  94F2               	bcf	242,2,c	;volatile
 13067  004D1A                     
 13068                           ;mcc_generated_files/tmr0.c: 145:     TMR0H = timer0ReloadVal >> 8;
 13069  004D1A  0100               	movlb	0	; () banked
 13070  004D1C  51FE               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
 13071  004D1E  6ED7               	movwf	215,c	;volatile
 13072  004D20                     
 13073                           ; BSR set to: 0
 13074                           ;mcc_generated_files/tmr0.c: 146:     TMR0L = (uint8_t) timer0ReloadVal;
 13075  004D20  C0FD  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 13076  004D24                     
 13077                           ; BSR set to: 0
 13078                           ;mcc_generated_files/tmr0.c: 148:     if(TMR0_InterruptHandler)
 13079  004D24  0101               	movlb	1	; () banked
 13080  004D26  51DA               	movf	_TMR0_InterruptHandler& (0+255),w,b
 13081  004D28  11DB               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 13082  004D2A  B4D8               	btfsc	status,2,c
 13083  004D2C  EF9A  F026         	goto	i2u623_41
 13084  004D30  EF9C  F026         	goto	i2u623_40
 13085  004D34                     i2u623_41:
 13086  004D34  EFA8  F026         	goto	i2l153
 13087  004D38                     i2u623_40:
 13088  004D38                     
 13089                           ; BSR set to: 1
 13090                           ;mcc_generated_files/tmr0.c: 149:     {;mcc_generated_files/tmr0.c: 150:         TMR0_In
      +                          terruptHandler();
 13091  004D38  D802               	call	i2u624_48
 13092  004D3A  EFA8  F026         	goto	i2u624_49
 13093  004D3E                     i2u624_48:
 13094  004D3E  0005               	push	
 13095  004D40  6EFA               	movwf	pclath,c
 13096  004D42  51DA               	movf	_TMR0_InterruptHandler& (0+255),w,b
 13097  004D44  6EFD               	movwf	tosl,c
 13098  004D46  51DB               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 13099  004D48  6EFE               	movwf	tosh,c
 13100  004D4A  6AFF               	clrf	tosu,c
 13101  004D4C  50FA               	movf	pclath,w,c
 13102  004D4E  0012               	return		;indir
 13103  004D50                     i2u624_49:
 13104  004D50                     i2l153:
 13105  004D50  0012               	return		;funcret
 13106  004D52                     __end_of_TMR0_ISR:
 13107                           	opt callstack 0
 13108                           
 13109 ;; *************** function _SRV_TIMER_TickInterrupt *****************
 13110 ;; Defined at:
 13111 ;;		line 25 in file "ServiceTimer.c"
 13112 ;; Parameters:    Size  Location     Type
 13113 ;;		None
 13114 ;; Auto vars:     Size  Location     Type
 13115 ;;		None
 13116 ;; Return value:  Size  Location     Type
 13117 ;;                  1    wreg      void 
 13118 ;; Registers used:
 13119 ;;		wreg, status,2, status,0
 13120 ;; Tracked objects:
 13121 ;;		On entry : 0/0
 13122 ;;		On exit  : 0/0
 13123 ;;		Unchanged: 0/0
 13124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13129 ;;Total ram usage:        0 bytes
 13130 ;; Hardware stack levels used:    1
 13131 ;; This function calls:
 13132 ;;		Nothing
 13133 ;; This function is called by:
 13134 ;;		_SRV_TIMER_Init
 13135 ;;		_TMR0_ISR
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           	psect	text76
 13140  005084                     __ptext76:
 13141                           	opt callstack 0
 13142  005084                     _SRV_TIMER_TickInterrupt:
 13143                           	opt callstack 18
 13144  005084                     
 13145                           ;ServiceTimer.c: 27:     tickRate++;
 13146  005084  0E01               	movlw	1
 13147  005086  0100               	movlb	0	; () banked
 13148  005088  27F9               	addwf	_tickRate& (0+255),f,b	;volatile
 13149  00508A  0E00               	movlw	0
 13150  00508C  23FA               	addwfc	(_tickRate+1)& (0+255),f,b	;volatile
 13151  00508E  23FB               	addwfc	(_tickRate+2)& (0+255),f,b	;volatile
 13152  005090  23FC               	addwfc	(_tickRate+3)& (0+255),f,b	;volatile
 13153  005092                     
 13154                           ; BSR set to: 0
 13155  005092  0012               	return		;funcret
 13156  005094                     __end_of_SRV_TIMER_TickInterrupt:
 13157                           	opt callstack 0
 13158                           
 13159 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 13160 ;; Defined at:
 13161 ;;		line 163 in file "mcc_generated_files/tmr0.c"
 13162 ;; Parameters:    Size  Location     Type
 13163 ;;		None
 13164 ;; Auto vars:     Size  Location     Type
 13165 ;;		None
 13166 ;; Return value:  Size  Location     Type
 13167 ;;                  1    wreg      void 
 13168 ;; Registers used:
 13169 ;;		None
 13170 ;; Tracked objects:
 13171 ;;		On entry : 0/0
 13172 ;;		On exit  : 0/0
 13173 ;;		Unchanged: 0/0
 13174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13179 ;;Total ram usage:        0 bytes
 13180 ;; Hardware stack levels used:    1
 13181 ;; This function calls:
 13182 ;;		Nothing
 13183 ;; This function is called by:
 13184 ;;		_TMR0_Initialize
 13185 ;;		_TMR0_ISR
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           	psect	text77
 13190  0050D8                     __ptext77:
 13191                           	opt callstack 0
 13192  0050D8                     _TMR0_DefaultInterruptHandler:
 13193                           	opt callstack 18
 13194  0050D8  0012               	return		;funcret
 13195  0050DA                     __end_of_TMR0_DefaultInterruptHandler:
 13196                           	opt callstack 0
 13197                           
 13198                           	psect	text78
 13199  000000                     __ptext78:
 13200                           	opt callstack 0
 13201  000000                     
 13202                           	psect	rparam
 13203  0000                     
 13204                           	psect	temp
 13205  00005B                     btemp:
 13206                           	opt callstack 0
 13207  00005B                     	ds	1
 13208  0000                     int$flags	set	btemp
 13209  0000                     wtemp8	set	btemp+1
 13210  0000                     ttemp5	set	btemp+1
 13211  0000                     ttemp6	set	btemp+4
 13212  0000                     ttemp7	set	btemp+8
 13213                           tosu	equ	0xFFF
 13214                           tosh	equ	0xFFE
 13215                           tosl	equ	0xFFD
 13216                           stkptr	equ	0xFFC
 13217                           pclatu	equ	0xFFB
 13218                           pclath	equ	0xFFA
 13219                           pcl	equ	0xFF9
 13220                           tblptru	equ	0xFF8
 13221                           tblptrh	equ	0xFF7
 13222                           tblptrl	equ	0xFF6
 13223                           tablat	equ	0xFF5
 13224                           prodh	equ	0xFF4
 13225                           prodl	equ	0xFF3
 13226                           indf0	equ	0xFEF
 13227                           postinc0	equ	0xFEE
 13228                           postdec0	equ	0xFED
 13229                           preinc0	equ	0xFEC
 13230                           plusw0	equ	0xFEB
 13231                           fsr0h	equ	0xFEA
 13232                           fsr0l	equ	0xFE9
 13233                           wreg	equ	0xFE8
 13234                           indf1	equ	0xFE7
 13235                           postinc1	equ	0xFE6
 13236                           postdec1	equ	0xFE5
 13237                           preinc1	equ	0xFE4
 13238                           plusw1	equ	0xFE3
 13239                           fsr1h	equ	0xFE2
 13240                           fsr1l	equ	0xFE1
 13241                           bsr	equ	0xFE0
 13242                           indf2	equ	0xFDF
 13243                           postinc2	equ	0xFDE
 13244                           postdec2	equ	0xFDD
 13245                           preinc2	equ	0xFDC
 13246                           plusw2	equ	0xFDB
 13247                           fsr2h	equ	0xFDA
 13248                           fsr2l	equ	0xFD9
 13249                           status	equ	0xFD8


Data Sizes:
    Strings     143
    Constant    0
    Data        3
    BSS         280
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     83      90
    BANK0           160    100     160
    BANK1           256      4     226
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[16]), STR_7(CODE[16]), 
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[16]), 
		 -> STR_2(CODE[13]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> txtLinha2(BANK1[16]), txtLinha1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> txtLinha2(BANK1[16]), txtLinha1(BANK1[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1716_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> txtLinha2(BANK1[16]), txtLinha1(BANK1[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> txtLinha2(BANK1[16]), txtLinha1(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[16]), STR_7(CODE[16]), 
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[16]), 
		 -> STR_2(CODE[13]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[16]), STR_7(CODE[16]), 
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[16]), 
		 -> STR_2(CODE[13]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[16]), STR_7(CODE[16]), 
		 -> STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[13]), STR_3(CODE[16]), 
		 -> STR_2(CODE[13]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    count_aux	PTR volatile unsigned long  size(2) Largest target is 4
		 -> tickRate(BANK0[4]), NULL(NULL[0]), 

    SRV_Display_Write@data	PTR unsigned char  size(2) Largest target is 16
		 -> txtLinha2(BANK1[16]), txtLinha1(BANK1[16]), NULL(NULL[0]), 

    telaDisplay	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    DRV_LCD_WriteString@data	PTR unsigned char  size(2) Largest target is 16
		 -> txtLinha2(BANK1[16]), txtLinha1(BANK1[16]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SRV_TIMER_TickInterrupt(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> SRV_TIMER_TickInterrupt(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _SRV_TIMER_Init->_TMR0_SetInterruptHandler
    _SRV_Display_Init->_SRV_Display_SetCursor
    _SRV_Display_SetCursor->_DRV_LCD_SetCursor
    _DRV_LCD_Clear->_DRV_LCD_Cmd
    _DRV_LCD_Init->_DRV_LCD_Cmd
    _exibetensao->_SRV_TIMER_GetTick
    _writeTela->_SRV_Display_Write
    _LeituraAD_run->_ServiceAD_Media
    _ServiceAD_Media->___lldiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _SRV_Display_Write->_DRV_LCD_SetCursor
    _SRV_Display_Write->_DRV_LCD_WriteString
    _DRV_LCD_WriteString->_DRV_LCD_WriteChar
    _DRV_LCD_WriteChar->_DRV_LCD_Data
    _DRV_LCD_SetCursor->_DRV_LCD_Cmd
    _DRV_LCD_Cmd->_DRV_LCD_Data
    _AppTesteLM4040_Controller->_AppTesteLM4040_Testando
    _AppTesteLM4040_Testando->___flmul
    ___flmul->___xxtofl
    _AppTesteLM4040_IdentificaMudanca->_SRV_TIMER_GetTick
    _AppTesteLM4040_Calibrando->_SRV_TIMER_GetTick

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _AtualizaDisplay->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _AppTesteLM4040_Run->_AtualizaDisplay

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   48116
                 _AppTesteLM4040_Run
          _AppTesteLM4040_inicialize
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AppTesteLM4040_inicialize                            2     2      0    1440
                                             12 COMRAM     2     2      0
                     _ADC_Initialize
                    _DATAEE_ReadByte
                  _SRV_Display_Clear
                   _SRV_Display_Init
                     _SRV_TIMER_Init
 ---------------------------------------------------------------------------------
 (2) _SRV_TIMER_Init                                       0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SRV_Display_Init                                     0     0      0    1036
                       _DRV_LCD_Init
                 _SRV_Display_BLK_ON
                  _SRV_Display_Clear
              _SRV_Display_SetCursor
 ---------------------------------------------------------------------------------
 (3) _SRV_Display_SetCursor                                2     1      1     728
                                             10 COMRAM     2     1      1
                  _DRV_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (3) _SRV_Display_Clear                                    0     0      0     110
                      _DRV_LCD_Clear
 ---------------------------------------------------------------------------------
 (4) _DRV_LCD_Clear                                        0     0      0     110
                        _DRV_LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _SRV_Display_BLK_ON                                   0     0      0       0
                        _DRV_LCD_BLK
 ---------------------------------------------------------------------------------
 (4) _DRV_LCD_BLK                                          1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _DRV_LCD_Init                                         1     1      0     198
                                              5 COMRAM     1     1      0
                        _DRV_LCD_Cmd
                       _DRV_LCD_Data
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AppTesteLM4040_Run                                   0     0      0   46502
          _AppTesteLM4040_Controller
                    _AtualizaDisplay
                      _LeituraAD_run
                    _SRV_Display_Run
                        _exibetensao
 ---------------------------------------------------------------------------------
 (2) _exibetensao                                          4     4      0       0
                                              6 COMRAM     4     4      0
                  _SRV_TIMER_GetTick
 ---------------------------------------------------------------------------------
 (2) _SRV_Display_Run                                      0     0      0    2842
                          _writeTela
 ---------------------------------------------------------------------------------
 (3) _writeTela                                            0     0      0    2842
                  _SRV_Display_Write
 ---------------------------------------------------------------------------------
 (2) _LeituraAD_run                                        0     0      0     523
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                _ADC_StartConversion
                    _ServiceAD_Media
 ---------------------------------------------------------------------------------
 (3) _ServiceAD_Media                                     17    15      2     501
                                             15 COMRAM    17    15      2
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                _ADC_StartConversion
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     314
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _ADC_StartConversion                                  2     2      0      22
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_GetConversionResult                              4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _AtualizaDisplay                                      4     4      0   38993
                                              0 BANK1      4     4      0
                  _SRV_Display_Write
                  _SRV_TIMER_GetTick
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    10     10   36151
                                             80 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   34422
                                             75 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    44      6   34028
                                             65 COMRAM    10     4      6
                                             56 BANK0     24    24      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                32    22     10    4443
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             17     1     16     311
                                              2 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             25     9     16     314
                                              2 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   23567
                                             53 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              8 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     834
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             27 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     533
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2889
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    2414
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     638
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2007
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1194
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1048
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1350
                                              9 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     357
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _SRV_Display_Write                                    4     1      3    2842
                                             10 COMRAM     4     1      3
                  _DRV_LCD_SetCursor
                _DRV_LCD_WriteString
 ---------------------------------------------------------------------------------
 (5) _DRV_LCD_WriteString                                  4     2      2     344
                                              6 COMRAM     4     2      2
                  _DRV_LCD_WriteChar
 ---------------------------------------------------------------------------------
 (6) _DRV_LCD_WriteChar                                    3     3      0     178
                                              3 COMRAM     3     3      0
                       _DRV_LCD_Data
 ---------------------------------------------------------------------------------
 (4) _DRV_LCD_SetCursor                                    5     4      1     608
                                              5 COMRAM     5     4      1
                        _DRV_LCD_Cmd
 ---------------------------------------------------------------------------------
 (5) _DRV_LCD_Cmd                                          2     2      0     110
                                              3 COMRAM     2     2      0
                       _DRV_LCD_Data
 ---------------------------------------------------------------------------------
 (6) _DRV_LCD_Data                                         1     1      0      88
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _AppTesteLM4040_Controller                            2     2      0    4144
                                             45 COMRAM     2     2      0
          _AppTesteLM4040_Calibrando
   _AppTesteLM4040_IdentificaMudanca
            _AppTesteLM4040_Testando
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _AppTesteLM4040_Testando                              4     4      0    3599
                                             41 COMRAM     4     4      0
                   _DATAEE_WriteByte
                  _SRV_TIMER_GetTick
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    2656
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3     545
                                              2 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _AppTesteLM4040_IdentificaMudanca                     4     4      0       0
                                              6 COMRAM     4     4      0
                  _SRV_TIMER_GetTick
 ---------------------------------------------------------------------------------
 (3) _AppTesteLM4040_Calibrando                            4     4      0       0
                                              6 COMRAM     4     4      0
                  _SRV_TIMER_GetTick
 ---------------------------------------------------------------------------------
 (3) _SRV_TIMER_GetTick                                    4     0      4       0
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
            _SRV_TIMER_TickInterrupt *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _SRV_TIMER_TickInterrupt                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppTesteLM4040_Run
     _AppTesteLM4040_Controller
       _AppTesteLM4040_Calibrando
         _SRV_TIMER_GetTick
       _AppTesteLM4040_IdentificaMudanca
         _SRV_TIMER_GetTick
       _AppTesteLM4040_Testando
         _DATAEE_WriteByte
         _SRV_TIMER_GetTick
         ___flmul
           ___xxtofl (ARG)
         ___xxtofl
       _DATAEE_WriteByte
     _AtualizaDisplay
       _SRV_Display_Write
         _DRV_LCD_SetCursor
           _DRV_LCD_Cmd
             _DRV_LCD_Data
         _DRV_LCD_WriteString
           _DRV_LCD_WriteChar
             _DRV_LCD_Data
       _SRV_TIMER_GetTick
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
     _LeituraAD_run
       _ADC_GetConversionResult
       _ADC_IsConversionDone
       _ADC_StartConversion
       _ServiceAD_Media
         _ADC_GetConversionResult
         _ADC_IsConversionDone
         _ADC_StartConversion
         ___lldiv
     _SRV_Display_Run
       _writeTela
         _SRV_Display_Write
           _DRV_LCD_SetCursor
             _DRV_LCD_Cmd
               _DRV_LCD_Data
           _DRV_LCD_WriteString
             _DRV_LCD_WriteChar
               _DRV_LCD_Data
     _exibetensao
       _SRV_TIMER_GetTick
   _AppTesteLM4040_inicialize
     _ADC_Initialize
     _DATAEE_ReadByte
     _SRV_Display_Clear
       _DRV_LCD_Clear
         _DRV_LCD_Cmd
           _DRV_LCD_Data
     _SRV_Display_Init
       _DRV_LCD_Init
         _DRV_LCD_Cmd
           _DRV_LCD_Data
         _DRV_LCD_Data
       _SRV_Display_BLK_ON
         _DRV_LCD_BLK
       _SRV_Display_Clear
         _DRV_LCD_Clear
           _DRV_LCD_Cmd
             _DRV_LCD_Data
       _SRV_Display_SetCursor
         _DRV_LCD_SetCursor
           _DRV_LCD_Cmd
             _DRV_LCD_Data
     _SRV_TIMER_Init
       _TMR0_SetInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _SRV_TIMER_TickInterrupt *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      4      E2       8       88.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     64      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     53      5A       1       95.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DC       6        0.0%
DATA                 0      0     1DC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 09 08:40:34 2020

                              ___fldiv@aexp 001B                                ___fldiv@bexp 001A  
                              ___fldiv@sign 0013                      __size_of_LeituraAD_run 0034  
                                        l22 4F8A                                          l25 505C  
                                        l19 5032                                          l28 5070  
                                        l70 4E9E                                          l94 501C  
                                        l97 5082                                ___awdiv@sign 0008  
                       ___wmul@multiplicand 0005                                 __CFG_BORV$3 000000  
                           _timer0ReloadVal 00FD                                __CFG_CP0$OFF 000000  
                              __CFG_CP1$OFF 000000                                __CFG_CP2$OFF 000000  
                              __CFG_CP3$OFF 000000                                         l201 4AC4  
                                       l106 50D0                                         l204 4ACA  
                                       l301 50C6                                         l206 4ACC  
                                       l134 4D88                                         l215 4F70  
                                       l224 494E                                         l240 4E68  
                                       l304 50A0                                         l209 4F54  
                                       l218 50AE                                         l227 48E8  
                                       l307 50C0                                         l500 4F08  
                                       l156 50B8                                         l246 4D16  
                                       l183 4A82                                         l255 50D4  
                                       l192 4A9E                                         l336 4FEE  
                                       l345 4FBE                                         l513 3130  
                                       l186 4A88                                         l195 4AAE  
                                       l523 4878                                         l292 50CC  
                                       l444 46BE                                         l189 4A98  
                                       l533 3DBC                                         l454 461A  
                                       l198 4AB4                                         l286 4CD6  
                                       l295 4FA4                                         l447 5048  
                                       l536 3E36                                         l465 47F6  
                                       l289 4F50                                         l490 389E  
                                       l482 372C                                         l810 4F2E  
                                       l642 42D6                                         l468 3E68  
                                       l469 3E8A                                         l645 4318  
                                       l709 1716                                         l494 389E  
                                       l806 49AA                                         l479 3F28  
                                       l647 4354                                         l743 337C  
                                       l807 49B2                                         l592 4C7C  
                                       l665 1B40                                         l753 3546  
                                       l745 3384                                         l594 4C8A  
                                       l595 4C96                                         l683 137E  
                                       l844 4762                                         l837 4752  
                                       l598 5006                                         l767 1C38  
                                       l792 222A                                         l799 20C6  
                              __CFG_CPB$OFF 000000                                __CFG_CPD$OFF 000000  
                ServiceAD_Media@accumulated 00F7                     _SRV_TIMER_TickInterrupt 5084  
                fp__SRV_TIMER_TickInterrupt 0000                                         _pad 4290  
                              ___awmod@sign 0008                               _contadorteste 00F3  
                                       prod 000FF3                                         tosl 000FFD  
                                       wreg 000FE8                                ___flmul@aexp 0022  
                              ___flmul@bexp 0023                                ___flmul@sign 001D  
                              ___flmul@temp 0028                                ___flmul@prod 0024  
                    __size_of_DRV_LCD_Clear 000E                                ___fltol@exp1 000C  
                                      l1041 4418                                        l1107 3B3E  
                                      l1054 44C8                                        l1080 3C42  
                                      l1403 2D54                                        l1075 3BFC  
                                      l1084 4DF8                                        l1340 23CE  
                                      l1405 2DCC                                        l1069 4572  
                                      l1406 2DBA                                        l1431 29A6  
                                      l1255 4018                                        l1424 27B0  
                                      l1520 3A30                                        l4000 42B4  
                                      l1248 3FF8                                        l1441 2AD6  
                                      l1433 2A1E                                        l1265 41C4  
                                      l1434 2A0C                                        l1338 241A  
                                      l4010 42FA                                        l4002 42C2  
                                      l1602 40F4                                        l1258 41A4  
                                      l1523 3A38                                        l1355 2534  
                                      l1347 26EA                                        l1339 2408  
                                      l1428 2B14                                        l4100 2B42  
                                      l1364 2604                                        l1380 4C0E  
                                      l4020 3C64                                        l1532 3286  
                                      l4012 4328                                        l4004 42CE  
                                      l1612 4A0A                                        l1365 25F2  
                                      l4110 2B7C                                        l4102 2B52  
                                      l4022 3CA2                                        l4030 3CE2  
                                      l4014 433C                                        l4006 42E2  
                                      l1472 3636                                        l4200 2DE8  
                                      l1392 2EAE                                        l4120 2BA8  
                                      l4112 2B82                                        l4104 2B62  
                                      l4032 3CF4                                        l4024 3CCA  
                                      l4008 42F6                                        l4040 4A14  
                                      l5000 4076                                        l1465 359E  
                                      l1529 3342                                        l1553 4DC0  
                                      l1617 4A12                                        l5010 48EC  
                                      l4210 2E54                                        l4202 2DF6  
                                      l1394 2D0E                                        l4130 2BE2  
                                      l4122 2BB8                                        l4114 2B88  
                                      l4106 2B64                                        l4026 3CD6  
                                      l4018 3C44                                        l4042 4A24  
                                      l4050 49FC                                        l5002 4094  
                                      l1539 4E30                                        l1547 4BC8  
                                      l1491 3D40                                        l4300 28D8  
                                      l1468 36FA                                        l5020 4930  
                                      l5012 48FC                                        l4220 2EA2  
                                      l4212 2E6E                                        l4204 2E20  
                                      l4132 2BF8                                        l4124 2BC8  
                                      l4116 2B96                                        l4108 2B6C  
                                      l4036 3D38                                        l4060 31BC  
                                      l4044 49B4                                        l5004 40A6  
                                      l5100 1DAC                                        l1397 2CD2  
                                      l4310 296E                                        l4302 28E4  
                                      l4230 26EC                                        l5022 4942  
                                      l5014 490E                                        l5030 4CF6  
                                      l4222 2EA4                                        l4214 2E8A  
                                      l4206 2E24                                        l4150 2C4C  
                                      l4134 2C08                                        l4142 2C28  
                                      l4126 2BCA                                        l4118 2B98  
                                      l4062 31CA                                        l4070 32AA  
                                      l4054 3132                                        l5006 40D0  
                                      l5110 1E5E                                        l5102 1DE6  
                                      l3350 50CE                                        l3342 4E6A  
                                      l1479 3692                                        l1583 4B76  
                                      l4320 29C4                                        l4312 298C  
                                      l4304 2900                                        l4240 2728  
                                      l4232 26F8                                        l5024 4948  
                                      l5016 4914                                        l5032 4CFA  
                                      l4400 43F2                                        l4216 2E8E  
                                      l4208 2E3E                                        l4160 2C9E  
                                      l4152 2C66                                        l4144 2C38  
                                      l4136 2C10                                        l4128 2BD2  
                                      l4072 32E6                                        l4056 3152  
                                      l1568 428E                                        l1576 4C52  
                                      l1592 4A70                                        l4048 49EA  
                                      l5120 1EE8                                        l5104 1E06  
                                      l5112 1E70                                        l5040 1B88  
                                      l3352 5072                                        l3344 4E86  
                                      l4330 2A2E                                        l4322 29C8  
                                      l4314 2996                                        l4306 292A  
                                      l4250 275A                                        l4242 2738  
                                      l4234 2706                                        l5018 491E  
                                      l5026 4CD8                                        l4082 4DFA  
                                      l4402 43F8                                        l4410 441A  
                                      l4218 2E9C                                        l4170 2CFA  
                                      l4162 2CAE                                        l4154 2C76  
                                      l4146 2C38                                        l4138 2C14  
                                      l4074 32FA                                        l4066 323A  
                                      l4058 31A8                                        l1586 50D6  
                                      l5130 1F84                                        l5122 1F1C  
                                      l5114 1E94                                        l5106 1E14  
                                      l5042 1B8C                                        l5034 1B42  
                                      l5202 50A2                                        l3346 4E88  
                                      l5220 4C6A                                        l5212 4C54  
                                      l4340 2A90                                        l4332 2A3A  
                                      l4324 29D6                                        l4316 29A4  
                                      l4308 2960                                        l4260 279A  
                                      l4252 2768                                        l4244 273E  
                                      l4236 2708                                        l5300 36CA  
                                      l5028 4CE4                                        l5204 4F8E  
                                      l4404 4408                                        l4420 4446  
                                      l4412 441E                                        l4180 2D3A  
                                      l4172 2CFC                                        l4164 2CC2  
                                      l4156 2C86                                        l4092 2B16  
                                      l4500 3A8E                                        l4076 3322  
                                      l4068 3276                                        l5140 2050  
                                      l5124 1F2E                                        l5116 1EA4  
                                      l5060 1BBE                                        l5052 1BB2  
                                      l5044 1B98                                        l5036 1B68  
                                      l3348 4E9C                                        l5230 4C76  
                                      l5222 4C6C                                        l5214 4C5C  
                                      l4350 2AF8                                        l4342 2AA4  
                                      l4334 2A48                                        l4326 2A04  
                                      l4318 29B6                                        l4270 27E4  
                                      l4262 27A0                                        l4254 276A  
                                      l4246 274E                                        l4238 2718  
                                      l5302 36DA                                        l5206 4F98  
                                      l4086 4F0A                                        l4406 4410  
                                      l4430 447E                                        l4422 444E  
                                      l4414 442C                                        l4190 2D76  
                                      l4182 2D44                                        l4174 2D0C  
                                      l4166 2CD0                                        l4158 2C96  
                                      l4094 2B22                                        l4502 3A90  
                                      l4078 3332                                        l1598 4ED4  
                                      l5142 2062                                        l5150 20DA  
                                      l5126 1F46                                        l5134 1FB0  
                                      l5118 1ED8                                        l5046 1B9A  
                                      l5070 1C26                                        l5038 1B76  
                                      l5310 50B0                                        l5208 4FA6  
                                      l5232 4C7A                                        l5224 4C6E  
                                      l5216 4C62                                        l4352 2AFA  
                                      l4344 2ABE                                        l4336 2A72  
                                      l4280 2834                                        l4272 27F0  
                                      l4264 27C0                                        l4256 277A  
                                      l4248 2754                                        l5304 36E8  
                                      l5400 37C8                                        l4600 4E4A  
                                      l4088 4F26                                        l4440 44B8  
                                      l4432 4494                                        l4424 4460  
                                      l4416 4434                                        l4192 2D84  
                                      l4184 2D52                                        l4176 2D1E  
                                      l4168 2CDC                                        l4096 2B30  
                                      l3800 227A                                        l4360 4BCA  
                                      l4504 3AA0                                        l5160 21AA  
                                      l5152 2100                                        l5144 2096  
                                      l5136 1FDE                                        l5128 1F54  
                                      l5080 1CB2                                        l5072 1C46  
                                      l5064 1BC4                                        l5056 1BB8  
                                      l5048 1BAC                                        l5240 498C  
                                      l5320 48A2                                        l5312 487A  
                                      l5226 4C70                                        l5218 4C66  
                                      l4346 2ADA                                        l4354 2B00  
                                      l4338 2A76                                        l4290 2876  
                                      l4282 2840                                        l4274 27FA  
                                      l4266 27D0                                        l4258 278A  
                                      l5306 36EA                                        l5410 3842  
                                      l5402 3802                                        l4610 4E5E  
                                      l4602 4E4C                                        l4370 4368  
                                      l4442 44C0                                        l4434 449C  
                                      l4426 4468                                        l4418 4438  
                                      l4194 2DB2                                        l4178 2D34  
                                      l4186 2D64                                        l4098 2B32  
                                      l4450 4508                                        l3810 22AC  
                                      l3802 2282                                        l4362 4BDA  
                                      l4530 3B1E                                        l4514 3ACA  
                                      l4506 3AA4                                        l5170 21E6  
                                      l5162 21B8                                        l5154 214C  
                                      l5090 1D38                                        l5082 1CC0  
                                      l5074 1C48                                        l5234 4950  
                                      l5250 46FA                                        l5242 46C0  
                                      l5330 48CA                                        l5322 48A8  
                                      l5314 4880                                        l5228 4C72  
                                      l4356 2B04                                        l4348 2AEA  
                                      l4292 2882                                        l4284 284C  
                                      l4276 2810                                        l5420 388A  
                                      l5412 3846                                        l5404 3812  
                                      l4612 4E66                                        l4604 4E54  
                                      l4380 438E                                        l4372 4370  
                                      l4436 44A2                                        l4428 4470  
                                      l4188 2D72                                        l4452 4536  
                                      l3900 2484                                        l3820 22E2  
                                      l3812 22B2                                        l3804 2292  
                                      l4532 3B2E                                        l4524 3AF2  
                                      l4516 3AD4                                        l4508 3AB2  
                                      l4700 1328                                        l4620 0FBA  
                                      l4540 3F54                                        l5164 21CC  
                                      l5084 1CE0                                        l5092 1D4A  
                                      l5076 1C6E                                        l5068 1BD0  
                                      l5236 4958                                        l5260 4742  
                                      l5252 4708                                        l5244 46D0  
                                      l5340 4C98                                        l5332 48D0  
                                      l5324 48B8                                        l5316 488E  
                                      l5350 4764                                        l4294 2892  
                                      l4286 285A                                        l4278 281C  
                                      l5270 35AE                                        l5414 3856  
                                      l5406 3816                                        l4606 4E56  
                                      l4390 43C6                                        l4382 4396  
                                      l4374 4374                                        l4366 4356  
                                      l4438 44A8                                        l4198 2DDC  
                                      l4454 4546                                        l4446 44CA  
                                      l4470 3BBC                                        l4462 3B40  
                                      l3902 2488                                        l3910 24A8  
                                      l3830 231E                                        l3822 22F2  
                                      l3814 22C0                                        l3806 2298  
                                      l4526 3AFE                                        l4518 3ADE  
                                      l3750 41C6                                        l4710 1372  
                                      l4702 132C                                        l4630 100A  
                                      l4622 0FC2                                        l4614 0F92  
                                      l4550 3FBE                                        l4542 3F5C  
                                      l5158 2184                                        l5094 1D70  
                                      l5086 1CEE                                        l5078 1CA4  
                                      l5174 21F2                                        l5238 4966  
                                      l5190 4F86                                        l5262 474C  
                                      l5254 4712                                        l5246 46E6  
                                      l5430 3D80                                        l5342 4CAC  
                                      l5510 4FFE                                        l5502 4FF0  
                                      l5334 48D6                                        l5326 48BE  
                                      l5318 4894                                        ?_pad 0013  
                                      l5360 47D4                                        l5352 4772  
                                      l4296 28AC                                        l4288 2866  
                                      l5280 35EC                                        l5272 35C4  
                                      l5264 354A                                        l5416 3870  
                                      l5408 382C                                        l4608 4E5C  
                                      l4392 43CC                                        l4384 43A8  
                                      l4376 4382                                        l4368 435A  
                                      l4456 456A                                        l4448 44F8  
                                      l4480 3C40                                        l4472 3BCA  
                                      l4464 3B6E                                        l3912 24CE  
                                      l3920 2524                                        l3904 2496  
                                      l3840 233C                                        l3832 232C  
                                      l3824 22F4                                        l3816 22C2  
                                      l3808 22AA                                        l4528 3B0E  
                                      l3760 4248                                        l3752 41D8  
                                      l4800 17F2                                        l4720 13AE  
                                      l4704 133E                                        l4712 138A  
                                      l4640 1042                                        l4632 1018  
                                      l4624 0FE6                                        l4616 0F9C  
                                      l4552 3FDE                                        l4544 3F70  
                                      l4536 3F2A                                        l4560 4114  
                                      l5176 2218                                        l5168 21D8  
                                      l5096 1D78                                        l5192 4F88  
                                      l5256 4730                                        l5248 46EE  
                                      l5432 3D8C                                        l5424 3D42  
                                      l5520 4ED6                                        l5600 480C  
                                      l5512 5000                                        l5504 4FF6  
                                      l5336 48DC                                        l5328 48C4  
                                      l5344 50C2                                        l5362 47EA  
                                      l5354 4786                                        l5370 3E7E  
                                      l4298 28BC                                        l5290 3674  
                                      l5282 361E                                        l5266 355A  
                                      l5418 3886                                        l4394 43E2  
                                      l4386 43B0                                        l4378 438A  
                                      l4458 4570                                        l4474 3BDC  
                                      l4466 3B7E                                        l3930 2578  
                                      l3922 254A                                        l3914 2502  
                                      l3906 2498                                        l3850 2350  
                                      l3842 2340                                        l3834 2330  
                                      l3818 22D2                                        l3826 22FC  
                                      l3754 41EA                                        l3770 4C32  
                                      l4810 1826                                        l4802 1800  
                                      l4730 1414                                        l4722 13CA  
                                      l4706 1350                                        l4650 10A8  
                                      l4642 1046                                        l4634 102A  
                                      l4626 0FF0                                        l4618 0FAC  
                                      l4554 3FE0                                        l4546 3F7E  
                                      l4538 3F36                                        l4570 418C  
                                      l4562 411C                                        l5098 1D86  
                                      l5194 504A                                        l5258 4740  
                                      l5450 3E02                                        l5434 3DA6  
                                      l5426 3D66                                        l5522 4EDC  
                                      l5602 4846                                        l5514 5002  
                                      l5506 4FFA                                        l5338 48E2  
                                      l5346 5096                                        l5610 5010  
                                      l5364 47F2                                        l5356 47C0  
                                      l5380 3F02                                        l5372 3EA0  
                                      l5292 3682                                        l5284 3620  
                                      l5276 35D8                                        l5268 3568  
                                      l4580 4BBE                                        l4396 43EA  
                                      l4388 43B8                                        l4476 3BEA  
                                      l4468 3BAC                                        l4484 4DC2  
                                      l3940 25A2                                        l3932 2586  
                                      l3924 255A                                        l3916 2504  
                                      l3908 24A2                                        l3860 2364  
                                      l3852 2354                                        l3844 2344  
                                      l3836 2334                                        l3828 230C  
                                      l4492 3A3A                                        l3756 41F4  
                                      l3764 4C10                                        l3772 4EA0  
                                      l4900 1B02                                        l4820 1858  
                                      l4812 1836                                        l4804 1810  
                                      l4740 145C                                        l4732 1426  
                                      l4724 1400                                        l4708 1358  
                                      l4652 10BA                                        l4636 1036  
                                      l4644 104C                                        l4628 0FF8  
                                      l4556 3FF2                                        l4548 3F90  
                                      l4572 419E                                        l4564 4130  
                                      l5460 4B38                                        l5188 4F74  
                                      l5452 3E2E                                        l5444 3DC0  
                                      l5436 3DA8                                        l5428 3D6C  
                                      l5524 4EF0                                        l5604 4856  
                                      l5516 5004                                        l5508 4FFC  
                                      l5348 50BA                                        l5612 5014  
                                      l5358 47D0                                        l5382 3F06  
                                      l5374 3EA4                                        l5366 3E38  
                                      l5294 36A0                                        l5286 362C  
                                      l5278 35E0                                        l5390 3742  
                                      l4590 4F5E                                        l4582 4BC2  
                                      l4574 4B78                                        l4398 43EC  
                                      l4478 3C3A                                        l4486 4DD8  
                                      l3950 25D4                                        l3942 25B2  
                                      l3934 2588                                        l3918 2514  
                                      l3870 23B6                                        l3862 2368  
                                      l3854 2358                                        l3846 2348  
                                      l3838 2338                                        l3790 2246  
                                      l4494 3A50                                        l3758 4212  
                                      l3766 4C1C                                        l3774 4EAC  
                                      l3782 4D8A                                        l4902 1B0A  
                                      l4830 1900                                        l4822 186A  
                                      l4814 183A                                        l4806 1814  
                                      l4750 14A4                                        l4742 146A  
                                      l4734 1438                                        l4726 1408  
                                      l4718 139C                                        l4670 118E  
                                      l4654 10D6                                        l4646 1072  
                                      l4662 1120                                        l4638 103E  
                                      l4566 413E                                        l4558 40F6  
                                      l5462 4B40                                        l5198 505E  
                                      l5454 3E2E                                        l5446 3DF0  
                                      l5438 3DB8                                        l5526 4EFC  
                                      l5470 501E                                        l5630 4624  
                                      l5614 5018                                        l5606 5008  
                                      l5384 3F1C                                        l5376 3EB8  
                                      l5368 3E5C                                        l5296 36A2  
                                      l5288 3668                                        l5392 374E  
                                      l4592 4F6E                                        l4576 4B7C  
                                      l4488 4DE8                                        l3960 262E  
                                      l3952 25EA                                        l3936 2596  
                                      l3928 256E                                        l3944 25B4  
                                      l3880 23FA                                        l3872 23C6  
                                      l3856 235C                                        l3848 234C  
                                      l3864 236C                                        l3792 2248  
                                      l3768 4C2E                                        l3776 4EB0  
                                      l4904 1B1A                                        l4840 1958  
                                      l4832 1908                                        l4824 186E  
                                      l4816 1840                                        l4808 181A  
                                      l4760 15B8                                        l4752 14B4  
                                      l4744 1482                                        l4736 1446  
                                      l4728 140C                                        l4672 11AA  
                                      l4664 1146                                        l4680 11C6  
                                      l4656 10EE                                        l4568 416C  
                                      l4920 33AC                                        l4912 3344  
                                      l5464 4B48                                        l5448 3DF2  
                                      l5640 467C                                        l5632 462C  
                                      l5480 4D76                                        l5472 4D52  
                                      l5608 500C                                        l5800 4FC0  
                                      l5378 3EF2                                        l5298 36A6  
                                      l5394 3794                                        l5386 36FC  
                                      l4586 4F56                                        l4594 4E34  
                                      l4578 4B90                                        l3970 26AA  
                                      l3962 2668                                        l3938 259E  
                                      l3946 25C2                                        l3882 23FC  
                                      l3874 23DC                                        l3866 2370  
                                      l3858 2360                                        l3794 2258  
                                      l3786 222C                                        l4498 3A64  
                                      l3778 4EC8                                        l4906 1B20  
                                      l4850 199C                                        l4842 1966  
                                      l4818 1846                                        l4826 1874  
                                      l4834 190C                                        l4770 1658  
                                      l4754 14C8                                        l4762 15BE  
                                      l4746 1494                                        l4738 144A  
                                      l4690 1250                                        l4682 11E0  
                                      l4658 10F8                                        l4930 3440  
                                      l4922 33B4                                        l4914 3352  
                                      l5466 4B64                                        l5458 4B26  
                                      l5490 4F42                                        l5642 468E  
                                      l5634 463A                                        l5626 461C  
                                      l5482 4D78                                        l5474 4D54  
                                      l5802 4FC4                                        l5396 37AC  
                                      l5388 3720                                        l5580 459A  
                                      l4588 4F5C                                        l4596 4E40  
                                      l3980 26CA                                        l3972 26AE  
                                      l3956 2614                                        l3964 266A  
                                      l3948 25C6                                        l3892 244C  
                                      l3884 2406                                        l3876 23E8  
                                      l3868 239A                                        l3796 2268  
                                      l3788 2238                                        l4860 19D2  
                                      l4852 19A4                                        l4844 1976  
                                      l4836 192A                                        l4828 18CC  
                                      l4780 16EE                                        l4772 168A  
                                      l4764 15DC                                        l4756 152C  
                                      l4748 149C                                        l4692 12AA  
                                      l4668 117C                                        l4940 34F4  
                                      l4932 3446                                        l4924 33BE  
                                      l4916 3356                                        l5492 4F46  
                                      l5644 46A8                                        l5636 4650  
                                      l5628 4620                                        l5484 4D84  
                                      l5476 4D5C                                        l5804 4FC6  
                                      l5398 37B4                                        l5590 45E2  
                                      l5582 45AC                                        l5574 4574  
                                      l3990 4A8A                                        l4598 4E42  
                                      l4950 38B4                                        l3982 26D8  
                                      l3974 26BC                                        l3966 267A  
                                      l3958 2620                                        l3894 245C  
                                      l3886 2428                                        l3878 23EC  
                                      l3798 2278                                        l4870 1A2E  
                                      l4862 19DA                                        l4854 19B4  
                                      l4846 197A                                        l4838 1946  
                                      l4790 17A6                                        l4782 1702  
                                      l4774 169A                                        l4766 1610  
                                      l4758 1584                                        l4694 12DE  
                                      l4686 1216                                        l4942 350E  
                                      l4926 33C4                                        l4934 34AA  
                                      l4918 3370                                        l5750 2F1A  
                                      l5494 50C8                                        l5486 4F30  
                                      l5638 4662                                        l5478 4D74  
                                      l5806 4FCC                                        l5592 45E6  
                                      l5584 45BC                                        l5576 4586  
                                      l3992 4AA0                                        l4960 3916  
                                      l4952 38B8                                        l3984 26DA  
                                      l3976 26C2                                        l3968 268A  
                                      l3896 246A                                        l3888 2438  
                                      l4880 1A6E                                        l4872 1A36  
                                      l4864 19E6                                        l4856 19BC  
                                      l4848 198A                                        l4792 17B8  
                                      l4784 170E                                        l4776 16AA  
                                      l4768 1642                                        l4696 12E6  
                                      l4688 124A                                        l4936 34BC  
                                      l4944 351E                                        l4928 343A  
                                      l5760 2F9A                                        l5752 2F2A  
                                      l5744 2EB0                                        l5488 4F38  
                                      l5496 4FD8                                        l5594 45F4  
                                      l5586 45C0                                        l5578 4596  
                                      l3994 4AB6                                        l4970 3942  
                                      l4954 38BC                                        l3978 26C4  
                                      l3898 2478                                        l4890 1AAA  
                                      l4882 1A80                                        l4866 19EC  
                                      l4874 1A3C                                        l4858 19CA  
                                      l4794 17CA                                        l4786 1732  
                                      l4778 16DE                                        l4698 1318  
                                      l4938 34DA                                        l5770 301E  
                                      l5762 2FAE                                        l5754 2F3E  
                                      l5746 2EC4                                        l5498 4FE2  
                                      l5596 4604                                        l5588 45D2  
                                      l3988 4A74                                        l4980 39F0  
                                      l4972 3978                                        l5860 3962  
                                      l4964 391C                                        l4956 38DA  
                                      l4948 38A0                                        l3996 4290  
                                      l4892 1AB0                                        l4884 1A8C  
                                      l4876 1A4E                                        l4868 1A12  
                                      l4796 17D8                                        l4788 1796  
                                      l5780 30A8                                        l5772 3030  
                                      l5764 2FC0                                        l5756 2F50  
                                      l5748 2F0A                                        l4982 3A02  
                                      l4966 3932                                        l4958 3912  
                                      l3998 42A0                                        l4886 1A94  
                                      l4878 1A68                                        l4798 17E0  
                                      l4990 401A                                        l5782 30D0  
                                      l5774 3070                                        l5766 2FF8  
                                      l5758 2F88                                        l5598 47F8  
                                      l5790 5034                                        l4984 3A14  
                                      l4976 39B0                                        l4968 393A  
                                      l4896 1AE4                                        l4888 1AA4  
                                      l4992 4044                                        l5784 30E2  
                                      l5776 3082                                        l5768 300A  
                                      l5792 5038                                        l4898 1AF6  
                                      l5858 1BF8                                        l5786 30F6  
                                      l5778 3096                                        l5794 503C  
                                      l4996 4050                                        l5788 3108  
                                      l5796 5040                                        l4998 405E  
                                      l5798 5044                                        STR_1 0F61  
                                      STR_2 0F70                                        STR_3 0F41  
                                      STR_4 0F70                                        STR_5 0F21  
                                      STR_6 0F51                                        STR_7 0F11  
                                      STR_8 0F01                                        STR_9 0F31  
                                      _LATA 000F89                                        _LATB 000F8A  
                                      _LATC 000F8B                                        u4000 2B42  
                                      u3200 41D8                                        _LATD 000F8C  
                                      u4001 2B3E                                        u3201 41D4  
                                      _LATE 000F8D                                        u4010 2B52  
                                      u3210 41EA                                        u4011 2B4E  
                                      u3211 41E6                                        u4100 2D1E  
                                      u4020 2B96                                        u3300 2268  
                                      u3220 4212                                        u4101 2D1A  
                                      u4021 2B92                                        u3301 2264  
                                      u3221 420E                                        u4110 2D34  
                                      u4030 2BA8                                        u3310 22AA  
                                      u3230 4248                                        u4111 2D30  
                                      u4031 2BA4                                        u3311 22A6  
                                      u3231 4244                                        u4200 2E6E  
                                      u4120 2D52                                        u4040 2BB8  
                                      u3400 23DC                                        u3320 22C0  
                                      u3240 4C52                                        u5000 1426  
                                      u4201 2E6A                                        u4121 2D4E  
                                      u4041 2BB4                                        u3401 23D8  
                                      u3321 22BC                                        u3241 4C4E  
                                      u5001 1422                                        u4210 2E9C  
                                      u4130 2D72                                        u4050 2BF8  
                                      u3410 23FA                                        u3330 22D2  
                                      u3250 4EC8                                        u5010 1438  
                                      u4211 2E98                                        u4131 2D6E  
                                      u4051 2BF4                                        u3411 23F6  
                                      u3331 22CE                                        u3251 4EC4  
                                      u5011 1434                                        u4300 294A  
                                      u4220 2706                                        u4140 2D84  
                                      u4060 2C38                                        u3500 254A  
                                      u3420 241A                                        u3340 22E2  
                                      u3260 4DBA                                        u5100 1702  
                                      u5020 1446                                        u4221 2702  
                                      u4141 2D80                                        u4061 2C34  
                                      u3501 2546                                        u3421 2416  
                                      u3341 22DE                                        u3261 4DB4  
                                      u5101 16FE                                        u5021 1442  
                                      u4310 29A4                                        u4230 2718  
                                      u4150 2DB2                                        u4070 2CAE  
                                      u3510 255A                                        u3430 2428  
                                      u3350 231E                                        u3270 4DBC  
                                      u5110 17A6                                        u5030 145C  
                                      u4311 29A0                                        u4231 2714  
                                      u4151 2DAE                                        u4071 2CAA  
                                      u3511 2556                                        u3431 2424  
                                      u3351 231A                                        u5111 17A2  
                                      u5031 1458                                        u4400 2AF8  
                                      u4320 29C4                                        u4240 2728  
                                      u6000 3720                                        u4160 2DC8  
                                      u4080 2CD0                                        u3600 262E  
                                      u3520 2586                                        u3440 2438  
                                      u3360 232C                                        u3280 2246  
                                      u5200 1958                                        u5120 17B8  
                                      u5040 146A                                        u4401 2AF4  
                                      u4321 29C0                                        u4305 2940  
                                      u4241 2724                                        u6001 371C  
                                      u4161 2DC4                                        u4081 2CCC  
                                      u3601 262A                                        u3521 2582  
                                      u3441 2434                                        u3361 2328  
                                      u3281 2242                                        u5201 1954  
                                      u5121 17B4                                        u5041 1466  
                                      u4330 29D6                                        u4250 2768  
                                      u6010 3742                                        u4410 4368  
                                      u4170 2DDC                                        u4090 2CFA  
                                      u3610 2668                                        u3530 2596  
                                      u3450 246A                                        u3370 239A  
                                      u3290 2258                                        u5210 1966  
                                      u5130 17CA                                        u5050 1494  
                                      u4331 29D2                                        u4251 2764  
                                      u6011 373E                                        u4411 4364  
                                      u4171 2DD8                                        u4091 2CF6  
                                      u3611 2664                                        u3531 2592  
                                      u3451 2466                                        u3371 2396  
                                      u3291 2254                                        u5211 1962  
                                      u5131 17C6                                        u5051 1490  
                                      u4340 2A04                                        u4260 277A  
                                      u6020 37AC                                        u3700 4AC4  
                                      u4420 4382                                        u4500 447E  
                                      u4180 2DF6                                        u3620 267A  
                                      u3540 25B2                                        u3460 2478  
                                      u3380 23B2                                        u5220 199C  
                                      u5140 17D8                                        u5060 15DC  
                                      u5300 3352                                        u6100 4EF0  
                                      u4341 2A00                                        u4261 2776  
                                      u6021 37A8                                        u3701 4AC0  
                                      u4421 437E                                        u4501 447A  
                                      u4181 2DF2                                        u3621 2676  
                                      u3541 25AE                                        u3461 2474  
                                      u3381 23AC                                        u5221 1998  
                                      u5141 17D4                                        u5061 15D8  
                                      u5301 334E                                        u6101 4EEC  
                                      u4350 2A1A                                        u4270 278A  
                                      u6030 3802                                        u4430 43A8  
                                      u4510 4494                                        u4190 2E3E  
                                      u3630 268A                                        u3550 25C2  
                                      u3470 2496                                        u3390 23B4  
                                      u3710 42A0                                        u5230 19CA  
                                      u5150 17F2                                        u5070 1642  
                                      u5310 3370                                        u4351 2A16  
                                      u4271 2786                                        u6031 37FE  
                                      u4431 43A4                                        u4511 4490  
                                      u4191 2E3A                                        u3631 2686  
                                      u3551 25BE                                        u3471 2492  
                                      u3711 429C                                        u5231 19C6  
                                      u5151 17EE                                        u5071 163E  
                                      u5311 336C                                        u4360 2A2E  
                                      u4280 27C0                                        u6040 382C  
                                      u6200 45F4                                        u5400 39EA  
                                      u4440 43C6                                        u4520 44B8  
                                      u4600 3C3A                                        u3640 26AA  
                                      u3560 25D4                                        u3480 24CE  
                                      u3800 3D2E                                        u3720 42C2  
                                      u5240 1A4E                                        u5160 1800  
                                      u5080 168A                                        u5320 34BC  
                                      u4361 2A2A                                        u4281 27BC  
                                      u6041 3828                                        u6201 45F0  
                                      u5401 39E4                                        u4441 43C2  
                                      u4521 44B4                                        u4601 3C36  
                                      u3641 26A6                                        u3561 25D0  
                                      u3481 24CA                                        u3801 3D28  
                                      u3721 42BE                                        u5241 1A4A  
                                      u5161 17FC                                        u5081 1686  
                                      u5321 34B8                                        u4370 2A48  
                                      u4290 27D0                                        u6050 3842  
                                      u5410 39EC                                        u4450 43E2  
                                      u4530 44F8                                        u4610 4DD8  
                                      u3650 26BC                                        u3570 25EA  
                                      u3490 2514                                        u3810 3D30  
                                      u3730 4318                                        u5250 1A68  
                                      u5170 1858                                        u5090 169A  
                                      u5330 34DA                                        u6210 4846  
                                      u4371 2A44                                        u4291 27CC  
                                      u6051 383E                                        u4451 43DE  
                                      u4531 44F4                                        u4611 4DD4  
                                      u3651 26B8                                        u3571 25E6  
                                      u3491 2510                                        u3731 4314  
                                      u5251 1A64                                        u5171 1854  
                                      u5091 1696                                        u5331 34D6  
                                      u6211 4842                                        u4380 2A90  
                                      u6060 3886                                        u5500 4930  
                                      u5420 3A02                                        u4460 4408  
                                      u4540 4536                                        u3660 26D8  
                                      u3580 2600                                        u4620 3A50  
                                      u3740 4328                                        u3820 4A5E  
                                      u5260 1A80                                        u5180 192A  
                                      u4700 3F54                                        u5340 34F4  
                                      u6300 2F2A                                        u6220 4866  
                                      u4381 2A8C                                        u6061 3882  
                                      u5501 492C                                        u5421 39FE  
                                      u4461 4404                                        u4541 4532  
                                      u3661 26D4                                        u3581 25FC  
                                      u4621 3A4C                                        u3741 4324  
                                      u5261 1A7C                                        u5181 1926  
                                      u4701 3F50                                        u5341 34F0  
                                      u6301 2F26                                        u6221 4860  
                                      u4390 2ABE                                        u3670 4A82  
                                      u5510 4D16                                        u5430 3A14  
                                      u4470 442C                                        u4550 456A  
                                      u3590 2614                                        u4630 3A84  
                                      u3750 3C84                                        u3910 3236  
                                      u3830 4A70                                        u5270 1ADE  
                                      u5190 1946                                        u4710 3F7E  
                                      u5350 350E                                        u6310 2F9A  
                                      u6070 3D80                                        u4391 2ABA  
                                      u3671 4A7E                                        u5511 4D12  
                                      u5431 3A10                                        u4471 4428  
                                      u4551 4566                                        u3591 2610  
                                      u3911 3232                                        u3831 4A6C  
                                      u5271 1AD8                                        u5191 1942  
                                      u4711 3F7A                                        u5351 350A  
                                      u6311 2F96                                        u6071 3D7C  
                                      u3680 4A98                                        u4480 4446  
                                      u4560 3B6E                                        u4640 3AB2  
                                      u3760 3CA2                                        u3920 325A  
                                      u3840 49E4                                        u5280 1AE0  
                                      u4800 1018                                        u5440 4044  
                                      u4720 3FBE                                        u5360 351E  
                                      u5600 1D70                                        u5520 1B68  
                                      u6320 300A                                        u6080 3DB8  
                                      u3681 4A94                                        u4481 4442  
                                      u4561 3B6A                                        u4641 3AAE  
                                      u3761 3C9E                                        u3905 31DE  
                                      u3841 49DE                                        u4801 1014  
                                      u5441 4040                                        u4721 3FBA  
                                      u5361 351A                                        u5601 1D6C  
                                      u5521 1B64                                        u6321 3006  
                                      u6081 3DB4                                        u6170 4586  
                                      u3690 4AAE                                        u5370 38DA  
                                      u4490 4460                                        u4570 3BAC  
                                      u4650 3AC6                                        u3770 3CCA  
                                      u3930 3276                                        u3906 31E8  
                                      u3850 49E6                                        u5290 1AF6  
                                      u4810 102A                                        u5450 4076  
                                      u4730 4114                                        u5610 1DAC  
                                      u5530 1C38                                        u6330 3082  
                                      u6090 3E02                                        u6226 4868  
                                      u6250 4662                                        u6171 4582  
                                      u3691 4AAA                                        u5371 38D6  
                                      u4491 445C                                        u4571 3BA8  
                                      u4651 3AC2                                        u4635 3A7A  
                                      u3771 3CC6                                        u3755 3C7A  
                                      u3931 3272                                        u3907 31F8  
                                      u3827 4A54                                        u5291 1AF2  
                                      u4811 1026                                        u5451 4072  
                                      u4731 4110                                        u5611 1DA8  
                                      u5531 1C34                                        u6331 307E  
                                      u6091 3DFE                                        u6251 465E  
                                      u6180 45AC                                        u5380 3912  
                                      u4580 3BCA                                        u4660 3AEE  
                                      u3780 3CF4                                        u3940 32CA  
                                      u3860 49FC                                        u4900 1212  
                                      u4820 1072                                        u5460 4094  
                                      u4740 413E                                        u5700 204A  
                                      u5620 1E56                                        u5540 1C46  
                                      u6340 30E2                                        u6260 468E  
                                      u6181 45A8                                        u5381 390E  
                                      u4581 3BC6                                        u4661 3AEA  
                                      u3781 3CF0                                        u3925 3250  
                                      u3861 49F8                                        u4901 120E  
                                      u4821 106E                                        u5461 4090  
                                      u4741 413A                                        u5621 1E50  
                                      u5541 1C42                                        u6341 30DE  
                                      u6261 468A                                        u6190 45D2  
                                      u5390 392E                                        u4590 3BEA  
                                      u4670 3B0E                                        u3950 32E6  
                                      u3870 317A                                        u4910 12A6  
                                      u4830 10A0                                        u5470 40A6  
                                      u4750 416C                                        u5710 2062  
                                      u5630 1E58                                        u5550 1C6E  
                                      u6191 45CE                                        u6407 4E60  
                                      u5391 392A                                        u4591 3BE6  
                                      u4671 3B0A                                        u3951 32E2  
                                      u4911 12A2                                        u4831 109A  
                                      u5471 40A2                                        u4751 4168  
                                      u5711 205E                                        u5551 1C6A  
                                      u4760 4B90                                        u4680 3B1E  
                                      u3960 3322                                        u3880 31A8  
                                      u4920 1318                                        u4840 10A2  
                                      u5480 40D0                                        u5720 2100  
                                      u5640 1E70                                        u5560 1CB2  
                                      u5800 4708                                        u6417 4F64  
                                      u4761 4B8C                                        u4681 3B1A  
                                      u3961 331E                                        u3945 32C0  
                                      u3881 31A4                                        u4921 1314  
                                      u5481 40CC                                        u5721 20FC  
                                      u5641 1E6C                                        u5561 1CAE  
                                      u5801 4704                                        u5490 48FC  
                                      u3970 4E2A                                        u4770 4BBE  
                                      u3890 31CA                                        u4930 133E  
                                      u4850 10BA                                        u5730 21AA  
                                      u5650 1EA4                                        u5570 1D30  
                                      u6290 2F0A                                        u5810 4730  
                                      u6427 460E                                        u5491 48F8  
                                      u3971 4E24                                        u4771 4BBA  
                                      u3795 3D06                                        u3891 31C6  
                                      u3875 3170                                        u4931 133A  
                                      u4851 10B6                                        u4691 3F30  
                                      u5731 21A6                                        u5651 1EA0  
                                      u5571 1D2A                                        u6291 2F06  
                                      u5811 472C                                        u5900 36DA  
                                      u5820 355A                                        u3980 4E2C  
                                      u4940 1350                                        u4860 1146  
                                      u4780 0FBA                                        u5660 1EE8  
                                      u5580 1D32                                        u5740 505A  
                                      u5901 36D6                                        u5821 3556  
                                      u6437 3860                                        u4941 134C  
                                      u4861 1142                                        u4781 0FB6  
                                      u5661 1EE4                                        u5741 5054  
                                      u6357 4644                                        u5910 36E8  
                                      u5830 3568                                        u3990 2B30  
                                      u4950 1372                                        u4870 1174  
                                      u4790 100A                                        u5670 1F2E  
                                      u5590 1D4A                                        u5750 505C  
                                      u5911 36E4                                        u5831 3564  
                                      u3991 2B2C                                        u4951 136E  
                                      u4871 116E                                        u4791 1006  
                                      u5671 1F2A                                        u5591 1D46  
                                      u6367 4886                                        u5760 4C8A  
                                      u5840 35C4                                        u4960 1398  
                                      u4880 1176                                        u5680 1FDE  
                                      u5920 4CAC                                        u5761 4C86  
                                      u5841 35C0                                        u4961 1394  
                                      u5681 1FDA                                        u5921 4CA8  
                                      u6377 489A                                        u5930 47C0  
                                      u5850 361A                                        u4970 13AE  
                                      u4890 118E                                        u5690 2048  
                                      u5931 47BC                                        u5851 3616  
                                      u4971 13AA                                        u4891 118A  
                                      u5691 2042                                        u6387 48AE  
                                      u5940 47EA                                        u5860 3664  
                                      u4980 13CA                                        u5780 49AA  
                                      u5941 47E6                                        u5861 3660  
                                      u6397 4E4E                                        u4981 13C6  
                                      u5781 49A6                                        u5950 3E5C  
                                      u5870 3682                                        u4990 1400  
                                      u5790 46E6                                        u5951 3E58  
                                      u5775 4C94                                        u5871 367E  
                                      u4991 13FC                                        u5791 46E2  
                                      u5960 3E7E                                        u5776 4C96  
                                      u5880 3692                                        u5961 3E7A  
                                      u5881 368E                                        u5970 3EA0  
                                      u5890 36A0                                        u5971 3E9C  
                                      u5891 369C                                        u5980 3EF2  
                                      u5981 3EEE                                        u5990 3F1C  
                                      u5991 3F18                                        _WPUB 000F5B  
                              ?_DRV_LCD_BLK 0001                                ?_DRV_LCD_Cmd 0001  
                                      _data 0128                                        _dbuf 0168  
                                      _vMax 00EF                                        _atoi 38A0  
                                      _main 4FC0                                        _prec 0054  
                                      _nout 00E1                                        pad@i 001A  
                                      pad@p 0017                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        indf0 000FEF  
                                      fsr2h 000FDA                                        fsr0l 000FE9  
                                      indf2 000FDF                                        fsr1l 000FE1  
                                      pad@w 001C                                        fsr2l 000FD9  
                       ServiceAD_Media@mean 0100                                        btemp 005B  
                                      _utoa 3344                               ___fpclassifyf 3C44  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 003E                               __CFG_IESO$OFF 000000  
                             __CFG_FOSC$HS1 000000                             ___fldiv@new_exp 0014  
                              _tolower$1787 000F                               __CFG_MCLRE$ON 000000  
                              ___param_bank 000000                 AppTesteLM4040_Testando@tick 00D1  
                           _SRV_Display_Run 50C8                 ??_AppTesteLM4040_Calibrando 0007  
                                     ??_pad 0019                   __size_of_DATAEE_WriteByte 0044  
                   __end_of_TMR0_Initialize 4D8A                              DRV_LCD_Cmd@cmd 0005  
            ??_TMR0_DefaultInterruptHandler 0001              __size_of_OSCILLATOR_Initialize 0012  
                              ?_exibetensao 0001               __end_of_OSCILLATOR_Initialize 5084  
                             ___fltol@sign1 000B                                       ?_atoi 000A  
                           __end_of___fladd 26EC                                       ?_main 0001  
                           __end_of___fldiv 2EB0                             __end_of___awdiv 441A  
                           __end_of___flneg 4DFA                                       _EEADR 000F74  
                                     STR_10 0F01                                       STR_11 0F7D  
                                     STR_12 0F85                                       STR_21 0F8D  
                                     STR_15 0F81                                       STR_16 0F89  
                                     STR_19 0F8D                             __end_of___awmod 44CA  
                           __end_of___flmul 2B16                             __end_of___flsub 4C10  
                           __end_of___fltol 3B40                             __end_of___lldiv 4764  
                                     ?_utoa 001E                                       _T0CON 000FD5  
                           __end_of___lodiv 401A                             ___awdiv@divisor 0005  
                           __end_of___lomod 41C6                                       i2l113 0032  
                                     i2l153 4D50                                       i2l342 5092  
                                     i2l159 50D8                             ___awdiv@counter 0007  
            __size_of_SRV_Display_SetCursor 000E                                vfpfcnvrt@fmt 0044  
                                     _TMR0H 000FD7                                vfpfcnvrt@llu 0098  
                                     _TMR0L 000FD6               __end_of_SRV_Display_SetCursor 50A2  
                                     _TRISA 000F92                                       _TRISB 000F93  
                                     _TRISC 000F94                                       _TRISD 000F95  
                                     _TRISE 000F96            __size_of_ADC_GetConversionResult 0014  
         __size_of_TMR0_SetInterruptHandler 000A                               __CFG_WRT0$OFF 000000  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                 ?_TMR0_SetInterruptHandler 0003                               __CFG_WRT3$OFF 000000  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                               ?_DRV_LCD_Data 0001  
                            __CFG_EBTR2$OFF 000000                              __CFG_EBTR3$OFF 000000  
                 ServiceAD_Media@conversion 0018                            __end_of_TMR0_ISR 4D52  
                             ?_DRV_LCD_Init 0001                               __CFG_WRTB$OFF 000000  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                     SRV_Display_Write@data 000C                             _DATAEE_ReadByte 4FF0  
                            __CFG_EBTRB$OFF 000000                                       _difan 0056  
                                     _flags 00E5                                       _fputc 41C6  
                                     _fputs 4C10                             __end_of_isdigit 4E32  
                             _LeituraAD_run 4ED6                                       atoi@n 0017  
                                     pad@fp 0013                                       atoi@s 000A  
                                     _width 00E3                                       _state 00C4  
                                     _putch 50D6                        ServiceAD_Media@index 0020  
                           __end_of_isspace 4BCA                           _SRV_TIMER_GetTick 4FA6  
                           __end_of_isupper 4DC2                                       pclath 000FFA  
                                     tablat 000FF5                                       ttemp5 005C  
                                     ttemp6 005F                                       ttemp7 0063  
                                     utoa@d 0020                                       utoa@i 003C  
                                     utoa@n 0034                                       utoa@p 0030  
                                     utoa@w 0032                                       status 000FD8  
                        ?_SRV_TIMER_GetTick 0003                                       wtemp8 005C  
                           __end_of_sprintf 4B78                              ?___fpclassifyf 0003  
                           __end_of_tolower 4A14                             __end_of_strncmp 40F6  
                          ___lodiv@dividend 0003                             __initialization 4ACE  
                             _DRV_LCD_Clear 50A2                         ??_SRV_TIMER_GetTick 0007  
                              __end_of_atoi 3A3A                                __end_of_main 4FD8  
                          _SRV_Display_Init 4F30                                __end_of_utoa 3548  
               ?_INTERRUPT_InterruptManager 0001                   ??_SRV_TIMER_TickInterrupt 0001  
                       _DRV_LCD_WriteString 4CD8                                      ??_atoi 000C  
                                    ??_main 0054                                      ??_utoa 0028  
               ??_AppTesteLM4040_Controller 002E                               __activetblptr 000003  
                ADC_StartConversion@channel 0004                              __CFG_RETEN$OFF 000000  
                            ??_DRV_LCD_Data 0003                            ___lodiv@quotient 0013  
                            ??_DRV_LCD_Init 0006                        DRV_LCD_WriteString@i 0009  
             __size_of_ADC_IsConversionDone 0014                  ?_AppTesteLM4040_inicialize 0001  
                 _AppTesteLM4040_Calibrando 4764                   __end_of_SRV_TIMER_GetTick 4FC0  
                            ?_LeituraAD_run 0001                                      _ADCON0 000FC2  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                                    ?_fputc 0003                                      ?_fputs 000C  
                                    _ADRESH 000FC4                                      _EEADRH 000F75  
                                    _ADRESL 000FC3                                      _EEDATA 000F73  
                                    _EECON2 000F7E                                      _ANCON0 000F5D  
                                    _ANCON1 000F5C                            ___awdiv@dividend 0003  
                                    ?_putch 0001                             __CFG_BBSIZ$BB2K 000000  
                            __CFG_WDTEN$OFF 000000                                      i2l5500 5084  
                                    i2l5620 4D20                                      i2l5622 4D24  
                                    i2l5624 4D38                                      i2l5616 4D18  
                                    i2l5618 4D1A                                      i2l5660 002E  
                                    i2l5656 0012                                      i2l5658 0020  
                                    _TABLAT 000FF5                        ?_DRV_LCD_WriteString 0007  
                                    _OSCCON 000FD3                               vfpfcnvrt@done 00A0  
                   __end_of_SRV_Display_Run 50CE                            __end_of___xxtofl 36FC  
                   _AppTesteLM4040_Testando 36FC                     __size_of_SRV_TIMER_Init 0018  
                            __CFG_XINST$OFF 000000                              ?_DRV_LCD_Clear 0001  
                              vfprintf@cfmt 0052                                      ___flge 3B40  
                                    ___fleq 44CA                                   ??___fladd 000B  
                                    ___wmul 4F0A                                   ??___fldiv 000B  
                                 ??___awdiv 0007                                   ??___flneg 0007  
                            __CFG_STVREN$ON 000000                                   ??___awmod 0007  
                                 ??___flmul 0019                                   ??___flsub 0032  
                                 ??___fltol 0007                                   ??___lldiv 000B  
                                 ??___lodiv 0013                                   ??___lomod 0013  
                                    _efgtoa 0F92                    __size_of_AtualizaDisplay 0282  
                    SRV_Display_Write@linha 000E                                      _floorf 3132  
                          ?_TMR0_Initialize 0001                                      clear_0 4AFE  
                                    clear_1 4B0A                                      clear_2 4B16  
                          ___awdiv@quotient 0009                             ___awmod@divisor 0005  
                     DRV_LCD_WriteChar@data 0006                                      _tensao 0162  
                           ___awmod@counter 0007                                      pad@buf 0015  
                     DRV_LCD_WriteChar@temp 0004                             exibetensao@tick 00C9  
                   __end_of_DATAEE_ReadByte 5008                                      _strcpy 4A14  
                                    _strlen 4EA0                                      fputc@c 0003  
                          DRV_LCD_BLK@state 0001                                      fputs@c 0010  
                                    fputs@i 0011                                      fputs@s 000C  
                                 ??_isdigit 0005                             ___fpclassifyf@e 000B  
                           ___fpclassifyf@u 000D                             ___fpclassifyf@x 0003  
                              __mediumconst 0000                                   ??_isspace 0005  
                                    tblptrh 000FF7                                   ??_isupper 0005  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                                    putch@c 0001                           _DRV_LCD_SetCursor 48EA  
                          __end_of_vfprintf 49B4                                      utoa@fp 001E  
         __end_of_AppTesteLM4040_inicialize 46C0    TMR0_SetInterruptHandler@InterruptHandler 0003  
                                 ??_sprintf 0054                                   ??_tolower 000B  
                __end_of_SRV_Display_BLK_ON 50C2                                   ??_strncmp 0009  
                        ?_DRV_LCD_SetCursor 0006               __size_of_INTERRUPT_Initialize 0004  
                     ??_DRV_LCD_WriteString 0009                                  ___flge@ff1 002A  
                                ___flge@ff2 002E                             ??___fpclassifyf 0007  
                              ___xxtofl@arg 000D                                ___xxtofl@exp 000C  
                         _SYSTEM_Initialize 5008                                ___xxtofl@val 0003  
                                ___fleq@ff1 0003                                  ___fleq@ff2 0007  
                                __accesstop 0060                     __end_of__initialization 4B1C  
                                ___flneg@f1 0003                   _AppTesteLM4040_Controller 4574  
         AppTesteLM4040_Calibrando@tickLast 0150                               _auxreferenica 0158  
                        ?_SYSTEM_Initialize 0001                        __size_of_DRV_LCD_BLK 0002  
                             ___rparam_used 000001                        __size_of_DRV_LCD_Cmd 0020  
                                ___fltol@f1 0003                         ??_DRV_LCD_SetCursor 0007  
              __size_of_ADC_StartConversion 001A                              __pcstackCOMRAM 0001  
                              __pidataBANK0 50DA                                __pidataBANK1 50D2  
                       ??_SYSTEM_Initialize 0007                           _SRV_Display_Clear 50C2  
                                 ?_TMR0_ISR 0001                            _DATAEE_WriteByte 4C54  
                __end_of_AppTesteLM4040_Run 504A                               __end_of_fputc 4290  
                             __end_of_fputs 4C54                               __end_of_putch 50D8  
                         _SRV_Display_Write 4F8C                          ?_SRV_Display_Clear 0001  
                         _DRV_LCD_WriteChar 4E32                    __size_of_ServiceAD_Media 00F6  
                        ?_SRV_Display_Write 000B                     _ADC_GetConversionResult 505E  
                        ?_DRV_LCD_WriteChar 0001                        __size_of_exibetensao 0082  
                 __end_of_DRV_LCD_SetCursor 4950                             ??_LeituraAD_run 0021  
                       ??_SRV_Display_Clear 0006                  __size_of_SRV_TIMER_GetTick 001A  
                       ??_SRV_Display_Write 000E                                     ??_fputc 0007  
                 __end_of_SYSTEM_Initialize 501E                                     ??_fputs 0010  
                       ??_DRV_LCD_WriteChar 0004                                     ??_putch 0003  
                                __pbssBANK0 00C4                                  __pbssBANK1 0100  
                 ??_AppTesteLM4040_Testando 002A  AppTesteLM4040_IdentificaMudanca@cont_tempo 00E7  
                                _dataeeAddr 01E0                                  _dataeeData 00FF  
                           __CFG_PLLCFG$OFF 000000                            _flag_medindoerro 00F8  
                          ?_SRV_Display_Run 0001                            DRV_LCD_Data@data 0003  
                           ??_DRV_LCD_Clear 0006                     DRV_LCD_WriteString@data 0007  
                 __end_of_SRV_Display_Clear 50C8                        __end_of_DRV_LCD_Data 4ACE  
                      __end_of_DRV_LCD_Init 48EA                                     ?___flge 002A  
                                   ?___fleq 0003            __end_of_TMR0_SetInterruptHandler 50BA  
                 __end_of_SRV_Display_Write 4FA6                                     ?___wmul 0003  
                                ??_TMR0_ISR 0001                   __end_of_DRV_LCD_WriteChar 4E6A  
                                   ?_efgtoa 0036                                     ?_floorf 001C  
                   __size_of_ADC_Initialize 0016                                     ?_strcpy 0003  
                                   ?_strlen 0003                            ?_DATAEE_ReadByte 0003  
                         ??_AtualizaDisplay 01DC                            __CFG_CANMX$PORTB 000000  
                                 ?___xxtofl 0003                                     _REFOCON 000F9A  
                                   _OSCCON2 000FD2                          __size_of_vfpfcnvrt 06EA  
                                   _TBLPTRH 000FF7                                     _TBLPTRL 000FF6  
                                   _TBLPTRU 000FF8                                     _OSCTUNE 000F9B  
                  __end_of_SRV_Display_Init 4F52                            ___lomod@dividend 0003  
                                _cont_tempo 00EB                        DATAEE_WriteByte@bAdd 0003  
                            _SRV_TIMER_Init 4FD8          __size_of_AppTesteLM4040_Calibrando 0094  
                        __size_of_writeTela 0040                             __CFG_PWRTEN$OFF 000000  
                      _ADC_InterruptHandler 00F5                                     __Hparam 0000  
                                   __Lparam 0000                                  _auxconvert 015C  
                           __size_of___flge 0104                             __size_of___fleq 00AA  
                                   ___fladd 222C                                     ___fldiv 2B16  
                                   ___awdiv 4356                                     ___flneg 4DC2  
                                   ___awmod 441A                                     ___flmul 26EC  
                                   ___flsub 4BCA                                     ___fltol 3A3A  
                                   ___lldiv 46C0                             __size_of___wmul 0026  
                                   ___lodiv 3F2A                                     ___lomod 40F6  
                                 ?_vfprintf 004C                                __psmallconst 0F00  
                           __size_of_efgtoa 0BB0                   ??_ADC_GetConversionResult 0005  
                           __size_of_floorf 0212                                     __pcinit 4ACE  
                                _erromedido 00ED                                     __ramtop 0F00  
                   SRV_Display_Write@coluna 000B                                     __ptext0 4FC0  
                                   __ptext1 5008                                     __ptext2 4D52  
                                   __ptext3 4E6A                                     __ptext4 5072  
                                   __ptext5 50CE                                     __ptext6 461C  
                                   __ptext7 4FD8                                     __ptext8 50B0  
                                   __ptext9 4F30                                   _T0CONbits 000FD5  
                    DRV_LCD_SetCursor@linha 0007                             __size_of_strcpy 005E  
                           __size_of_strlen 0036                       _OSCILLATOR_Initialize 5072  
                                   _errodif 0166                                __size_of_pad 00C6  
                                   _isdigit 4DFA                                  ??___xxtofl 0007  
                __size_of_DRV_LCD_SetCursor 0066                            ___awmod@dividend 0003  
                  ??_PIN_MANAGER_Initialize 0003                                     _isspace 4B78  
                         __CFG_MSSPMSK$MSK7 000000                                     _isupper 4D8A  
                                   efgtoa@c 003C                                     efgtoa@d 0078  
                                   efgtoa@e 0090                                     efgtoa@f 0038  
                                   efgtoa@g 008C                                     efgtoa@h 0082  
                                   efgtoa@i 008A                                     efgtoa@l 0086  
                                   efgtoa@m 0074                                     efgtoa@n 0092  
                                   efgtoa@p 007C                                     efgtoa@t 0070  
                                   efgtoa@u 0094                                     efgtoa@w 007F  
                     _SRV_Display_SetCursor 5094                           ??_ServiceAD_Media 0012  
               ??_AppTesteLM4040_inicialize 000D                                     atoi@neg 0010  
                __size_of_SYSTEM_Initialize 0016                                     _sprintf 4B26  
                                   _tolower 49B4                                     _strncmp 401A  
                      end_of_initialization 4B1C                                     floorf@e 002A  
                                   floorf@m 0026                                     floorf@u 002C  
                                   floorf@x 001C                      __end_of_SRV_TIMER_Init 4FF0  
                                   fputc@fp 0005                      ServiceAD_Media@timeout 0016  
                                   fputs@fp 000E                             ___lldiv@divisor 0007  
              __end_of_ADC_IsConversionDone 505E                             ___lldiv@counter 000F  
                __size_of_SRV_Display_Clear 0006                           __end_of_vfpfcnvrt 222C  
                                efgtoa@mode 0081                                  efgtoa@sign 007A  
                                   postdec2 000FDD                  __size_of_SRV_Display_Write 001A  
                                   postinc0 000FEE                                     postinc1 000FE6  
                                   postinc2 000FDE          __size_of_AppTesteLM4040_Controller 00A8  
                __size_of_DRV_LCD_WriteChar 0038                                  ??_vfprintf 0052  
                                   strcpy@d 000B                                     strlen@a 0005  
                                   strcpy@s 0009                                     strlen@s 0003  
                  _TMR0_SetInterruptHandler 50B0                                   _PORTEbits 000F84  
                               ___fladd@grs 0012                           __end_of_writeTela 4CD8  
                             ___xxtofl@sign 000B                         _ADC_StartConversion 4F72  
                               ___fldiv@grs 0016                                 ___fldiv@rem 000F  
                SRV_Display_SetCursor@linha 000C                    __end_of_DATAEE_WriteByte 4C98  
                       exibetensao@tickLast 0140                             ?_SRV_TIMER_Init 0001  
                               ___flmul@grs 001E                       __size_of_DRV_LCD_Data 005C  
                     __size_of_DRV_LCD_Init 0070                          _SRV_Display_BLK_ON 50BA  
                      ?_ADC_StartConversion 0001                   _AppTesteLM4040_inicialize 461C  
                  ?_SRV_TIMER_TickInterrupt 0001                __end_of_INTERRUPT_Initialize 50D2  
                            __end_of___flge 3C44                              __end_of___fleq 4574  
                               vfpfcnvrt@ap 0046                                 vfpfcnvrt@ct 00AC  
                               vfpfcnvrt@fp 0042                              __end_of___wmul 4F30  
                       ?_SRV_Display_BLK_ON 0001                              __end_of_efgtoa 1B42  
                         __size_of_TMR0_ISR 003A                              _ADC_Initialize 501E  
                            __end_of_floorf 3344                      ?_OSCILLATOR_Initialize 0001  
                                floorf@F524 0138                              __end_of_strcpy 4A72  
                            __end_of_strlen 4ED6                      ?_SRV_Display_SetCursor 000B  
                       start_initialization 4ACE                             ___lodiv@divisor 000B  
               __end_of_DRV_LCD_WriteString 4D18                             ___lodiv@counter 001B  
                  __size_of_TMR0_Initialize 0038             __size_of_PIN_MANAGER_Initialize 0036  
                              _DRV_LCD_Data 4A72                          _AppTesteLM4040_Run 5034  
                               __end_of_pad 4356                                   _LeituraAD 00DD  
                              _DRV_LCD_Init 487A                               ??_DRV_LCD_BLK 0003  
                      ??_SRV_Display_BLK_ON 0003                               ??_DRV_LCD_Cmd 0004  
                       ?_AppTesteLM4040_Run 0001                       __end_of___fpclassifyf 3D42  
                        DRV_LCD_SetCursor@y 0009                          DRV_LCD_SetCursor@z 0008  
                       DATAEE_ReadByte@bAdd 0003    AppTesteLM4040_IdentificaMudanca@tickLast 014C  
                     ??_ADC_StartConversion 0003                                 vfprintf@fmt 004E  
                                  ??___flge 0032                                    ??___fleq 000B  
                           _AtualizaDisplay 2EB0                 SRV_Display_SetCursor@coluna 000B  
                                  ??___wmul 0007                                    ??_efgtoa 003D  
                    __end_of_ADC_Initialize 5034                                 __pdataBANK0 00FF  
                               __pdataBANK1 01E0                                    ??_floorf 0020  
                             ??_exibetensao 0007                        ??_AppTesteLM4040_Run 0054  
                                  ??_strcpy 0007                                    ??_strlen 0005  
                       AtualizaDisplay@tick 00CD                                   ___fladd@a 0007  
                                 ___fladd@b 0003                                   ___fldiv@a 0007  
                                 ___fldiv@b 0003                                   ___flmul@a 0015  
                                 ___flmul@b 0011                                 __pbssCOMRAM 0054  
                                 ___flsub@a 002E                                   ___flsub@b 002A  
                             __pcstackBANK0 0060                               __pcstackBANK1 01DC  
           AppTesteLM4040_Testando@tickLast 0148                        _ADC_IsConversionDone 504A  
                     __end_of_LeituraAD_run 4F0A                           __size_of___xxtofl 01B4  
                      _convertedValueTensao 0164                           ?_SRV_Display_Init 0001  
                        ??_SRV_Display_Init 000D             __end_of_SRV_TIMER_TickInterrupt 5094  
                                 _atoi$1672 0012                                   _atoi$1673 0016  
                                 _atoi$1674 0014                       _TMR0_InterruptHandler 01DA  
                                 __pnvBANK0 00FD                                   __pnvBANK1 01D8  
                               _efgtoa$1162 0064                                 _efgtoa$1163 0066  
                               _efgtoa$1172 006A                                 _efgtoa$1173 006C  
                               _efgtoa$1174 006E                                 _efgtoa$1168 0068  
                    _PIN_MANAGER_Initialize 4E6A                         __end_of_DRV_LCD_BLK 50D6  
                     __end_of_DRV_LCD_Clear 50B0                         __end_of_DRV_LCD_Cmd 4F72  
                                 __pintcode 0008                                    ?___fladd 0003  
                                  ?___fldiv 0003                                    ?___awdiv 0003  
                                  ?___flneg 0003                                    ?___awmod 0003  
                                  ?___flmul 0011                                    ?___flsub 002A  
                                  ?___fltol 0003                                    ?___lldiv 0003  
                  __size_of_SRV_Display_Run 0006                                    ?___lodiv 0003  
                                  ?___lomod 0003                             ?_ADC_Initialize 0001  
                           _ServiceAD_Media 3D42                ??_INTERRUPT_InterruptManager 0001  
                                 _contTeste 0160                           __size_of_vfprintf 0064  
                           ___lomod@divisor 000B                                 __smallconst 0F00  
                           ___lomod@counter 0013                                    ?_isdigit 0003  
                                 _count_aux 01D8                       ?_ADC_IsConversionDone 0001  
                                  ?_isspace 0003                         __end_of_exibetensao 487A  
                                  ?_isupper 0003                    ?_AppTesteLM4040_Testando 0001  
                                  ?_sprintf 00B0                                    ?_tolower 0009  
                            __size_of_fputc 00CA                              __size_of_fputs 0044  
                  __size_of_DATAEE_ReadByte 0018                                    ?_strncmp 0003  
                            __size_of_putch 0002                        _INTERRUPT_Initialize 50CE  
                     DRV_LCD_SetCursor@temp 000A                           ??_TMR0_Initialize 0005  
                            ___wmul@product 0007                                    _LATDbits 000F8C  
                   __end_of_AtualizaDisplay 3132                                    _LATEbits 000F8D  
       __size_of_INTERRUPT_InterruptManager 0036                  ??_TMR0_SetInterruptHandler 0005  
                                  i2u623_40 4D38                                    i2u623_41 4D34  
                                  _PIR4bits 000FB7                                    i2u624_48 4D3E  
                                  i2u624_49 4D50                                    i2u627_40 0020  
                                  i2u627_41 001C                                    i2u628_40 002E  
                                  i2u628_41 002A                                    _RCONbits 000FD0  
                                  _TMR0_ISR 4D18                                   _vfpfcnvrt 1B42  
                                _ADCON0bits 000FC2                           ___wmul@multiplier 0003  
                          __CFG_SOSCSEL$DIG 000000          __size_of_AppTesteLM4040_inicialize 00A4  
  __end_of_AppTesteLM4040_IdentificaMudanca 3F2A   __size_of_AppTesteLM4040_IdentificaMudanca 00F2  
        ??_AppTesteLM4040_IdentificaMudanca 0007           ?_AppTesteLM4040_IdentificaMudanca 0001  
          _AppTesteLM4040_IdentificaMudanca 3E38                                   _txtLinha1 01C8  
                                 _txtLinha2 01B8                       DATAEE_WriteByte@bData 0005  
                          ??_SRV_TIMER_Init 0005                                _isspace$1703 0009  
                                 _writeTela 4C98                                  vfpfcnvrt@c 00AF  
                                vfpfcnvrt@f 00A8                                 _INTCON2bits 000FF1  
                     ?_INTERRUPT_Initialize 0001                          DRV_LCD_WriteChar@y 0005  
                         ?_DATAEE_WriteByte 0003                                 _DRV_LCD_BLK 50D4  
                               _DRV_LCD_Cmd 4F52                            _tensaoreferencia 0058  
                        ??_DATAEE_WriteByte 0006                                  _EECON1bits 000F7F  
                                  __Hrparam 0000                    ServiceAD_Media@valueMean 001A  
                   __end_of_ServiceAD_Media 3E38                                  vfprintf@ap 0050  
                                  __Lrparam 0000                                  vfprintf@fp 004C  
                  ?_ADC_GetConversionResult 0003                          __CFG_BOREN$SBORDIS 000000  
                ?_AppTesteLM4040_Calibrando 0001                     ??_OSCILLATOR_Initialize 0003  
                          __size_of___fladd 04C0                            __size_of___fldiv 039A  
                          __size_of___awdiv 00C4                            __size_of___flneg 0038  
                          __size_of___awmod 00B0                            __size_of___flmul 042A  
                          __size_of___flsub 0046                            __size_of___fltol 0106  
                          __size_of___lldiv 00A4                            __size_of___lodiv 00F0  
                          __size_of___lomod 00D0                                  ?_vfpfcnvrt 0042  
                               _exibetensao 47F8                     ??_SRV_Display_SetCursor 000C  
           __end_of_AppTesteLM4040_Testando 38A0                          ___fpclassifyf@F463 013C  
                    ??_ADC_IsConversionDone 0003                           ??_SRV_Display_Run 000F  
                                sprintf@fmt 00B2                                    ___xxtofl 3548  
          __size_of_SRV_TIMER_TickInterrupt 0010                            __size_of_isdigit 0038  
                          __size_of_isspace 0052                                    __ptext10 5094  
                                  __ptext11 50C2                                    __ptext20 50C8  
                                  __ptext12 50A2                                    __ptext21 4C98  
                                  __ptext13 50BA                                    __ptext30 4950  
                                  __ptext22 4ED6                                    __ptext14 50D4  
                                  __ptext31 1B42                                    __ptext23 3D42  
                                  __ptext15 487A                                    __ptext40 4290  
                                  __ptext32 3344                                    __ptext24 46C0  
                                  __ptext16 4FF0                                    __ptext41 4EA0  
                                  __ptext33 40F6                                    __ptext25 4F72  
                                  __ptext17 501E                                    __ptext50 4DC2  
                                  __ptext42 4C10                                    __ptext34 3F2A  
                                  __ptext26 504A                                    __ptext18 5034  
                                  __ptext51 3B40                                    __ptext43 41C6  
                                  __ptext35 401A                                    __ptext27 505E  
                                  __ptext19 47F8                                    __ptext60 4F8C  
                                  __ptext52 44CA                                    __ptext44 50D6  
                                  __ptext36 0F92                                    __ptext28 2EB0  
                                  __ptext61 4CD8                                    __ptext53 2B16  
                                  __ptext45 3132                                    __ptext37 49B4  
                                  __ptext29 4B26                                    __ptext70 4C54  
                                  __ptext62 4E32                                    __ptext54 441A  
                                  __ptext46 3C44                                    __ptext38 4D8A  
                                  __ptext71 3E38                                    __ptext63 48EA  
                                  __ptext55 4356                                    __ptext47 3A3A  
                                  __ptext39 4A14                                    __ptext72 4764  
                                  __ptext64 4F52                                    __ptext56 38A0  
                                  __ptext48 4BCA                                    __ptext73 4FA6  
                                  __ptext65 4A72                                    __ptext57 4B78  
                                  __ptext49 222C                                    __ptext66 4574  
                                  __ptext58 4DFA                                    __ptext75 4D18  
                                  __ptext67 36FC                                    __ptext59 4F0A  
                                  __ptext76 5084                                    __ptext68 3548  
                                  __ptext77 50D8                                    __ptext69 26EC  
                                  __ptext78 0000                            __size_of_isupper 0038  
                                ?_writeTela 0001                     DRV_LCD_SetCursor@coluna 0006  
                          __size_of_sprintf 0052                            __size_of_tolower 0060  
               DATAEE_WriteByte@GIEBitValue 0006                                  strcpy@dest 0003  
                          __size_of_strncmp 00DC                                    _readData 005A  
                             __size_of_atoi 019A                               __size_of_main 0018  
                             __size_of_utoa 0204                            ?_AtualizaDisplay 0001  
      __end_of_TMR0_DefaultInterruptHandler 50DA       __size_of_TMR0_DefaultInterruptHandler 0002  
              _TMR0_DefaultInterruptHandler 50D8                           ??_DATAEE_ReadByte 0005  
                                  _tickRate 00F9                                    efgtoa@fp 0036  
                                  efgtoa@ne 0076                                    efgtoa@pp 0072  
                                  efgtoa@ou 0060                                    int$flags 005B  
         __end_of_AppTesteLM4040_Calibrando 47F8                                    _vfprintf 4950  
        __end_of_INTERRUPT_InterruptManager 003E                  _INTERRUPT_InterruptManager 0008  
                               _telaDisplay 00F1                         __CFG_INTOSCSEL$HIGH 000000  
                ?_AppTesteLM4040_Controller 0001                              _vfpfcnvrt$1200 00A6  
                            _vfpfcnvrt$1195 00A2                              _vfpfcnvrt$1196 00A4  
                                _INTCONbits 000FF2                     ServiceAD_Media@valueAux 001C  
                                  isdigit@c 0003                      ??_INTERRUPT_Initialize 0003  
                                  intlevel2 0000                                   sprintf@ap 00BC  
              __size_of_DRV_LCD_WriteString 0040                 __size_of_SRV_Display_BLK_ON 0008  
               __end_of_ADC_StartConversion 4F8C                                    isspace@c 0003  
                          ___lldiv@dividend 0003                     ?_PIN_MANAGER_Initialize 0001  
           __end_of_ADC_GetConversionResult 5072                                   strcpy@src 0005  
                                  isupper@c 0003                                   strncmp@_l 0003  
                                 strncmp@_r 0005                            ??_ADC_Initialize 0003  
                          ?_ServiceAD_Media 0010             fp__TMR0_DefaultInterruptHandler 0000  
             ?_TMR0_DefaultInterruptHandler 0001               AppTesteLM4040_Calibrando@tick 00D9  
                               efgtoa@nmode 007E                   __size_of_SRV_Display_Init 0022  
                        __CFG_WDTPS$1048576 000000         AppTesteLM4040_Calibrando@cont_tempo 00E9  
                               ??_vfpfcnvrt 0048                 __size_of_AppTesteLM4040_Run 0016  
                   AtualizaDisplay@tickLast 0144                                    sprintf@f 00BE  
                                  tolower@c 0009                                    sprintf@s 00B0  
         __end_of_AppTesteLM4040_Controller 461C                      __size_of___fpclassifyf 00FE  
                          ___lldiv@quotient 000B                                 _tensaoexibe 0154  
                           _TMR0_Initialize 4D52                                    strncmp@l 000A  
                                  strncmp@n 0007                                    strncmp@r 000C  
                               ??_writeTela 000F                               ___fladd@signs 000F  
            __end_of_PIN_MANAGER_Initialize 4EA0        AppTesteLM4040_IdentificaMudanca@tick 00D5  
                              ___fladd@aexp 0010                                ___fladd@bexp 0011  
                       __CFG_BORPWR$ZPBORMV 000000            __size_of_AppTesteLM4040_Testando 01A4  
